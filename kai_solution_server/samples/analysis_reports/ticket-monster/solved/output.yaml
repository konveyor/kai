- name: azure/springboot
  description: Recommend OpenFeign instead of Feign.
  skipped:
  - azure-aws-config-credential-01000
  - azure-aws-config-region-02000
  - azure-aws-config-s3-03000
  - azure-aws-config-secret-manager-05000
  - azure-aws-config-sqs-04000
  - azure-file-system-01000
  - azure-file-system-02000
  - azure-file-system-03000
  - azure-java-version-01000
  - azure-java-version-02000
  - azure-logging-0000
  - azure-os-specific-00001
  - azure-os-specific-00002
  - azure-password-01000
  - eap-to-azure-appservice-certificates-001
  - eap-to-azure-appservice-datasource-driver-01000
  - eap-to-azure-appservice-environment-variables-001
  - eap-to-azure-appservice-pom-001
  - spring-boot-to-azure-cache-redis-01000
  - spring-boot-to-azure-cache-redis-02000
  - spring-boot-to-azure-config-server-01000
  - spring-boot-to-azure-database-jdbc-01000
  - spring-boot-to-azure-database-mongodb-02000
  - spring-boot-to-azure-database-r2dbc-03000
  - spring-boot-to-azure-eureka-01000
  - spring-boot-to-azure-eureka-02000
  - spring-boot-to-azure-feign-01000
  - spring-boot-to-azure-identity-provider-01000
  - spring-boot-to-azure-java-fx-01000
  - spring-boot-to-azure-jks-01000
  - spring-boot-to-azure-jms-broker-01000
  - spring-boot-to-azure-mq-config-artemis-01000
  - spring-boot-to-azure-mq-config-kafka-01000
  - spring-boot-to-azure-mq-config-rabbitmq-01000
  - spring-boot-to-azure-port-01000
  - spring-boot-to-azure-schedule-job-01000
  - spring-boot-to-azure-static-content-01000
  - spring-boot-to-azure-swing-01000
  - spring-boot-to-azure-system-config-01000
  - spring-boot-to-azure-version-01000
  - spring-boot-to-azure-version-02000
  - spring-boot-to-azure-version-03000
  - spring-boot-to-azure-zipkin-01000
  - spring-cloud-to-azure-version-01000
  - spring-cloud-to-azure-version-02000
  - spring-cloud-to-azure-version-03000
  - tomcat-to-azure-external-resources-01000
- name: camel3
  description: Rules for changes between Camel 3.0 and Camel 4.0
  skipped:
  - xml-changed-camel41-00003
  - xml-changed-camel41-00004
  - xml-changed-camel41-00005
  - xml-changed-camel41-00006
  - xml-changed-camel41-00007
  - xml-changed-camel41-00008
  - xml-changed-camel41-00009
  - xml-changed-camel41-00010
  - xml-changed-camel41-00011
  - xml-changed-camel41-00012
  - xml-changed-camel41-00013
  - xml-changed-camel41-00014
  - xml-changed-camel41-00015
  - xml-changedcomponent-camel4-00001
  - xml-changedcomponent-camel4-00002
  - xml-removed-camel4-00001
  - xml-removed-camel4-00002
  - xml-removed-camel4-00003
  - xml-removed-camel4-00004
  - xml-removed-camel4-00005
  - xml-removed-camel4-00006
  - xml-removed-camel4-00007
  - xml-removed-camel4-00008
  - xml-removed-camel4-00010
  - xml-removed-camel4-00011
  - xml-removed-camel4-00012
  - xml-removed-camel4-00013
  - xml-removed-camel4-00014
  - xml-removed-camel4-00015
  - xml-removed-camel4-00016
  - xml-removed-camel4-00017
  - xml-removed-camel4-00018
  - xml-removed-camel4-00019
  - xml-removed-camel4-00020
  - xml-removed-camel4-00021
  - xml-removed-camel4-00022
  - xml-removed-camel4-00023
  - xml-removed-camel4-00024
  - xml-removed-camel4-00025
  - xml-removed-camel4-00026
  - xml-removed-camel4-00027
  - xml-removed-camel4-00028
  - xml-removed-camel4-00029
  - xml-removed-camel4-00030
  - xml-removed-camel4-00031
  - xml-removed-camel4-00032
  - xml-removed-camel4-00033
  - xml-removed-camel4-00034
  - xml-removed-camel41-00000
  - xml-removed-camel41-00001
  - xml-removed-camel41-00002
  - xml-removed-camel41-00016
  - xml-removed-camel41-00017
  - xml-removed-camel41-00018
- name: camel3/camel2
  description: Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3
  skipped:
  - classes-removed-camel31-00001
  - component-changes-00001
  - component-changes-00002
  - component-changes-00003
  - component-changes-00004
  - component-changes-00005
  - component-changes-00006
  - component-changes-00007
  - component-changes-00008
  - component-changes-00009
  - component-changes-00010
  - component-changes-00011
  - component-changes-00012
  - component-changes-00013
  - component-changes-00014
  - component-changes-00015
  - component-changes-00016
  - component-changes-00017
  - component-changes-00018
  - component-changes-00019
  - java-camel33-00001
  - java-camel36-00001
  - java-dsl-changes-00001
  - java-generic-information-00000
  - java-generic-information-00001
  - java-generic-information-00002
  - java-generic-information-00004
  - java-generic-information-00005
  - java-generic-information-00006
  - java-generic-information-00008
  - java-generic-information-00009
  - java-generic-information-00010
  - java-generic-information-00011
  - java-generic-information-00012
  - java-generic-information-00013
  - java-generic-information-00014
  - java-generic-information-00015
  - java-generic-information-00016
  - java-generic-information-00017
  - java-generic-information-00018
  - java-generic-information-00019
  - java-generic-information-00021
  - java-generic-information-00022
  - java-generic-information-00023
  - java-generic-information-00024
  - java-generic-information-00025
  - java-generic-information-00026
  - java-generic-information-00027
  - java-generic-information-00028
  - java-generic-information-00029
  - java-generic-information-00030
  - java-generic-information-00031
  - java-generic-information-00032
  - java-generic-information-00033
  - java-generic-information-00034
  - java-generic-information-00035
  - java-generic-information-00036
  - java-generic-information-00037
  - java-generic-information-00038
  - java-generic-information-00039
  - java-generic-information-00040
  - java-generic-information-00041
  - java-generic-information-00042
  - java-generic-information-00043
  - java-generic-information-00044
  - java-generic-information-00045
  - java-generic-information-00046
  - java-generic-information-00047
  - java-generic-information-00048
  - java-generic-information-00049
  - java-generic-information-00050
  - java-generic-information-00051
  - java-generic-information-00052
  - java-generic-information-camel37-00000
  - java-generic-information-camel37-00001
  - java-generic-information-camel37-00002
  - java-generic-information-camel37-00003
  - java-generic-information-camel37-00004
  - java-generic-information-camel37-00005
  - java-generic-information-camel37-00006
  - java-generic-information-camel37-00007
  - java-generic-information-camel37-00007-01
  - java-generic-information-camel37-00008
  - java-generic-information-camel37-00009
  - java-generic-information-camel37-00010
  - java-generic-information-camel37-00011
  - java-generic-information-camel37-00012
  - java-generic-information-camel37-00013
  - java-generic-information-camel37-00014
  - java-generic-information-camel37-00015
  - java-generic-information-camel37-00016
  - java-multiple-camelcontexts-per-application-not-supported-00000
  - java-multiple-camelcontexts-per-application-not-supported-00001
  - jndiregistry-removed-camel32-00001
  - properties-removed-camel310-00002
  - properties-removed-camel310-00003
  - properties-removed-camel310-00004
  - properties-removed-camel310-00005
  - properties-removed-camel310-00006
  - properties-removed-camel310-00007
  - properties-removed-camel310-00008
  - properties-removed-camel310-00009
  - properties-removed-camel310-00010
  - properties-removed-camel310-00011
  - properties-removed-camel310-00012
  - properties-removed-camel310-00013
  - properties-removed-camel311-00001
  - properties-removed-camel311-00002
  - properties-removed-camel315-00001
  - properties-removed-camel315-00002
  - properties-removed-camel315-00003
  - properties-removed-camel315-00004
  - properties-removed-camel315-00005
  - properties-removed-camel315-00006
  - properties-removed-camel315-00007
  - properties-removed-camel315-00008
  - properties-removed-camel315-00009
  - properties-removed-camel315-00010
  - properties-removed-camel315-00011
  - properties-removed-camel315-00012
  - properties-removed-camel315-00013
  - properties-removed-camel315-00014
  - properties-removed-camel315-00015
  - properties-removed-camel38-00001
  - properties-removed-camel38-00002
  - properties-removed-camel38-00003
  - xml-314-00001
  - xml-315-00001
  - xml-changed-camel311-00001
  - xml-changed-camel320-00001
  - xml-changed-camel320-00002
  - xml-changed-camel320-00003
  - xml-changed-camel320-00004
  - xml-changed-camel320-00005
  - xml-changed-camel321-00001
  - xml-changed-camel321-00002
  - xml-changed-camel321-00003
  - xml-changed-camel321-00004
  - xml-changed-camel321-00005
  - xml-dsl-changes-00001
  - xml-dsl-changes-00002
  - xml-dsl-changes-00003
  - xml-dsl-changes-00004
  - xml-dsl-changes-00005
  - xml-dsl-changes-00006
  - xml-dsl-changes-00007
  - xml-dsl-changes-00008
  - xml-dsl-changes-00009
  - xml-java-versions-00001
  - xml-java-versions-00002
  - xml-java-versions-00003
  - xml-legacy-camel317-00001
  - xml-legacy-camel317-00002
  - xml-legacy-camel317-00003
  - xml-legacy-camel317-00004
  - xml-moved-camel31-00001
  - xml-moved-camel31-00002
  - xml-moved-camel31-00003
  - xml-moved-camel32-00003
  - xml-moved-camel32-00004
  - xml-moved-camel32-00005
  - xml-moved-camel34-00001
  - xml-moved-components-00012
  - xml-moved-components-00013
  - xml-moved-components-00014
  - xml-moved-components-00015
  - xml-removed-camel31-00001
  - xml-removed-camel31-00002
  - xml-removed-camel310-00001
  - xml-removed-camel311-00001
  - xml-removed-camel312-00001
  - xml-removed-camel312-00002
  - xml-removed-camel312-00003
  - xml-removed-camel312-00004
  - xml-removed-camel313-00001
  - xml-removed-camel313-00003
  - xml-removed-camel315-00001
  - xml-removed-camel315-00002
  - xml-removed-camel316-00001
  - xml-removed-camel316-00002
  - xml-removed-camel317-00001
  - xml-removed-camel317-00002
  - xml-removed-camel317-00003
  - xml-removed-camel317-00004
  - xml-removed-camel317-00005
  - xml-removed-camel317-00006
  - xml-removed-camel317-00007
  - xml-removed-camel317-00008
  - xml-removed-camel317-00009
  - xml-removed-camel317-00010
  - xml-removed-camel317-00011
  - xml-removed-camel317-00012
  - xml-removed-camel317-00013
  - xml-removed-camel317-00014
  - xml-removed-camel317-00015
  - xml-removed-camel317-00016
  - xml-removed-camel317-00017
  - xml-removed-camel318-00001
  - xml-removed-camel318-00002
  - xml-removed-camel318-00003
  - xml-removed-camel318-00004
  - xml-removed-camel319-00001
  - xml-removed-camel319-00002
  - xml-removed-camel319-00003
  - xml-removed-camel319-00004
  - xml-removed-camel319-00005
  - xml-removed-camel319-00006
  - xml-removed-camel32-00001
  - xml-removed-camel32-00002
  - xml-removed-camel32-00003
  - xml-removed-camel32-00004
  - xml-removed-camel32-00005
  - xml-removed-camel32-00006
  - xml-removed-camel32-00007
  - xml-removed-camel32-00008
  - xml-removed-camel32-00010
  - xml-removed-camel34-00001
  - xml-removed-camel35-00001
  - xml-removed-camel36-00001
  - xml-removed-camel39-00002
  - xml-removed-camel39-00004
  - xml-removed-camel39-00005
  - xml-removed-camel39-00006
  - xml-removed-camel39-00007
  - xml-removed-camel39-00008
  - xml-removed-camel39-00009
  - xml-removed-camel39-00010
  - xml-removed-camel39-00011
  - xml-removed-camel39-00012
  - xml-removed-camel39-00013
  - xml-removed-camel39-00014
  - xml-removed-camel39-00015
  - xml-removed-camel39-00016
  - xml-removed-camel39-00017
  - xml-removed-camel39-00018
  - xml-removed-camel39-00019
  - xml-removed-camel39-00020
  - xml-removed-components-00000
  - xml-removed-components-00001
  - xml-removed-components-00002
  - xml-removed-components-00003
  - xml-removed-components-00004
  - xml-removed-components-00005
  - xml-removed-components-00005-01
  - xml-removed-components-00006
  - xml-removed-components-00007
  - xml-removed-components-00007-01
  - xml-removed-components-00008
  - xml-removed-components-00008-01
  - xml-renamed-components-00000
  - xml-renamed-components-00001
  - xml-renamed-components-000019
  - xml-renamed-components-00002
  - xml-renamed-components-000020
  - xml-renamed-components-000023
  - xml-renamed-components-000024
  - xml-renamed-components-000027
  - xml-renamed-components-000028
  - xml-renamed-components-000029
  - xml-renamed-components-00003
  - xml-renamed-components-00004
  - xml-renamed-components-00005
  - xml-renamed-components-00006
  - xml-renamed-components-00007
  - xml-renamed-components-00008
  - xml-renamed-components-00009
  - xml-renamed-components-00010
  - xml-renamed-components-00011
  - xml-renamed-components-00012
  - xml-renamed-components-00013
  - xml-renamed-components-00014
  - xml-renamed-components-00015
  - xml-renamed-components-00016
  - xml-renamed-components-00017
  - xml-renamed-components-00018
  - xml-renamed-components-00021
  - xml-renamed-components-00022
  - xml-renamed-components-00025
  - xml-renamed-components-00026
- name: cloud-readiness
  description: This ruleset detects logging configurations that may be problematic when migrating an application to a cloud environment.
  violations:
    localhost-http-00001:
      description: Local HTTP Calls
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - localhost
      incidents:
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: The app is trying to access local resource by HTTP, please try to migrate the resource to cloud
        codeSnip: "  1  package org.jboss.examples.ticketmonster.rest;\n  2  \n  3  import org.ff4j.FF4j;\n  4  import org.jboss.examples.ticketmonster.model.*;\n  5  import org.jboss.examples.ticketmonster.orders.OrdersRequestDTO;\n  6  import org.jboss.examples.ticketmonster.service.AllocatedSeats;\n  7  import org.jboss.examples.ticketmonster.service.SeatAllocationService;\n  8  import org.jboss.examples.ticketmonster.util.qualifier.Cancelled;\n  9  import org.jboss.examples.ticketmonster.util.qualifier.Created;\n 10  import org.jboss.resteasy.client.jaxrs.ResteasyClient;\n 11  import org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder;\n 12  \n 13  import javax.ejb.Stateless;\n 14  import javax.enterprise.event.Event;\n 15  import javax.inject.Inject;\n 16  import javax.validation.ConstraintViolation;\n 17  import javax.validation.ConstraintViolationException;\n 18  import javax.ws.rs.*;\n 19  import javax.ws.rs.client.Client;\n 20  import javax.ws.rs.client.ClientBuilder;\n 21  import javax.ws.rs.client.Entity;\n 22  import javax.ws.rs.core.MediaType;\n 23  import javax.ws.rs.core.MultivaluedHashMap;\n 24  import javax.ws.rs.core.Response;\n 25  import java.util.*;\n 26  \n 27  /**\n 28   * <p>\n 29   *     A JAX-RS endpoint for handling {@link Booking}s. Inherits the GET\n 30   *     methods from {@link BaseEntityService}, and implements additional REST methods.\n 31   * </p>\n 32   *\n 33   * @author Marius Bogoevici\n 34   * @author Pete Muir\n 35   */\n 36  @Path(\"/bookings\")\n 37  /**\n 38   * <p>\n 39   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n 40   * </p>\n 41   */\n 42  @Stateless\n 43  public class BookingService extends BaseEntityService<Booking> {\n 44  \n 45      @Inject\n 46      SeatAllocationService seatAllocationService;\n 47  \n 48      @Inject\n 49      FF4j ff;\n 50  \n 51      @Inject @Cancelled\n 52      private Event<Booking> cancelledBookingEvent;\n 53  \n 54      @Inject @Created\n 55      private Event<Booking> newBookingEvent;\n 56  \n 57      private String ordersServiceUri = \"http://localhost:9090/rest/bookings\";\n 58      \n 59      public BookingService() {\n 60          super(Booking.class);\n 61      }\n 62      \n 63      @DELETE\n 64      public Response deleteAllBookings() {\n 65      \tList<Booking> bookings = getAll(new MultivaluedHashMap<String, String>());\n 66      \tfor (Booking booking : bookings) {\n 67      \t\tdeleteBooking(booking.getId());\n 68      \t}\n 69          return Response.noContent().build();\n 70      }\n 71  \n 72      /**\n 73       * <p>\n 74       * Delete a booking by id\n 75       * </p>\n 76       * @param id\n 77       * @return\n 78       */\n 79      @DELETE\n 80      @Path(\"/{id:[0-9][0-9]*}\")\n 81      public Response deleteBooking(@PathParam(\"id\") Long id) {\n 82          Booking booking = getEntityManager().find(Booking.class, id);\n 83          if (booking == null) {\n 84              return Response.status(Response.Status.NOT_FOUND).build();\n 85          }\n 86          getEntityManager().remove(booking);\n 87          // Group together seats by section so that we can deallocate them in a group\n 88          Map<Section, List<Seat>> seatsBySection = new TreeMap<Section, java.util.List<Seat>>(SectionComparator.instance());\n 89          for (Ticket ticket : booking.getTickets()) {\n 90              List<Seat> seats = seatsBySection.get(ticket.getSeat().getSection());\n 91              if (seats == null) {\n 92                  seats = new ArrayList<Seat>();\n 93                  seatsBySection.put(ticket.getSeat().getSection(), seats);\n 94              }\n 95              seats.add(ticket.getSeat());\n 96          }\n 97          // Deallocate each section block\n 98          for (Map.Entry<Section, List<Seat>> sectionListEntry : seatsBySection.entrySet()) {\n 99              seatAllocationService.deallocateSeats( sectionListEntry.getKey(),\n100                      booking.getPerformance(), sectionListEntry.getValue());\n101          }\n102          cancelledBookingEvent.fire(booking);\n103          return Response.noContent().build();\n104      }\n105  \n106      /**\n107       * <p>\n108       *   Create a booking. Data is contained in the bookingRequest object\n109       * </p>\n110       * @param bookingRequest\n111       * @return\n112       */\n113      @POST\n114      /**\n115       * <p> Data is received in JSON format. For easy handling, it will be unmarshalled in the support\n116       * {@link BookingRequest} class.\n117       */\n118      @Consumes(MediaType.APPLICATION_JSON)\n119      public Response createBooking(BookingRequest bookingRequest) {\n120          Response response = null;\n121  \n122          if (ff.check(\"orders-internal\")) {\n123              System.out.println(\"Creating internal booking\");\n124              response = createBookingInternal(bookingRequest);\n125          }\n126  \n127          if (ff.check(\"orders-service\")) {\n128              if (ff.check(\"orders-internal\")) {\n129                  createSyntheticBookingOrdersService(bookingRequest);\n130  \n131              }\n132              else {\n133                  response = createBookingOrdersService(bookingRequest);\n134              }\n135          }\n136  \n137          return response;\n138      }\n139  \n140      /**\n141       * Makes a call to the Orders Service, but lets it know that this is a synthetic transaction\n142       * that has already been recorded (ie, here internally) and is sent just for exercising the orders\n143       * service; it should roll back or clean up and not store this tx as a real tx\n144       *\n145       * @param bookingRequest\n146       */\n147      private void createSyntheticBookingOrdersService(BookingRequest bookingRequest) {\n148          System.out.println(\"Calling Orders Service with SYNTHETIC TX\");\n149          OrdersRequestDTO ordersRequest = new OrdersRequestDTO(bookingRequest, true);\n150  \n151          try {\n152              System.out.println(\"Calling service: \" + ordersServiceUri);\n153              Response response = buildClient()\n154                      .target(ordersServiceUri)\n155                      .request().post(Entity.entity(ordersRequest, MediaType.APPLICATION_JSON_TYPE));\n156              String sytheticResponse = response.readEntity(String.class);\n157              System.out.println(\"Response from SYNTHETIC TX: \" + sytheticResponse);\n158  "
        lineNumber: 57
        variables:
          matchingText: http://localhost:9090/rest/bookings";
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/SimpleTest.java
        message: The app is trying to access local resource by HTTP, please try to migrate the resource to cloud
        codeSnip: "  1  /**\n  2   * Licensed to the Apache Software Foundation (ASF) under one or more\n  3   * contributor license agreements.  See the NOTICE file distributed with\n  4   * this work for additional information regarding copyright ownership.\n  5   * The ASF licenses this file to You under the Apache License, Version 2.0\n  6   * (the \"License\"); you may not use this file except in compliance with\n  7   * the License.  You may obtain a copy of the License at\n  8   * <p>\n  9   * http://www.apache.org/licenses/LICENSE-2.0\n 10   * <p>\n 11   * Unless required by applicable law or agreed to in writing, software\n 12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14   * See the License for the specific language governing permissions and\n 15   * limitations under the License.\n 16   */\n 17  package org.ticketmonster.orders;\n 18  \n 19  import org.junit.Test;\n 20  import org.junit.runner.RunWith;\n 21  import org.springframework.beans.factory.annotation.Autowired;\n 22  import org.springframework.boot.context.embedded.LocalServerPort;\n 23  import org.springframework.boot.test.context.SpringBootTest;\n 24  import org.springframework.boot.test.web.client.TestRestTemplate;\n 25  import org.springframework.http.*;\n 26  import org.springframework.test.context.junit4.SpringRunner;\n 27  \n 28  import java.io.IOException;\n 29  import java.net.URISyntaxException;\n 30  \n 31  import static org.junit.Assert.assertTrue;\n 32  \n 33  /**\n 34   * Created by ceposta \n 35   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n 36   */\n 37  @RunWith(SpringRunner.class)\n 38  @SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n 39  public class SimpleTest {\n 40  \n 41      @Autowired\n 42      private TestRestTemplate restTemplate;\n 43  \n 44      @LocalServerPort\n 45      int port;\n 46  \n 47      @Test\n 48      public void testSimple() throws URISyntaxException, IOException {\n 49          System.out.println(\"Local server port: http://localhost:\" + port);\n 50  \n 51          String postBodyJson = \"{\\\"ticketRequests\\\":[{\\\"ticketPrice\\\":4,\\\"quantity\\\":3}],\\\"email\\\":\\\"foo@bar.coom\\\",\\\"performance\\\":1}\";\n 52  \n 53          HttpHeaders headers = new HttpHeaders();\n 54          headers.setContentType(MediaType.APPLICATION_JSON);\n 55  \n 56  \n 57          HttpEntity<String> entity = new HttpEntity<String>(postBodyJson ,headers);\n 58          ResponseEntity<String> responseEntity  = restTemplate.exchange(\"/rest/bookings\", HttpMethod.POST, entity, String.class);\n 59  \n 60  \n 61          String response = responseEntity.getBody();\n 62          assertTrue(response.contains(\"tickets\"));\n 63          System.out.println(\"Response: \" + response);\n 64      }\n 65  }\n"
        lineNumber: 49
        variables:
          matchingText: http://localhost
      effort: 7
    localhost-jdbc-00002:
      description: Local JDBC Calls
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - localhost
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: The app is trying to access local resource by JDBC, please try to migrate the resource to cloud
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: jdbc:mysql://localhost:3306
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: The app is trying to access local resource by JDBC, please try to migrate the resource to cloud
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: jdbc:mysql://localhost:3306
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: The app is trying to access local resource by JDBC, please try to migrate the resource to cloud
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: jdbc:mysql://localhost:3306
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: The app is trying to access local resource by JDBC, please try to migrate the resource to cloud
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: jdbc:mysql://localhost:3306
      effort: 7
  errors:
    jni-native-code-00001: exit status 1
    local-storage-00001: exit status 1
    local-storage-00002: exit status 1
  unmatched:
  - embedded-cache-libraries-01000
  - embedded-cache-libraries-02000
  - embedded-cache-libraries-03000
  - embedded-cache-libraries-04000
  - embedded-cache-libraries-05000
  - embedded-cache-libraries-06000
  - embedded-cache-libraries-07000
  - embedded-cache-libraries-08000
  - embedded-cache-libraries-09000
  - embedded-cache-libraries-10000
  - embedded-cache-libraries-11000
  - embedded-cache-libraries-12000
  - embedded-cache-libraries-13000
  - embedded-cache-libraries-14000
  - embedded-cache-libraries-15000
  - embedded-cache-libraries-16000
  - java-corba-00000
  - java-rmi-00000
  - java-rmi-00000
  - java-rmi-00001
  - java-rpc-00000
  - jca-00000
  - jni-native-code-00000
  - local-storage-00003
  - local-storage-00004
  - local-storage-00005
  - local-storage-00006
  - localhost-ws-00003
  - logging-0000
  - logging-0000
  - logging-0001
  - logging-0001
  - mail-00000
  - session-00000
  - session-00001
  - socket-communication-00000
  - socket-communication-00001
- name: discovery-rules
  tags:
  - EJB XML
  - JPA XML
  - Java Source
  - Maven XML
  - Properties
  - Spring XML
  - Web XML
  insights:
    discover-java-files:
      description: Java source files
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Java Source
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaType.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingRequest.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotState.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceMetric.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionComparator.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowMetric.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketRequest.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/AllocatedSeats.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaPath.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Base64.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/CircularBuffer.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/ForwardingMap.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Reflections.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/TicketMonsterDeployment.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/RESTDeployment.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaType.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/orders/OrdersRequestDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingRequest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotState.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceMetric.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionComparator.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowMetric.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketRequest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/AllocatedSeats.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaPath.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Base64.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/CircularBuffer.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/ForwardingMap.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Reflections.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/TicketMonsterDeployment.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingContractTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingOrdersServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/RESTDeployment.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/utils/BookingUtils.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Allocation.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaType.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/convert/LongMatrixToByteArrayConverter.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingRequest.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotState.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceMetric.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionComparator.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowMetric.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketRequest.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/AllocatedSeats.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaPath.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Base64.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/CircularBuffer.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/ForwardingMap.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Reflections.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/Application.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/AllocatedSeats.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingRequested.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingStatus.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/RestServiceException.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/SectionComparator.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/booking/TicketRequest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/config/TeiidDataSources.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/EventId.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/PerformanceId.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SeatAllocationException.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SyntheticBooking.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/VenueId.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/BookingRequestedTest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/BookingServiceIT.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/ConsumerContractTest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/HoverflyTest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/SimpleTest.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/java/org/ticketmonster/orders/config/TeiidTestDataSources.java
        message: ""
    discover-maven-xml:
      description: Maven XML file
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Maven XML
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: ""
      - uri: file:///opt/input/source/monolith/pom.xml
        message: ""
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: ""
      - uri: file:///opt/input/source/pom.xml
        message: ""
    discover-properties-file:
      description: Properties file
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Properties
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources/log4j.properties
        message: ""
      - uri: file:///opt/input/source/backend-v1/target/classes/log4j.properties
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/resources/log4j.properties
        message: ""
      - uri: file:///opt/input/source/backend-v2/target/classes/log4j.properties
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/resources/log4j.properties
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/target/classes/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/target/classes/log4j.properties
        message: ""
      - uri: file:///opt/input/source/monolith/target/test-classes/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/test-classes/application.properties
        message: ""
    windup-discover-ejb-configuration:
      description: EJB XML Configuration
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=EJB XML
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: ""
          innerText: "\n\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"><modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles></project>"
      - uri: file:///opt/input/source/backend-v1/src/main/assembly/assembly.xml
        message: ""
        codeSnip: "  1  <?xml version='1.0' encoding='UTF-8'?>\n  2  <assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3      xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd\">\n  4      <id>release-dist</id>\n  5      <formats>\n  6          <format>zip</format>\n  7      </formats>\n  8      <baseDirectory>${artifactId}-${version}</baseDirectory>\n  9      <fileSets>\n 10          <fileSet>            \n 11              <directory>../</directory>\n 12              <outputDirectory>/</outputDirectory>\n 13              <excludes>\n 14                  <exclude>**/.*</exclude>\n 15                  <exclude>.gitignore</exclude>\n 16                  <exclude>**/${project.build.directory}/**</exclude>\n 17                  <exclude>**/README.txt</exclude>\n 18                  <exclude>**/readme.txt</exclude>\n 19                  <exclude>**/docs/</exclude>\n 20                  <exclude>**/dist/**</exclude>\n 21                  <exclude>**/tutorial/**</exclude>\n 22                  <exclude>**/settings.xml</exclude>\n 23              </excludes>\n 24          </fileSet>\n 25          <fileSet>\n 26              <directory>../</directory>\n 27              <outputDirectory>/</outputDirectory>\n 28              <includes>\n 29                  <include>**/.settings/.jsdtscope</include>\n 30              </includes>\n 31          </fileSet>\n 32      </fileSets>   \n 33  </assembly>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n    release-dist\n    \n        zip\n    \n    ${artifactId}-${version}\n    \n                    \n            ../\n            /\n            \n                **/.*\n                .gitignore\n                **/${project.build.directory}/**\n                **/README.txt\n                **/readme.txt\n                **/docs/\n                **/dist/**\n                **/tutorial/**\n                **/settings.xml\n            \n        \n        \n            ../\n            /\n            \n                **/.settings/.jsdtscope\n            \n        \n       \n\n"
          matchingXML: <?xml version="&#39;1.0&#39;" encoding="&#39;UTF-8&#39;"?><assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd"><id>release-dist</id><formats><format>zip</format></formats><baseDirectory>${artifactId}-${version}</baseDirectory><fileSets><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><excludes><exclude>**/.*</exclude><exclude>.gitignore</exclude><exclude>**/${project.build.directory}/**</exclude><exclude>**/README.txt</exclude><exclude>**/readme.txt</exclude><exclude>**/docs/</exclude><exclude>**/dist/**</exclude><exclude>**/tutorial/**</exclude><exclude>**/settings.xml</exclude></excludes></fileSet><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><includes><include>**/.settings/.jsdtscope</include></includes></fileSet></fileSets></assembly>
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n    \n        \n        \n        java:jboss/datasources/MySQLDS\n        \n            \n            \n            \n        \n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://java.sun.com/xml/ns/persistence\n        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed\ndata source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\ncan find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"none\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n    \n        \n        \n        java:jboss/datasources/PostgreSQLDS\n        \n            \n            \n            \n        \n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://java.sun.com/xml/ns/persistence\n        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed\ndata source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\ncan find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: ""
        variables:
          data: ""
          innerText: |2+





          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- This file can be an empty text file (0 bytes) --><!-- We're declaring the schema to save you time if you do have to configure \n   this in the future --><beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/javaee\n        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\"></beans>"
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/jboss-deployment-structure.xml
        message: ""
        variables:
          data: ""
          innerText: "\n    \n        \n        \n        \n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <?xml?><jboss-deployment-structure><deployment><exclusions></exclusions><!-- This allows you to define additional dependencies, it is the same
              as using the Dependencies: manifest attribute --><dependencies><module name="org.jboss.as.naming"></module><module name="org.jboss.as.server"></module><module name="org.jboss.msc"></module></dependencies></deployment></jboss-deployment-structure>
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/ticket-monster-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13      or testing only. It uses H2, an in memory database that ships with JBoss \n 14      AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17      xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18      <!-- The datasource is bound into JNDI at this location. We reference \n 19          this in META-INF/persistence.xml -->\n 20      <datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\"\n 21          pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\">\n 22          <connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n 23          <driver>h2</driver>\n 24          <security>\n 25              <user-name>sa</user-name>\n 26              <password>sa</password>\n 27          </security>\n 28      </datasource>\n 29  </datasources>\n 30   \n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n\n    \n    \n        jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n        h2\n        \n            sa\n            sa\n        \n    \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n    or testing only. It uses H2, an in memory database that ships with JBoss \n    AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n        this in META-INF/persistence.xml --><datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\" pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          data: ""
          innerText: "\n\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"><display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list></web-app>
      - uri: file:///opt/input/source/backend-v1/src/main/wf-standalone/module/module.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\n\n  \n    \n  \n\n  \n    \n    \n  \n"
          matchingXML: <?xml version="1.0"?><module xmlns="urn:jboss:module:1.1" name="org.mysql"><resources><resource-root path="mysql-connector-java-5.1.38.jar"></resource-root></resources><dependencies><module name="javax.api"></module><module name="javax.transaction.api"></module></dependencies></module>
      - uri: file:///opt/input/source/backend-v1/src/main/wf-standalone/standalone.xml
        message: ""
        codeSnip: |2-
           41          </authorization>
           42        </security-realm>
           43        <security-realm name="ApplicationRealm">
           44          <server-identities>
           45            <ssl>
           46              <keystore path="application.keystore" relative-to="jboss.server.config.dir" keystore-password="password" alias="server" key-password="password" generate-self-signed-certificate-host="localhost"/>
           47            </ssl>
           48          </server-identities>
           49          <authentication>
           50            <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
           51            <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
           52          </authentication>
           53          <authorization>
           54            <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
           55          </authorization>
           56        </security-realm>
           57      </security-realms>
           58      <audit-log>
           59        <formatters>
           60          <json-formatter name="json-formatter"/>
           61        </formatters>
           62        <handlers>
           63          <file-handler name="file" formatter="json-formatter" path="audit-log.log" relative-to="jboss.server.data.dir"/>
           64        </handlers>
           65        <logger log-boot="true" log-read-only="false" enabled="false">
           66          <handlers>
           67            <handler name="file"/>
           68          </handlers>
           69        </logger>
           70      </audit-log>
           71      <management-interfaces>
           72        <http-interface security-realm="ManagementRealm" http-upgrade-enabled="true">
           73          <socket-binding http="management-http"/>
           74        </http-interface>
           75      </management-interfaces>
           76      <access-control provider="simple">
           77        <role-mapping>
           78          <role name="SuperUser">
           79            <include>
           80              <user name="$local"/>
           81            </include>
           82          </role>
           83        </role-mapping>
           84      </access-control>
           85    </management>
           86    <profile>
           87      <subsystem xmlns="urn:jboss:domain:logging:3.0">
           88        <console-handler name="CONSOLE">
           89          <level name="INFO"/>
           90          <formatter>
           91            <named-formatter name="COLOR-PATTERN"/>
           92          </formatter>
           93        </console-handler>
           94        <periodic-rotating-file-handler name="FILE" autoflush="true">
           95          <formatter>
           96            <named-formatter name="PATTERN"/>
           97          </formatter>
           98          <file relative-to="jboss.server.log.dir" path="server.log"/>
           99          <suffix value=".yyyy-MM-dd"/>
          100          <append value="true"/>
          101        </periodic-rotating-file-handler>
          102        <logger category="com.arjuna">
          103          <level name="WARN"/>
          104        </logger>
          105        <logger category="org.jboss.as.config">
          106          <level name="DEBUG"/>
          107        </logger>
          108        <logger category="sun.rmi">
          109          <level name="WARN"/>
          110        </logger>
          111        <root-logger>
          112          <level name="INFO"/>
          113          <handlers>
          114            <handler name="CONSOLE"/>
          115            <handler name="FILE"/>
          116          </handlers>
          117        </root-logger>
          118        <formatter name="PATTERN">
          119          <pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
          120        </formatter>
          121        <formatter name="COLOR-PATTERN">
          122          <pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
          123        </formatter>
          124      </subsystem>
          125      <subsystem xmlns="urn:jboss:domain:batch-jberet:1.0">
          126        <default-job-repository name="in-memory"/>
          127        <default-thread-pool name="batch"/>
          128        <job-repository name="in-memory">
          129          <in-memory/>
          130        </job-repository>
          131        <thread-pool name="batch">
          132          <max-threads count="10"/>
          133          <keepalive-time time="30" unit="seconds"/>
          134        </thread-pool>
          135      </subsystem>
          136      <subsystem xmlns="urn:jboss:domain:bean-validation:1.0"/>
          137      <subsystem xmlns="urn:jboss:domain:datasources:4.0">
          138        <datasources>
          139          <datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
          140            <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>
          141            <driver>h2</driver>
          142            <security>
          143              <user-name>sa</user-name>
          144              <password>sa</password>
          145            </security>
          146          </datasource>
          147          <datasource jndi-name="java:jboss/datasources/MySQLDS" pool-name="MySQLDS">
          148            <connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url>
          149            <driver>mysql</driver>
          150            <security>
          151              <user-name>root</user-name>
          152              <password>admin</password>
          153            </security>
          154            <validation>
          155              <check-valid-connection-sql>select 1</check-valid-connection-sql>
          156              <background-validation>true</background-validation>
          157              <background-validation-millis>10000</background-validation-millis>
          158              <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter"/>
          159            </validation>
          160          </datasource>
          161          <drivers>
          162            <driver name="h2" module="com.h2database.h2">
          163              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
          164            </driver>
          165            <driver name="mysql" module="org.mysql">
          166              <driver-class>com.mysql.jdbc.Driver</driver-class>
          167            </driver>
          168          </drivers>
          169        </datasources>
          170      </subsystem>
          171      <subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0">
          172        <deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"/>
          173      </subsystem>
          174      <subsystem xmlns="urn:jboss:domain:ee:4.0">
          175        <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>
          176        <concurrent>
          177          <context-services>
          178            <context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"/>
          179          </context-services>
          180          <managed-thread-factories>
          181            <managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"/>
          182          </managed-thread-factories>
          183          <managed-executor-services>
          184            <managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" keepalive-time="5000"/>
          185          </managed-executor-services>
          186          <managed-scheduled-executor-services>
          187            <managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" keepalive-time="3000"/>
          188          </managed-scheduled-executor-services>
          189        </concurrent>
          190        <default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"/>
          191      </subsystem>
          192      <subsystem xmlns="urn:jboss:domain:ejb3:4.0">
          193        <session-bean>
          194          <stateless>
          195            <bean-instance-pool-ref pool-name="slsb-strict-max-pool"/>
          196          </stateless>
          197          <stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"/>
          198          <singleton default-access-timeout="5000"/>
          199        </session-bean>
          200        <pools>
          201          <bean-instance-pools>
          202            <strict-max-pool name="slsb-strict-max-pool" derive-size="from-worker-pools" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
          203            <strict-max-pool name="mdb-strict-max-pool" derive-size="from-cpu-count" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
          204          </bean-instance-pools>
          205        </pools>
          206        <caches>
          207          <cache name="simple"/>
          208          <cache name="distributable" passivation-store-ref="infinispan" aliases="passivating clustered"/>
          209        </caches>
          210        <passivation-stores>
          211          <passivation-store name="infinispan" cache-container="ejb" max-size="10000"/>
          212        </passivation-stores>
          213        <async thread-pool-name="default"/>
          214        <timer-service thread-pool-name="default" default-data-store="default-file-store">
          215          <data-stores>
          216            <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>
          217          </data-stores>
          218        </timer-service>
          219        <remote connector-ref="http-remoting-connector" thread-pool-name="default"/>
          220        <thread-pools>
          221          <thread-pool name="default">
          222            <max-threads count="10"/>
          223            <keepalive-time time="100" unit="milliseconds"/>
          224          </thread-pool>
          225        </thread-pools>
          226        <default-security-domain value="other"/>
          227        <default-missing-method-permissions-deny-access value="true"/>
          228        <log-system-exceptions value="true"/>
          229      </subsystem>
          230      <subsystem xmlns="urn:jboss:domain:io:1.1">
          231        <worker name="default"/>
          232        <buffer-pool name="default"/>
          233      </subsystem>
          234      <subsystem xmlns="urn:jboss:domain:infinispan:4.0">
          235        <cache-container name="server" default-cache="default" module="org.wildfly.clustering.server">
          236          <local-cache name="default">
          237            <transaction mode="BATCH"/>
          238          </local-cache>
          239        </cache-container>
          240        <cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan">
          241          <local-cache name="passivation">
        lineNumber: 140
        variables:
          data: ""
          innerText: "\n\n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      \n        \n          \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n          \n        \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n        \n          \n        \n      \n      \n        \n          \n        \n        \n        \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n        \n          \n          \n        \n      \n      \n        \n      \n      \n        \n      \n    \n    \n      \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n    \n      \n        \n          jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n          h2\n          \n            sa\n            sa\n          \n        \n        \n          jdbc:mysql://mysql-backend:3306/ticketmonster\n          mysql\n          \n            root\n            admin\n          \n          \n            select 1\n            true\n            10000\n            \n          \n        \n        \n          \n            org.h2.jdbcx.JdbcDataSource\n          \n          \n            com.mysql.jdbc.Driver\n          \n        \n      \n    \n    \n      \n    \n    \n      false\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n        \n        \n        \n      \n      \n        \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n      \n        \n          \n        \n      \n      \n      \n        \n          \n          \n        \n      \n      \n      \n      \n    \n    \n      \n      \n    \n    \n      \n        \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n        \n        \n      \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n        \n          \n          \n          \n          \n        \n      \n      \n    \n    \n    \n      \n      \n      \n    \n    \n      \n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n    \n    \n      \n      \n    \n    \n    \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n              \n            \n            \n          \n        \n      \n    \n    \n      \n        \n          \n        \n      \n      \n    \n    \n      \n      \n        \n        \n        \n          \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n      ${jboss.bind.address:127.0.0.1}\n      \n      \n        \n          \n        \n      \n      \n    \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n      \n    \n  \n\n"
          matchingXML: '<?xml version="1.0"?><server xmlns="urn:jboss:domain:4.2"><extensions><extension module="org.jboss.as.clustering.infinispan"></extension><extension module="org.jboss.as.connector"></extension><extension module="org.jboss.as.deployment-scanner"></extension><extension module="org.jboss.as.ee"></extension><extension module="org.jboss.as.ejb3"></extension><extension module="org.jboss.as.jaxrs"></extension><extension module="org.jboss.as.jdr"></extension><extension module="org.jboss.as.jmx"></extension><extension module="org.jboss.as.jpa"></extension><extension module="org.jboss.as.jsf"></extension><extension module="org.jboss.as.logging"></extension><extension module="org.jboss.as.mail"></extension><extension module="org.jboss.as.naming"></extension><extension module="org.jboss.as.pojo"></extension><extension module="org.jboss.as.remoting"></extension><extension module="org.jboss.as.sar"></extension><extension module="org.jboss.as.security"></extension><extension module="org.jboss.as.transactions"></extension><extension module="org.jboss.as.webservices"></extension><extension module="org.jboss.as.weld"></extension><extension module="org.wildfly.extension.batch.jberet"></extension><extension module="org.wildfly.extension.bean-validation"></extension><extension module="org.wildfly.extension.io"></extension><extension module="org.wildfly.extension.request-controller"></extension><extension module="org.wildfly.extension.security.manager"></extension><extension module="org.wildfly.extension.undertow"></extension></extensions><management><security-realms><security-realm name="ManagementRealm"><authentication><local default-user="$local" skip-group-loading="true"></local><properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization map-groups-to-roles="false"><properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm><security-realm name="ApplicationRealm"><server-identities><ssl><keystore path="application.keystore" relative-to="jboss.server.config.dir" keystore-password="password" alias="server" key-password="password" generate-self-signed-certificate-host="localhost"></keystore></ssl></server-identities><authentication><local default-user="$local" allowed-users="*" skip-group-loading="true"></local><properties path="application-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization><properties path="application-roles.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm></security-realms><audit-log><formatters><json-formatter name="json-formatter"></json-formatter></formatters><handlers><file-handler name="file" formatter="json-formatter" path="audit-log.log" relative-to="jboss.server.data.dir"></file-handler></handlers><logger log-boot="true" log-read-only="false" enabled="false"><handlers><handler name="file"></handler></handlers></logger></audit-log><management-interfaces><http-interface security-realm="ManagementRealm" http-upgrade-enabled="true"><socket-binding http="management-http"></socket-binding></http-interface></management-interfaces><access-control provider="simple"><role-mapping><role name="SuperUser"><include><user name="$local"></user></include></role></role-mapping></access-control></management><profile><subsystem xmlns="urn:jboss:domain:logging:3.0"><console-handler name="CONSOLE"><level name="INFO"></level><formatter><named-formatter name="COLOR-PATTERN"></named-formatter></formatter></console-handler><periodic-rotating-file-handler name="FILE" autoflush="true"><formatter><named-formatter name="PATTERN"></named-formatter></formatter><file relative-to="jboss.server.log.dir" path="server.log"></file><suffix value=".yyyy-MM-dd"></suffix><append value="true"></append></periodic-rotating-file-handler><logger category="com.arjuna"><level name="WARN"></level></logger><logger category="org.jboss.as.config"><level name="DEBUG"></level></logger><logger category="sun.rmi"><level name="WARN"></level></logger><root-logger><level name="INFO"></level><handlers><handler name="CONSOLE"></handler><handler name="FILE"></handler></handlers></root-logger><formatter name="PATTERN"><pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter><formatter name="COLOR-PATTERN"><pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter></subsystem><subsystem xmlns="urn:jboss:domain:batch-jberet:1.0"><default-job-repository name="in-memory"></default-job-repository><default-thread-pool name="batch"></default-thread-pool><job-repository name="in-memory"><in-memory></in-memory></job-repository><thread-pool name="batch"><max-threads count="10"></max-threads><keepalive-time time="30" unit="seconds"></keepalive-time></thread-pool></subsystem><subsystem xmlns="urn:jboss:domain:bean-validation:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:datasources:4.0"><datasources><datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true"><connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource><datasource jndi-name="java:jboss/datasources/MySQLDS" pool-name="MySQLDS"><connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url><driver>mysql</driver><security><user-name>root</user-name><password>admin</password></security><validation><check-valid-connection-sql>select 1</check-valid-connection-sql><background-validation>true</background-validation><background-validation-millis>10000</background-validation-millis><exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter"></exception-sorter></validation></datasource><drivers><driver name="h2" module="com.h2database.h2"><xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class></driver><driver name="mysql" module="org.mysql"><driver-class>com.mysql.jdbc.Driver</driver-class></driver></drivers></datasources></subsystem><subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0"><deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"></deployment-scanner></subsystem><subsystem xmlns="urn:jboss:domain:ee:4.0"><spec-descriptor-property-replacement>false</spec-descriptor-property-replacement><concurrent><context-services><context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"></context-service></context-services><managed-thread-factories><managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"></managed-thread-factory></managed-thread-factories><managed-executor-services><managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" keepalive-time="5000"></managed-executor-service></managed-executor-services><managed-scheduled-executor-services><managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" keepalive-time="3000"></managed-scheduled-executor-service></managed-scheduled-executor-services></concurrent><default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"></default-bindings></subsystem><subsystem xmlns="urn:jboss:domain:ejb3:4.0"><session-bean><stateless><bean-instance-pool-ref pool-name="slsb-strict-max-pool"></bean-instance-pool-ref></stateless><stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"></stateful><singleton default-access-timeout="5000"></singleton></session-bean><pools><bean-instance-pools><strict-max-pool name="slsb-strict-max-pool" derive-size="from-worker-pools" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool><strict-max-pool name="mdb-strict-max-pool" derive-size="from-cpu-count" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool></bean-instance-pools></pools><caches><cache name="simple"></cache><cache name="distributable" passivation-store-ref="infinispan" aliases="passivating clustered"></cache></caches><passivation-stores><passivation-store name="infinispan" cache-container="ejb" max-size="10000"></passivation-store></passivation-stores><async thread-pool-name="default"></async><timer-service thread-pool-name="default" default-data-store="default-file-store"><data-stores><file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"></file-data-store></data-stores></timer-service><remote connector-ref="http-remoting-connector" thread-pool-name="default"></remote><thread-pools><thread-pool name="default"><max-threads count="10"></max-threads><keepalive-time time="100" unit="milliseconds"></keepalive-time></thread-pool></thread-pools><default-security-domain value="other"></default-security-domain><default-missing-method-permissions-deny-access value="true"></default-missing-method-permissions-deny-access><log-system-exceptions value="true"></log-system-exceptions></subsystem><subsystem xmlns="urn:jboss:domain:io:1.1"><worker name="default"></worker><buffer-pool name="default"></buffer-pool></subsystem><subsystem xmlns="urn:jboss:domain:infinispan:4.0"><cache-container name="server" default-cache="default" module="org.wildfly.clustering.server"><local-cache name="default"><transaction mode="BATCH"></transaction></local-cache></cache-container><cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache><local-cache name="concurrent"><file-store passivation="true" purge="false"></file-store></local-cache></cache-container><cache-container name="ejb" aliases="sfsb" default-cache="passivation" module="org.wildfly.clustering.ejb.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache></cache-container><cache-container name="hibernate" default-cache="local-query" module="org.hibernate.infinispan"><local-cache name="entity"><transaction mode="NON_XA"></transaction><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="local-query"><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="timestamps"></local-cache></cache-container></subsystem><subsystem xmlns="urn:jboss:domain:jaxrs:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jca:4.0"><archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"></archive-validation><bean-validation enabled="true"></bean-validation><default-workmanager><short-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></short-running-threads><long-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></long-running-threads></default-workmanager><cached-connection-manager></cached-connection-manager></subsystem><subsystem xmlns="urn:jboss:domain:jdr:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jmx:1.3"><expose-resolved-model></expose-resolved-model><expose-expression-model></expose-expression-model><remoting-connector></remoting-connector></subsystem><subsystem xmlns="urn:jboss:domain:jpa:1.1"><jpa default-datasource="" default-extended-persistence-inheritance="DEEP"></jpa></subsystem><subsystem xmlns="urn:jboss:domain:jsf:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:mail:2.0"><mail-session name="default" jndi-name="java:jboss/mail/Default"><smtp-server outbound-socket-binding-ref="mail-smtp"></smtp-server></mail-session></subsystem><subsystem xmlns="urn:jboss:domain:naming:2.0"><remote-naming></remote-naming></subsystem><subsystem xmlns="urn:jboss:domain:pojo:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:remoting:3.0"><endpoint></endpoint><http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"></http-connector></subsystem><subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"></subsystem><subsystem xmlns="urn:jboss:domain:request-controller:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:sar:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:security-manager:1.0"><deployment-permissions><maximum-set><permission class="java.security.AllPermission"></permission></maximum-set></deployment-permissions></subsystem><subsystem xmlns="urn:jboss:domain:security:1.2"><security-domains><security-domain name="other" cache-type="default"><authentication><login-module code="Remoting" flag="optional"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module><login-module code="RealmDirect" flag="required"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module></authentication></security-domain><security-domain name="jboss-web-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jboss-ejb-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jaspitest" cache-type="default"><authentication-jaspi><login-module-stack name="dummy"><login-module code="Dummy" flag="optional"></login-module></login-module-stack><auth-module code="Dummy"></auth-module></authentication-jaspi></security-domain></security-domains></subsystem><subsystem xmlns="urn:jboss:domain:transactions:3.0"><core-environment><process-id><uuid></uuid></process-id></core-environment><recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"></recovery-environment></subsystem><subsystem xmlns="urn:jboss:domain:undertow:3.1"><buffer-cache name="default"></buffer-cache><server name="default-server"><http-listener name="default" socket-binding="http" redirect-socket="https" enable-http2="true"></http-listener><https-listener name="https" socket-binding="https" security-realm="ApplicationRealm" enable-http2="true"></https-listener><host name="default-host" alias="localhost"><location name="/" handler="welcome-content"></location><filter-ref name="server-header"></filter-ref><filter-ref name="x-powered-by-header"></filter-ref></host></server><servlet-container name="default"><jsp-config></jsp-config><websockets></websockets></servlet-container><handlers><file name="welcome-content" path="${jboss.home.dir}/welcome-content"></file></handlers><filters><response-header name="server-header" header-name="Server" header-value="WildFly/10"></response-header><response-header name="x-powered-by-header" header-name="X-Powered-By" header-value="Undertow/1"></response-header></filters></subsystem><subsystem xmlns="urn:jboss:domain:webservices:2.0"><wsdl-host>${jboss.bind.address:127.0.0.1}</wsdl-host><endpoint-config name="Standard-Endpoint-Config"></endpoint-config><endpoint-config name="Recording-Endpoint-Config"><pre-handler-chain name="recording-handlers" protocol-bindings="##SOAP11_HTTP ##SOAP11_HTTP_MTOM ##SOAP12_HTTP ##SOAP12_HTTP_MTOM"><handler name="RecordingHandler" class="org.jboss.ws.common.invocation.RecordingServerHandler"></handler></pre-handler-chain></endpoint-config><client-config name="Standard-Client-Config"></client-config></subsystem><subsystem xmlns="urn:jboss:domain:weld:3.0"></subsystem></profile><interfaces><interface name="management"><inet-address value="${jboss.bind.address.management:127.0.0.1}"></inet-address></interface><interface name="public"><inet-address value="${jboss.bind.address:127.0.0.1}"></inet-address></interface></interfaces><socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}"><socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"></socket-binding><socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"></socket-binding><socket-binding name="ajp" port="${jboss.ajp.port:8009}"></socket-binding><socket-binding name="http" port="${jboss.http.port:8080}"></socket-binding><socket-binding name="https" port="${jboss.https.port:8443}"></socket-binding><socket-binding name="txn-recovery-environment" port="4712"></socket-binding><socket-binding name="txn-status-manager" port="4713"></socket-binding><outbound-socket-binding name="mail-smtp"><remote-destination host="localhost" port="25"></remote-destination></outbound-socket-binding></socket-binding-group></server>'
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/src/test/resources/arquillian.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <arquillian xmlns=\"http://jboss.org/schema/arquillian\"\n 13     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n 15          http://jboss.org/schema/arquillian/arquillian_1_0.xsd\">\n 16  \n 17     <!-- Uncomment to have test archives exported to the file system for inspection -->\n 18  <!--    <engine>  -->\n 19  <!--       <property name=\"deploymentExportPath\">target/</property>  -->\n 20  <!--    </engine> -->\n 21  \n 22     <!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature -->\n 23     <defaultProtocol type=\"Servlet 3.0\" />\n 24  \n 25     <!-- Example configuration for a remote JBoss EAP instance -->\n 26     <container qualifier=\"jboss\" default=\"true\">\n 27        <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->\n 28        <configuration>\n 29           <property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property>\n 30        </configuration>\n 31     </container>\n 32  \n 33  </arquillian>\n"
        lineNumber: 29
        variables:
          data: ""
          innerText: "\n\n\n\n   \n\n\n\n\n   \n   \n\n   \n   \n      \n      \n         /Users/ceposta/dev/eap/wildfly-10.0.0.Final\n      \n   \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><arquillian xmlns=\"http://jboss.org/schema/arquillian\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n        http://jboss.org/schema/arquillian/arquillian_1_0.xsd\"><!-- Uncomment to have test archives exported to the file system for inspection --><!--    <engine>  --><!--       <property name=\"deploymentExportPath\">target/</property>  --><!--    </engine> --><!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature --><defaultProtocol type=\"Servlet 3.0\"></defaultProtocol><!-- Example configuration for a remote JBoss EAP instance --><container qualifier=\"jboss\" default=\"true\"><!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property --><configuration><property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property></configuration></container></arquillian>"
      - uri: file:///opt/input/source/backend-v1/src/test/resources/test-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13     or testing only. It uses H2, an in memory database that ships with JBoss \n 14     AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17     xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18     <!-- The datasource is bound into JNDI at this location. We reference \n 19        this in META-INF/test-persistence.xml -->\n 20     <datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\"\n 21        pool-name=\"ticket-monster-test\" enabled=\"true\"\n 22        use-java-context=\"true\">\n 23        <connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url>\n 24        <driver>h2</driver>\n 25        <security>\n 26           <user-name>sa</user-name>\n 27           <password>sa</password>\n 28        </security>\n 29     </datasource>\n 30  </datasources>\n 31   \n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n\n   \n   \n      jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1\n      h2\n      \n         sa\n         sa\n      \n   \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n   or testing only. It uses H2, an in memory database that ships with JBoss \n   AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n      this in META-INF/test-persistence.xml --><datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\" pool-name=\"ticket-monster-test\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/arquillian.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <arquillian xmlns=\"http://jboss.org/schema/arquillian\"\n 13     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n 15          http://jboss.org/schema/arquillian/arquillian_1_0.xsd\">\n 16  \n 17     <!-- Uncomment to have test archives exported to the file system for inspection -->\n 18  <!--    <engine>  -->\n 19  <!--       <property name=\"deploymentExportPath\">target/</property>  -->\n 20  <!--    </engine> -->\n 21  \n 22     <!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature -->\n 23     <defaultProtocol type=\"Servlet 3.0\" />\n 24  \n 25     <!-- Example configuration for a remote JBoss EAP instance -->\n 26     <container qualifier=\"jboss\" default=\"true\">\n 27        <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->\n 28        <configuration>\n 29           <property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property>\n 30        </configuration>\n 31     </container>\n 32  \n 33  </arquillian>\n"
        lineNumber: 29
        variables:
          data: ""
          innerText: "\n\n\n\n   \n\n\n\n\n   \n   \n\n   \n   \n      \n      \n         /Users/ceposta/dev/eap/wildfly-10.0.0.Final\n      \n   \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><arquillian xmlns=\"http://jboss.org/schema/arquillian\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n        http://jboss.org/schema/arquillian/arquillian_1_0.xsd\"><!-- Uncomment to have test archives exported to the file system for inspection --><!--    <engine>  --><!--       <property name=\"deploymentExportPath\">target/</property>  --><!--    </engine> --><!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature --><defaultProtocol type=\"Servlet 3.0\"></defaultProtocol><!-- Example configuration for a remote JBoss EAP instance --><container qualifier=\"jboss\" default=\"true\"><!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property --><configuration><property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property></configuration></container></arquillian>"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/test-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13     or testing only. It uses H2, an in memory database that ships with JBoss \n 14     AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17     xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18     <!-- The datasource is bound into JNDI at this location. We reference \n 19        this in META-INF/test-persistence.xml -->\n 20     <datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\"\n 21        pool-name=\"ticket-monster-test\" enabled=\"true\"\n 22        use-java-context=\"true\">\n 23        <connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url>\n 24        <driver>h2</driver>\n 25        <security>\n 26           <user-name>sa</user-name>\n 27           <password>sa</password>\n 28        </security>\n 29     </datasource>\n 30  </datasources>\n 31   \n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n\n   \n   \n      jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1\n      h2\n      \n         sa\n         sa\n      \n   \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n   or testing only. It uses H2, an in memory database that ships with JBoss \n   AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n      this in META-INF/test-persistence.xml --><datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\" pool-name=\"ticket-monster-test\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: ""
          innerText: "\n\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"><modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles></project>"
      - uri: file:///opt/input/source/backend-v2/src/main/assembly/assembly.xml
        message: ""
        codeSnip: "  1  <?xml version='1.0' encoding='UTF-8'?>\n  2  <assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3      xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd\">\n  4      <id>release-dist</id>\n  5      <formats>\n  6          <format>zip</format>\n  7      </formats>\n  8      <baseDirectory>${artifactId}-${version}</baseDirectory>\n  9      <fileSets>\n 10          <fileSet>            \n 11              <directory>../</directory>\n 12              <outputDirectory>/</outputDirectory>\n 13              <excludes>\n 14                  <exclude>**/.*</exclude>\n 15                  <exclude>.gitignore</exclude>\n 16                  <exclude>**/${project.build.directory}/**</exclude>\n 17                  <exclude>**/README.txt</exclude>\n 18                  <exclude>**/readme.txt</exclude>\n 19                  <exclude>**/docs/</exclude>\n 20                  <exclude>**/dist/**</exclude>\n 21                  <exclude>**/tutorial/**</exclude>\n 22                  <exclude>**/settings.xml</exclude>\n 23              </excludes>\n 24          </fileSet>\n 25          <fileSet>\n 26              <directory>../</directory>\n 27              <outputDirectory>/</outputDirectory>\n 28              <includes>\n 29                  <include>**/.settings/.jsdtscope</include>\n 30              </includes>\n 31          </fileSet>\n 32      </fileSets>   \n 33  </assembly>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n    release-dist\n    \n        zip\n    \n    ${artifactId}-${version}\n    \n                    \n            ../\n            /\n            \n                **/.*\n                .gitignore\n                **/${project.build.directory}/**\n                **/README.txt\n                **/readme.txt\n                **/docs/\n                **/dist/**\n                **/tutorial/**\n                **/settings.xml\n            \n        \n        \n            ../\n            /\n            \n                **/.settings/.jsdtscope\n            \n        \n       \n\n"
          matchingXML: <?xml version="&#39;1.0&#39;" encoding="&#39;UTF-8&#39;"?><assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd"><id>release-dist</id><formats><format>zip</format></formats><baseDirectory>${artifactId}-${version}</baseDirectory><fileSets><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><excludes><exclude>**/.*</exclude><exclude>.gitignore</exclude><exclude>**/${project.build.directory}/**</exclude><exclude>**/README.txt</exclude><exclude>**/readme.txt</exclude><exclude>**/docs/</exclude><exclude>**/dist/**</exclude><exclude>**/tutorial/**</exclude><exclude>**/settings.xml</exclude></excludes></fileSet><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><includes><include>**/.settings/.jsdtscope</include></includes></fileSet></fileSets></assembly>
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n    \n        \n        \n        java:jboss/datasources/MySQLDS\n        \n            \n            \n            \n        \n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://java.sun.com/xml/ns/persistence\n        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed\ndata source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\ncan find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"none\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n    \n        \n        \n        java:jboss/datasources/PostgreSQLDS\n        \n            \n            \n            \n        \n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://java.sun.com/xml/ns/persistence\n        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed\ndata source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\ncan find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/src/main/resources/ff4j.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\n  \n  \n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8"?><features xmlns="http://ff4j.org/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ff4j.org/schema http://ff4j.org/schema/ff4j-1.4.0.xsd"><feature uid="orders-internal" enable="true" description="Continue with legacy orders implementation"></feature><feature uid="orders-service" enable="false" description="Call new orders microservice"></feature></features>
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: ""
        variables:
          data: ""
          innerText: |2+





          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- This file can be an empty text file (0 bytes) --><!-- We're declaring the schema to save you time if you do have to configure \n   this in the future --><beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/javaee\n        http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\"></beans>"
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/jboss-deployment-structure.xml
        message: ""
        variables:
          data: ""
          innerText: "\n    \n        \n        \n        \n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <?xml?><jboss-deployment-structure><deployment><exclusions></exclusions><!-- This allows you to define additional dependencies, it is the same
              as using the Dependencies: manifest attribute --><dependencies><module name="org.jboss.as.naming"></module><module name="org.jboss.as.server"></module><module name="org.jboss.msc"></module></dependencies></deployment></jboss-deployment-structure>
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/ticket-monster-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13      or testing only. It uses H2, an in memory database that ships with JBoss \n 14      AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17      xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18      <!-- The datasource is bound into JNDI at this location. We reference \n 19          this in META-INF/persistence.xml -->\n 20      <datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\"\n 21          pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\">\n 22          <connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n 23          <driver>h2</driver>\n 24          <security>\n 25              <user-name>sa</user-name>\n 26              <password>sa</password>\n 27          </security>\n 28      </datasource>\n 29  </datasources>\n 30   \n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n\n    \n    \n        jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n        h2\n        \n            sa\n            sa\n        \n    \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n    or testing only. It uses H2, an in memory database that ships with JBoss \n    AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n        this in META-INF/persistence.xml --><datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\" pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          data: ""
          innerText: "\n\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8" standalone="yes"?><web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"><display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list></web-app>
      - uri: file:///opt/input/source/backend-v2/src/main/wf-standalone/module/module.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\n\n  \n    \n  \n\n  \n    \n    \n  \n"
          matchingXML: <?xml version="1.0"?><module xmlns="urn:jboss:module:1.1" name="org.mysql"><resources><resource-root path="mysql-connector-java-5.1.38.jar"></resource-root></resources><dependencies><module name="javax.api"></module><module name="javax.transaction.api"></module></dependencies></module>
      - uri: file:///opt/input/source/backend-v2/src/main/wf-standalone/standalone.xml
        message: ""
        codeSnip: |2-
           41          </authorization>
           42        </security-realm>
           43        <security-realm name="ApplicationRealm">
           44          <server-identities>
           45            <ssl>
           46              <keystore path="application.keystore" relative-to="jboss.server.config.dir" keystore-password="password" alias="server" key-password="password" generate-self-signed-certificate-host="localhost"/>
           47            </ssl>
           48          </server-identities>
           49          <authentication>
           50            <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
           51            <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
           52          </authentication>
           53          <authorization>
           54            <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
           55          </authorization>
           56        </security-realm>
           57      </security-realms>
           58      <audit-log>
           59        <formatters>
           60          <json-formatter name="json-formatter"/>
           61        </formatters>
           62        <handlers>
           63          <file-handler name="file" formatter="json-formatter" path="audit-log.log" relative-to="jboss.server.data.dir"/>
           64        </handlers>
           65        <logger log-boot="true" log-read-only="false" enabled="false">
           66          <handlers>
           67            <handler name="file"/>
           68          </handlers>
           69        </logger>
           70      </audit-log>
           71      <management-interfaces>
           72        <http-interface security-realm="ManagementRealm" http-upgrade-enabled="true">
           73          <socket-binding http="management-http"/>
           74        </http-interface>
           75      </management-interfaces>
           76      <access-control provider="simple">
           77        <role-mapping>
           78          <role name="SuperUser">
           79            <include>
           80              <user name="$local"/>
           81            </include>
           82          </role>
           83        </role-mapping>
           84      </access-control>
           85    </management>
           86    <profile>
           87      <subsystem xmlns="urn:jboss:domain:logging:3.0">
           88        <console-handler name="CONSOLE">
           89          <level name="INFO"/>
           90          <formatter>
           91            <named-formatter name="COLOR-PATTERN"/>
           92          </formatter>
           93        </console-handler>
           94        <periodic-rotating-file-handler name="FILE" autoflush="true">
           95          <formatter>
           96            <named-formatter name="PATTERN"/>
           97          </formatter>
           98          <file relative-to="jboss.server.log.dir" path="server.log"/>
           99          <suffix value=".yyyy-MM-dd"/>
          100          <append value="true"/>
          101        </periodic-rotating-file-handler>
          102        <logger category="com.arjuna">
          103          <level name="WARN"/>
          104        </logger>
          105        <logger category="org.jboss.as.config">
          106          <level name="DEBUG"/>
          107        </logger>
          108        <logger category="sun.rmi">
          109          <level name="WARN"/>
          110        </logger>
          111        <root-logger>
          112          <level name="INFO"/>
          113          <handlers>
          114            <handler name="CONSOLE"/>
          115            <handler name="FILE"/>
          116          </handlers>
          117        </root-logger>
          118        <formatter name="PATTERN">
          119          <pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
          120        </formatter>
          121        <formatter name="COLOR-PATTERN">
          122          <pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
          123        </formatter>
          124      </subsystem>
          125      <subsystem xmlns="urn:jboss:domain:batch-jberet:1.0">
          126        <default-job-repository name="in-memory"/>
          127        <default-thread-pool name="batch"/>
          128        <job-repository name="in-memory">
          129          <in-memory/>
          130        </job-repository>
          131        <thread-pool name="batch">
          132          <max-threads count="10"/>
          133          <keepalive-time time="30" unit="seconds"/>
          134        </thread-pool>
          135      </subsystem>
          136      <subsystem xmlns="urn:jboss:domain:bean-validation:1.0"/>
          137      <subsystem xmlns="urn:jboss:domain:datasources:4.0">
          138        <datasources>
          139          <datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
          140            <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>
          141            <driver>h2</driver>
          142            <security>
          143              <user-name>sa</user-name>
          144              <password>sa</password>
          145            </security>
          146          </datasource>
          147          <datasource jndi-name="java:jboss/datasources/MySQLDS" pool-name="MySQLDS">
          148            <connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url>
          149            <driver>mysql</driver>
          150            <security>
          151              <user-name>root</user-name>
          152              <password>admin</password>
          153            </security>
          154            <validation>
          155              <check-valid-connection-sql>select 1</check-valid-connection-sql>
          156              <background-validation>true</background-validation>
          157              <background-validation-millis>10000</background-validation-millis>
          158              <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter"/>
          159            </validation>
          160          </datasource>
          161          <drivers>
          162            <driver name="h2" module="com.h2database.h2">
          163              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
          164            </driver>
          165            <driver name="mysql" module="org.mysql">
          166              <driver-class>com.mysql.jdbc.Driver</driver-class>
          167            </driver>
          168          </drivers>
          169        </datasources>
          170      </subsystem>
          171      <subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0">
          172        <deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"/>
          173      </subsystem>
          174      <subsystem xmlns="urn:jboss:domain:ee:4.0">
          175        <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>
          176        <concurrent>
          177          <context-services>
          178            <context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"/>
          179          </context-services>
          180          <managed-thread-factories>
          181            <managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"/>
          182          </managed-thread-factories>
          183          <managed-executor-services>
          184            <managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" keepalive-time="5000"/>
          185          </managed-executor-services>
          186          <managed-scheduled-executor-services>
          187            <managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" keepalive-time="3000"/>
          188          </managed-scheduled-executor-services>
          189        </concurrent>
          190        <default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"/>
          191      </subsystem>
          192      <subsystem xmlns="urn:jboss:domain:ejb3:4.0">
          193        <session-bean>
          194          <stateless>
          195            <bean-instance-pool-ref pool-name="slsb-strict-max-pool"/>
          196          </stateless>
          197          <stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"/>
          198          <singleton default-access-timeout="5000"/>
          199        </session-bean>
          200        <pools>
          201          <bean-instance-pools>
          202            <strict-max-pool name="slsb-strict-max-pool" derive-size="from-worker-pools" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
          203            <strict-max-pool name="mdb-strict-max-pool" derive-size="from-cpu-count" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
          204          </bean-instance-pools>
          205        </pools>
          206        <caches>
          207          <cache name="simple"/>
          208          <cache name="distributable" passivation-store-ref="infinispan" aliases="passivating clustered"/>
          209        </caches>
          210        <passivation-stores>
          211          <passivation-store name="infinispan" cache-container="ejb" max-size="10000"/>
          212        </passivation-stores>
          213        <async thread-pool-name="default"/>
          214        <timer-service thread-pool-name="default" default-data-store="default-file-store">
          215          <data-stores>
          216            <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>
          217          </data-stores>
          218        </timer-service>
          219        <remote connector-ref="http-remoting-connector" thread-pool-name="default"/>
          220        <thread-pools>
          221          <thread-pool name="default">
          222            <max-threads count="10"/>
          223            <keepalive-time time="100" unit="milliseconds"/>
          224          </thread-pool>
          225        </thread-pools>
          226        <default-security-domain value="other"/>
          227        <default-missing-method-permissions-deny-access value="true"/>
          228        <log-system-exceptions value="true"/>
          229      </subsystem>
          230      <subsystem xmlns="urn:jboss:domain:io:1.1">
          231        <worker name="default"/>
          232        <buffer-pool name="default"/>
          233      </subsystem>
          234      <subsystem xmlns="urn:jboss:domain:infinispan:4.0">
          235        <cache-container name="server" default-cache="default" module="org.wildfly.clustering.server">
          236          <local-cache name="default">
          237            <transaction mode="BATCH"/>
          238          </local-cache>
          239        </cache-container>
          240        <cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan">
          241          <local-cache name="passivation">
        lineNumber: 140
        variables:
          data: ""
          innerText: "\n\n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n  \n    \n      \n        \n          \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n          \n        \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n        \n          \n        \n      \n      \n        \n          \n        \n        \n        \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n        \n          \n          \n        \n      \n      \n        \n      \n      \n        \n      \n    \n    \n      \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n    \n      \n        \n          jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n          h2\n          \n            sa\n            sa\n          \n        \n        \n          jdbc:mysql://mysql-backend:3306/ticketmonster\n          mysql\n          \n            root\n            admin\n          \n          \n            select 1\n            true\n            10000\n            \n          \n        \n        \n          \n            org.h2.jdbcx.JdbcDataSource\n          \n          \n            com.mysql.jdbc.Driver\n          \n        \n      \n    \n    \n      \n    \n    \n      false\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n        \n        \n        \n      \n      \n        \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n      \n        \n          \n        \n      \n      \n      \n        \n          \n          \n        \n      \n      \n      \n      \n    \n    \n      \n      \n    \n    \n      \n        \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n        \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n        \n        \n      \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n        \n          \n          \n          \n          \n        \n      \n      \n    \n    \n    \n      \n      \n      \n    \n    \n      \n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n    \n    \n      \n      \n    \n    \n    \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n              \n            \n            \n          \n        \n      \n    \n    \n      \n        \n          \n        \n      \n      \n    \n    \n      \n      \n        \n        \n        \n          \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n      ${jboss.bind.address:127.0.0.1}\n      \n      \n        \n          \n        \n      \n      \n    \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n      \n    \n  \n\n"
          matchingXML: '<?xml version="1.0"?><server xmlns="urn:jboss:domain:4.2"><extensions><extension module="org.jboss.as.clustering.infinispan"></extension><extension module="org.jboss.as.connector"></extension><extension module="org.jboss.as.deployment-scanner"></extension><extension module="org.jboss.as.ee"></extension><extension module="org.jboss.as.ejb3"></extension><extension module="org.jboss.as.jaxrs"></extension><extension module="org.jboss.as.jdr"></extension><extension module="org.jboss.as.jmx"></extension><extension module="org.jboss.as.jpa"></extension><extension module="org.jboss.as.jsf"></extension><extension module="org.jboss.as.logging"></extension><extension module="org.jboss.as.mail"></extension><extension module="org.jboss.as.naming"></extension><extension module="org.jboss.as.pojo"></extension><extension module="org.jboss.as.remoting"></extension><extension module="org.jboss.as.sar"></extension><extension module="org.jboss.as.security"></extension><extension module="org.jboss.as.transactions"></extension><extension module="org.jboss.as.webservices"></extension><extension module="org.jboss.as.weld"></extension><extension module="org.wildfly.extension.batch.jberet"></extension><extension module="org.wildfly.extension.bean-validation"></extension><extension module="org.wildfly.extension.io"></extension><extension module="org.wildfly.extension.request-controller"></extension><extension module="org.wildfly.extension.security.manager"></extension><extension module="org.wildfly.extension.undertow"></extension></extensions><management><security-realms><security-realm name="ManagementRealm"><authentication><local default-user="$local" skip-group-loading="true"></local><properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization map-groups-to-roles="false"><properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm><security-realm name="ApplicationRealm"><server-identities><ssl><keystore path="application.keystore" relative-to="jboss.server.config.dir" keystore-password="password" alias="server" key-password="password" generate-self-signed-certificate-host="localhost"></keystore></ssl></server-identities><authentication><local default-user="$local" allowed-users="*" skip-group-loading="true"></local><properties path="application-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization><properties path="application-roles.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm></security-realms><audit-log><formatters><json-formatter name="json-formatter"></json-formatter></formatters><handlers><file-handler name="file" formatter="json-formatter" path="audit-log.log" relative-to="jboss.server.data.dir"></file-handler></handlers><logger log-boot="true" log-read-only="false" enabled="false"><handlers><handler name="file"></handler></handlers></logger></audit-log><management-interfaces><http-interface security-realm="ManagementRealm" http-upgrade-enabled="true"><socket-binding http="management-http"></socket-binding></http-interface></management-interfaces><access-control provider="simple"><role-mapping><role name="SuperUser"><include><user name="$local"></user></include></role></role-mapping></access-control></management><profile><subsystem xmlns="urn:jboss:domain:logging:3.0"><console-handler name="CONSOLE"><level name="INFO"></level><formatter><named-formatter name="COLOR-PATTERN"></named-formatter></formatter></console-handler><periodic-rotating-file-handler name="FILE" autoflush="true"><formatter><named-formatter name="PATTERN"></named-formatter></formatter><file relative-to="jboss.server.log.dir" path="server.log"></file><suffix value=".yyyy-MM-dd"></suffix><append value="true"></append></periodic-rotating-file-handler><logger category="com.arjuna"><level name="WARN"></level></logger><logger category="org.jboss.as.config"><level name="DEBUG"></level></logger><logger category="sun.rmi"><level name="WARN"></level></logger><root-logger><level name="INFO"></level><handlers><handler name="CONSOLE"></handler><handler name="FILE"></handler></handlers></root-logger><formatter name="PATTERN"><pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter><formatter name="COLOR-PATTERN"><pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter></subsystem><subsystem xmlns="urn:jboss:domain:batch-jberet:1.0"><default-job-repository name="in-memory"></default-job-repository><default-thread-pool name="batch"></default-thread-pool><job-repository name="in-memory"><in-memory></in-memory></job-repository><thread-pool name="batch"><max-threads count="10"></max-threads><keepalive-time time="30" unit="seconds"></keepalive-time></thread-pool></subsystem><subsystem xmlns="urn:jboss:domain:bean-validation:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:datasources:4.0"><datasources><datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true"><connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource><datasource jndi-name="java:jboss/datasources/MySQLDS" pool-name="MySQLDS"><connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url><driver>mysql</driver><security><user-name>root</user-name><password>admin</password></security><validation><check-valid-connection-sql>select 1</check-valid-connection-sql><background-validation>true</background-validation><background-validation-millis>10000</background-validation-millis><exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter"></exception-sorter></validation></datasource><drivers><driver name="h2" module="com.h2database.h2"><xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class></driver><driver name="mysql" module="org.mysql"><driver-class>com.mysql.jdbc.Driver</driver-class></driver></drivers></datasources></subsystem><subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0"><deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"></deployment-scanner></subsystem><subsystem xmlns="urn:jboss:domain:ee:4.0"><spec-descriptor-property-replacement>false</spec-descriptor-property-replacement><concurrent><context-services><context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"></context-service></context-services><managed-thread-factories><managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"></managed-thread-factory></managed-thread-factories><managed-executor-services><managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" keepalive-time="5000"></managed-executor-service></managed-executor-services><managed-scheduled-executor-services><managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" keepalive-time="3000"></managed-scheduled-executor-service></managed-scheduled-executor-services></concurrent><default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"></default-bindings></subsystem><subsystem xmlns="urn:jboss:domain:ejb3:4.0"><session-bean><stateless><bean-instance-pool-ref pool-name="slsb-strict-max-pool"></bean-instance-pool-ref></stateless><stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"></stateful><singleton default-access-timeout="5000"></singleton></session-bean><pools><bean-instance-pools><strict-max-pool name="slsb-strict-max-pool" derive-size="from-worker-pools" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool><strict-max-pool name="mdb-strict-max-pool" derive-size="from-cpu-count" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool></bean-instance-pools></pools><caches><cache name="simple"></cache><cache name="distributable" passivation-store-ref="infinispan" aliases="passivating clustered"></cache></caches><passivation-stores><passivation-store name="infinispan" cache-container="ejb" max-size="10000"></passivation-store></passivation-stores><async thread-pool-name="default"></async><timer-service thread-pool-name="default" default-data-store="default-file-store"><data-stores><file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"></file-data-store></data-stores></timer-service><remote connector-ref="http-remoting-connector" thread-pool-name="default"></remote><thread-pools><thread-pool name="default"><max-threads count="10"></max-threads><keepalive-time time="100" unit="milliseconds"></keepalive-time></thread-pool></thread-pools><default-security-domain value="other"></default-security-domain><default-missing-method-permissions-deny-access value="true"></default-missing-method-permissions-deny-access><log-system-exceptions value="true"></log-system-exceptions></subsystem><subsystem xmlns="urn:jboss:domain:io:1.1"><worker name="default"></worker><buffer-pool name="default"></buffer-pool></subsystem><subsystem xmlns="urn:jboss:domain:infinispan:4.0"><cache-container name="server" default-cache="default" module="org.wildfly.clustering.server"><local-cache name="default"><transaction mode="BATCH"></transaction></local-cache></cache-container><cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache><local-cache name="concurrent"><file-store passivation="true" purge="false"></file-store></local-cache></cache-container><cache-container name="ejb" aliases="sfsb" default-cache="passivation" module="org.wildfly.clustering.ejb.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache></cache-container><cache-container name="hibernate" default-cache="local-query" module="org.hibernate.infinispan"><local-cache name="entity"><transaction mode="NON_XA"></transaction><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="local-query"><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="timestamps"></local-cache></cache-container></subsystem><subsystem xmlns="urn:jboss:domain:jaxrs:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jca:4.0"><archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"></archive-validation><bean-validation enabled="true"></bean-validation><default-workmanager><short-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></short-running-threads><long-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></long-running-threads></default-workmanager><cached-connection-manager></cached-connection-manager></subsystem><subsystem xmlns="urn:jboss:domain:jdr:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jmx:1.3"><expose-resolved-model></expose-resolved-model><expose-expression-model></expose-expression-model><remoting-connector></remoting-connector></subsystem><subsystem xmlns="urn:jboss:domain:jpa:1.1"><jpa default-datasource="" default-extended-persistence-inheritance="DEEP"></jpa></subsystem><subsystem xmlns="urn:jboss:domain:jsf:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:mail:2.0"><mail-session name="default" jndi-name="java:jboss/mail/Default"><smtp-server outbound-socket-binding-ref="mail-smtp"></smtp-server></mail-session></subsystem><subsystem xmlns="urn:jboss:domain:naming:2.0"><remote-naming></remote-naming></subsystem><subsystem xmlns="urn:jboss:domain:pojo:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:remoting:3.0"><endpoint></endpoint><http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"></http-connector></subsystem><subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"></subsystem><subsystem xmlns="urn:jboss:domain:request-controller:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:sar:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:security-manager:1.0"><deployment-permissions><maximum-set><permission class="java.security.AllPermission"></permission></maximum-set></deployment-permissions></subsystem><subsystem xmlns="urn:jboss:domain:security:1.2"><security-domains><security-domain name="other" cache-type="default"><authentication><login-module code="Remoting" flag="optional"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module><login-module code="RealmDirect" flag="required"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module></authentication></security-domain><security-domain name="jboss-web-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jboss-ejb-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jaspitest" cache-type="default"><authentication-jaspi><login-module-stack name="dummy"><login-module code="Dummy" flag="optional"></login-module></login-module-stack><auth-module code="Dummy"></auth-module></authentication-jaspi></security-domain></security-domains></subsystem><subsystem xmlns="urn:jboss:domain:transactions:3.0"><core-environment><process-id><uuid></uuid></process-id></core-environment><recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"></recovery-environment></subsystem><subsystem xmlns="urn:jboss:domain:undertow:3.1"><buffer-cache name="default"></buffer-cache><server name="default-server"><http-listener name="default" socket-binding="http" redirect-socket="https" enable-http2="true"></http-listener><https-listener name="https" socket-binding="https" security-realm="ApplicationRealm" enable-http2="true"></https-listener><host name="default-host" alias="localhost"><location name="/" handler="welcome-content"></location><filter-ref name="server-header"></filter-ref><filter-ref name="x-powered-by-header"></filter-ref></host></server><servlet-container name="default"><jsp-config></jsp-config><websockets></websockets></servlet-container><handlers><file name="welcome-content" path="${jboss.home.dir}/welcome-content"></file></handlers><filters><response-header name="server-header" header-name="Server" header-value="WildFly/10"></response-header><response-header name="x-powered-by-header" header-name="X-Powered-By" header-value="Undertow/1"></response-header></filters></subsystem><subsystem xmlns="urn:jboss:domain:webservices:2.0"><wsdl-host>${jboss.bind.address:127.0.0.1}</wsdl-host><endpoint-config name="Standard-Endpoint-Config"></endpoint-config><endpoint-config name="Recording-Endpoint-Config"><pre-handler-chain name="recording-handlers" protocol-bindings="##SOAP11_HTTP ##SOAP11_HTTP_MTOM ##SOAP12_HTTP ##SOAP12_HTTP_MTOM"><handler name="RecordingHandler" class="org.jboss.ws.common.invocation.RecordingServerHandler"></handler></pre-handler-chain></endpoint-config><client-config name="Standard-Client-Config"></client-config></subsystem><subsystem xmlns="urn:jboss:domain:weld:3.0"></subsystem></profile><interfaces><interface name="management"><inet-address value="${jboss.bind.address.management:127.0.0.1}"></inet-address></interface><interface name="public"><inet-address value="${jboss.bind.address:127.0.0.1}"></inet-address></interface></interfaces><socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}"><socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"></socket-binding><socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"></socket-binding><socket-binding name="ajp" port="${jboss.ajp.port:8009}"></socket-binding><socket-binding name="http" port="${jboss.http.port:8080}"></socket-binding><socket-binding name="https" port="${jboss.https.port:8443}"></socket-binding><socket-binding name="txn-recovery-environment" port="4712"></socket-binding><socket-binding name="txn-status-manager" port="4713"></socket-binding><outbound-socket-binding name="mail-smtp"><remote-destination host="localhost" port="25"></remote-destination></outbound-socket-binding></socket-binding-group></server>'
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/src/test/resources/arquillian.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <arquillian xmlns=\"http://jboss.org/schema/arquillian\"\n 13     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n 15          http://jboss.org/schema/arquillian/arquillian_1_0.xsd\">\n 16  \n 17     <!-- Uncomment to have test archives exported to the file system for inspection -->\n 18  <!--    <engine>  -->\n 19  <!--       <property name=\"deploymentExportPath\">target/</property>  -->\n 20  <!--    </engine> -->\n 21  \n 22     <!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature -->\n 23     <defaultProtocol type=\"Servlet 3.0\" />\n 24  \n 25     <!-- Example configuration for a remote JBoss EAP instance -->\n 26     <container qualifier=\"jboss\" default=\"true\">\n 27        <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->\n 28        <configuration>\n 29           <property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property>\n 30        </configuration>\n 31     </container>\n 32  \n 33  </arquillian>\n"
        lineNumber: 29
        variables:
          data: ""
          innerText: "\n\n\n\n   \n\n\n\n\n   \n   \n\n   \n   \n      \n      \n         /Users/ceposta/dev/eap/wildfly-10.0.0.Final\n      \n   \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><arquillian xmlns=\"http://jboss.org/schema/arquillian\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n        http://jboss.org/schema/arquillian/arquillian_1_0.xsd\"><!-- Uncomment to have test archives exported to the file system for inspection --><!--    <engine>  --><!--       <property name=\"deploymentExportPath\">target/</property>  --><!--    </engine> --><!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature --><defaultProtocol type=\"Servlet 3.0\"></defaultProtocol><!-- Example configuration for a remote JBoss EAP instance --><container qualifier=\"jboss\" default=\"true\"><!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property --><configuration><property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property></configuration></container></arquillian>"
      - uri: file:///opt/input/source/backend-v2/src/test/resources/test-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13     or testing only. It uses H2, an in memory database that ships with JBoss \n 14     AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17     xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18     <!-- The datasource is bound into JNDI at this location. We reference \n 19        this in META-INF/test-persistence.xml -->\n 20     <datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\"\n 21        pool-name=\"ticket-monster-test\" enabled=\"true\"\n 22        use-java-context=\"true\">\n 23        <connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url>\n 24        <driver>h2</driver>\n 25        <security>\n 26           <user-name>sa</user-name>\n 27           <password>sa</password>\n 28        </security>\n 29     </datasource>\n 30  </datasources>\n 31   \n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n\n   \n   \n      jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1\n      h2\n      \n         sa\n         sa\n      \n   \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n   or testing only. It uses H2, an in memory database that ships with JBoss \n   AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n      this in META-INF/test-persistence.xml --><datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\" pool-name=\"ticket-monster-test\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/target/classes/ff4j.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\n  \n  \n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8"?><features xmlns="http://ff4j.org/schema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ff4j.org/schema http://ff4j.org/schema/ff4j-1.4.0.xsd"><feature uid="orders-internal" enable="true" description="Continue with legacy orders implementation"></feature><feature uid="orders-service" enable="false" description="Call new orders microservice"></feature></features>
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><persistence version=\"2.0\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        http://xmlns.jcp.org/xml/ns/persistence\n        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"><persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/backend-v2/target/test-classes/arquillian.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <arquillian xmlns=\"http://jboss.org/schema/arquillian\"\n 13     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n 15          http://jboss.org/schema/arquillian/arquillian_1_0.xsd\">\n 16  \n 17     <!-- Uncomment to have test archives exported to the file system for inspection -->\n 18  <!--    <engine>  -->\n 19  <!--       <property name=\"deploymentExportPath\">target/</property>  -->\n 20  <!--    </engine> -->\n 21  \n 22     <!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature -->\n 23     <defaultProtocol type=\"Servlet 3.0\" />\n 24  \n 25     <!-- Example configuration for a remote JBoss EAP instance -->\n 26     <container qualifier=\"jboss\" default=\"true\">\n 27        <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->\n 28        <configuration>\n 29           <property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property>\n 30        </configuration>\n 31     </container>\n 32  \n 33  </arquillian>\n"
        lineNumber: 29
        variables:
          data: ""
          innerText: "\n\n\n\n   \n\n\n\n\n   \n   \n\n   \n   \n      \n      \n         /Users/ceposta/dev/eap/wildfly-10.0.0.Final\n      \n   \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><arquillian xmlns=\"http://jboss.org/schema/arquillian\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://jboss.org/schema/arquillian\n        http://jboss.org/schema/arquillian/arquillian_1_0.xsd\"><!-- Uncomment to have test archives exported to the file system for inspection --><!--    <engine>  --><!--       <property name=\"deploymentExportPath\">target/</property>  --><!--    </engine> --><!-- Force the use of the Servlet 3.0 protocol with all containers, as it is the most mature --><defaultProtocol type=\"Servlet 3.0\"></defaultProtocol><!-- Example configuration for a remote JBoss EAP instance --><container qualifier=\"jboss\" default=\"true\"><!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property --><configuration><property name=\"jbossHome\">/Users/ceposta/dev/eap/wildfly-10.0.0.Final</property></configuration></container></arquillian>"
      - uri: file:///opt/input/source/backend-v2/target/test-classes/test-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13     or testing only. It uses H2, an in memory database that ships with JBoss \n 14     AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17     xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18     <!-- The datasource is bound into JNDI at this location. We reference \n 19        this in META-INF/test-persistence.xml -->\n 20     <datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\"\n 21        pool-name=\"ticket-monster-test\" enabled=\"true\"\n 22        use-java-context=\"true\">\n 23        <connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url>\n 24        <driver>h2</driver>\n 25        <security>\n 26           <user-name>sa</user-name>\n 27           <password>sa</password>\n 28        </security>\n 29     </datasource>\n 30  </datasources>\n 31   \n"
        lineNumber: 23
        variables:
          data: ""
          innerText: "\n\n\n\n   \n   \n      jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1\n      h2\n      \n         sa\n         sa\n      \n   \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n   or testing only. It uses H2, an in memory database that ships with JBoss \n   AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n      this in META-INF/test-persistence.xml --><datasource jndi-name=\"java:jboss/datasources/TicketMonsterTestDS\" pool-name=\"ticket-monster-test\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster-test;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/monolith/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <packaging>jar</packaging>\n  8      <name>ticket-monster</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <properties>\n 12          <!-- Explicitly declaring the source encoding eliminates the following \n 13              message: -->\n 14          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 15              resources, i.e. build is platform dependent! -->\n 16          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 17          <!-- Timestamp format for the maven.build.timestamp property -->\n 18          <!-- You can reference property in pom.xml or filtered resources \n 19              (must enable third-party plugin if using Maven < 2.1) -->\n 20          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 21          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n 22              variable -->\n 23          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n 24          <maven.home>${env.MAVEN_HOME}</maven.home>\n 25          <!-- the version for the Server -->\n 26          <version.server>30.0.0.Final</version.server>\n 27          <!-- the versions for BOMs, Packs and Plugins -->\n 28          <version.bom.ee>${version.server}</version.bom.ee>\n 29          <version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin>\n 30          <version.surefire.plugin>2.10</version.surefire.plugin>\n 31          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n 32          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 33          <docker.image.name>%g/%a:%l</docker.image.name>\n 34  \n 35          <compiler-plugin.version>3.10.1</compiler-plugin.version>\n 36  \n 37          <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n 38          <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n 39          <quarkus.platform.version>3.5.1</quarkus.platform.version>\n 40  \n 41          <surefire-plugin.version>3.0.0</surefire-plugin.version>\n 42  \n 43      </properties>\n 44  \n 45      <dependencyManagement>\n 46          <dependencies>\n 47              <dependency>\n 48                  <groupId>${quarkus.platform.group-id}</groupId>\n 49                  <artifactId>${quarkus.platform.artifact-id}</artifactId>\n 50                  <version>${quarkus.platform.version}</version>\n 51                  <type>pom</type>\n 52                  <scope>import</scope>\n 53              </dependency>\n 54          </dependencies>\n 55      </dependencyManagement>\n 56  \n 57      <dependencies>\n 58  \n 59          <dependency>\n 60              <groupId>io.quarkus</groupId>\n 61              <artifactId>quarkus-arc</artifactId>\n 62          </dependency>\n 63  \n 64          <dependency>\n 65              <groupId>jakarta.validation</groupId>\n 66              <artifactId>jakarta.validation-api</artifactId>\n 67              <scope>provided</scope>\n 68          </dependency>\n 69  \n 70          <dependency>\n 71              <groupId>jakarta.annotation</groupId>\n 72              <artifactId>jakarta.annotation-api</artifactId>\n 73              <scope>provided</scope>\n 74          </dependency>\n 75  \n 76          <dependency>\n 77              <groupId>io.quarkus</groupId>\n 78              <artifactId>quarkus-resteasy-reactive</artifactId>\n 79          </dependency>\n 80  \n 81          <dependency>\n 82              <groupId>io.quarkus</groupId>\n 83              <artifactId>quarkus-hibernate-orm</artifactId>\n 84          </dependency>\n 85          <dependency>\n 86              <groupId>io.quarkus</groupId>\n 87              <artifactId>quarkus-jdbc-mysql</artifactId>\n 88          </dependency>\n 89          <dependency>\n 90              <groupId>io.quarkus</groupId>\n 91              <artifactId>quarkus-hibernate-validator</artifactId>\n 92          </dependency>\n 93  \n 94          <dependency>\n 95              <groupId>io.quarkus</groupId>\n 96              <artifactId>quarkus-undertow</artifactId>\n 97          </dependency>\n 98  \n 99          <!-- Now we declare any tools needed -->\n100          <dependency>\n101              <groupId>org.hibernate.orm</groupId>\n102              <artifactId>hibernate-jpamodelgen</artifactId>\n103              <scope>provided</scope>\n104          </dependency>"
        lineNumber: 3
        variables:
          data: ""
          innerText: "\n\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n        \n        30.0.0.Final\n        \n        ${version.server}\n        4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n            \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n                ${quarkus.platform.version}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n            io.quarkus\n            quarkus-arc\n        \n\n        \n            jakarta.validation\n            jakarta.validation-api\n            provided\n        \n\n        \n            jakarta.annotation\n            jakarta.annotation-api\n            provided\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive\n        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n        \n\n        \n            io.quarkus\n            quarkus-undertow\n        \n\n        \n        \n            org.hibernate.orm\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            3.2.1\n            pom\n            test\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    ${compiler-plugin.version}\n                    \n                        \n                            -parameters\n                        \n                    \n                \n\n\n                \n                    ${quarkus.platform.group-id}\n                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n                    true\n                    \n                        \n                            \n                                build\n                                generate-code\n                                generate-code-tests\n                            \n                        \n                    \n                \n\n                \n                    maven-surefire-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            org.jboss.logmanager.LogManager\n                            ${maven.home}\n                        \n                    \n                \n\n                \n                    maven-failsafe-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            \n                                integration-test\n                                verify\n                            \n                            \n                                \n                                    ${project.build.directory}/${project.build.finalName}-runner\n                                    org.jboss.logmanager.LogManager\n                                    ${maven.home}\n                                \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n            \n                ${quarkus.platform.group-id}\n                quarkus-maven-plugin\n            \n        \n    \n\n    \n        \n            native\n            \n                \n                    native\n                \n            \n            \n                false\n                native\n            \n        \n        \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            kubernetes\n            \n                \n                %g/%a:%l\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT\n                        \n                    \n                \n            \n        \n\n    \n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"><modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!-- the version for the Server --><version.server>30.0.0.Final</version.server><!-- the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!-- Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles></project>"
      - uri: file:///opt/input/source/monolith/src/main/assembly/assembly.xml
        message: ""
        codeSnip: "  1  <?xml version='1.0' encoding='UTF-8'?>\n  2  <assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3      xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd\">\n  4      <id>release-dist</id>\n  5      <formats>\n  6          <format>zip</format>\n  7      </formats>\n  8      <baseDirectory>${artifactId}-${version}</baseDirectory>\n  9      <fileSets>\n 10          <fileSet>            \n 11              <directory>../</directory>\n 12              <outputDirectory>/</outputDirectory>\n 13              <excludes>\n 14                  <exclude>**/.*</exclude>\n 15                  <exclude>.gitignore</exclude>\n 16                  <exclude>**/${project.build.directory}/**</exclude>\n 17                  <exclude>**/README.txt</exclude>\n 18                  <exclude>**/readme.txt</exclude>\n 19                  <exclude>**/docs/</exclude>\n 20                  <exclude>**/dist/**</exclude>\n 21                  <exclude>**/tutorial/**</exclude>\n 22                  <exclude>**/settings.xml</exclude>\n 23              </excludes>\n 24          </fileSet>\n 25          <fileSet>\n 26              <directory>../</directory>\n 27              <outputDirectory>/</outputDirectory>\n 28              <includes>\n 29                  <include>**/.settings/.jsdtscope</include>\n 30              </includes>\n 31          </fileSet>\n 32      </fileSets>   \n 33  </assembly>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n    release-dist\n    \n        zip\n    \n    ${artifactId}-${version}\n    \n                    \n            ../\n            /\n            \n                **/.*\n                .gitignore\n                **/${project.build.directory}/**\n                **/README.txt\n                **/readme.txt\n                **/docs/\n                **/dist/**\n                **/tutorial/**\n                **/settings.xml\n            \n        \n        \n            ../\n            /\n            \n                **/.settings/.jsdtscope\n            \n        \n       \n\n"
          matchingXML: <?xml version="&#39;1.0&#39;" encoding="&#39;UTF-8&#39;"?><assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd"><id>release-dist</id><formats><format>zip</format></formats><baseDirectory>${artifactId}-${version}</baseDirectory><fileSets><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><excludes><exclude>**/.*</exclude><exclude>.gitignore</exclude><exclude>**/${project.build.directory}/**</exclude><exclude>**/README.txt</exclude><exclude>**/readme.txt</exclude><exclude>**/docs/</exclude><exclude>**/dist/**</exclude><exclude>**/tutorial/**</exclude><exclude>**/settings.xml</exclude></excludes></fileSet><fileSet><directory>../</directory><outputDirectory>/</outputDirectory><includes><include>**/.settings/.jsdtscope</include></includes></fileSet></fileSets></assembly>
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/beans.xml
        message: ""
        variables:
          data: ""
          innerText: |2+





          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- This file can be an empty text file (0 bytes) --><!-- We're declaring the schema to save you time if you do have to configure \n   this in the future --><beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        https://jakarta.ee/xml/ns/jakartaee\n        https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\"></beans>"
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/jboss-deployment-structure.xml
        message: ""
        variables:
          data: ""
          innerText: "\n    \n        \n        \n        \n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <?xml?><jboss-deployment-structure><deployment><exclusions></exclusions><!-- This allows you to define additional dependencies, it is the same
              as using the Dependencies: manifest attribute --><dependencies><module name="org.jboss.as.naming"></module><module name="org.jboss.as.server"></module><module name="org.jboss.msc"></module></dependencies></deployment></jboss-deployment-structure>
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/ticket-monster-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13      or testing only. It uses H2, an in memory database that ships with JBoss \n 14      AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17      xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18      <!-- The datasource is bound into JNDI at this location. We reference \n 19          this in META-INF/persistence.xml -->\n 20      <datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\"\n 21          pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\">\n 22          <connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n 23          <driver>h2</driver>\n 24          <security>\n 25              <user-name>sa</user-name>\n 26              <password>sa</password>\n 27          </security>\n 28      </datasource>\n 29  </datasources>\n 30   \n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n\n    \n    \n        jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n        h2\n        \n            sa\n            sa\n        \n    \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n    or testing only. It uses H2, an in memory database that ships with JBoss \n    AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n        this in META-INF/persistence.xml --><datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\" pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <!-- TODO: use 6.0? -->
            3  <web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0"
            4           xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd">
            5    <display-name>ticket-monster</display-name>
            6    <session-config>
            7      <session-timeout>30</session-timeout>
            8    </session-config>
            9    <mime-mapping>
           10      <extension>ico</extension>
           11      <mime-type>image/x-icon</mime-type>
           12    </mime-mapping>
           13    <welcome-file-list>
           14      <welcome-file>/index.html</welcome-file>
           15    </welcome-file-list>
           16  </web-app>
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n\n"
          matchingXML: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!-- TODO: use 6.0? --><web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"><display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list></web-app>'
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/config.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\"\n  3  \tid=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\">\n  4  \t<name>TicketMonster-Cordova</name>\n  5  \n  6  \t<description>\n  7  \t\tThe hybrid mobile app for TicketMonster.\n  8  \t</description>\n  9  \n 10  \t<author href=\"http://www.jboss.org/jdf/examples/get-started/\"\n 11  \t\temail=\"jdf-users@lists.jboss.org\">\n 12  \t\tJBoss by Red Hat\n 13  \t</author>\n 14  \n 15  \t<!-- The application start page -->\n 16  \t<content src=\"mobileapp.html\" />\n 17  \n 18  \t<!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n 19  \t\tassumed blocked unless set otherwise. -->\n 20  \t<access origin=\"http://ticketmonster-jdf.rhcloud.com\" />\n 21  \t<preference name=\"fullscreen\" value=\"true\" />\n 22  \t<preference name=\"webviewbounce\" value=\"true\" />\n 23  \n 24  \t<feature name=\"App\">\n 25  \t\t<param name=\"android-package\" value=\"org.apache.cordova.App\" />\n 26  \t</feature>\n 27  \t<feature name=\"StatusBar\">\n 28  \t\t<param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\" />\n 29  \t\t<param name=\"ios-package\" value=\"CDVStatusBar\" />\n 30  \t\t<param name=\"id\" value=\"org.apache.cordova.statusbar\" />\n 31  \t</feature>\n 32  \t<feature name=\"Device\">\n 33  \t\t<param name=\"android-package\" value=\"org.apache.cordova.device.Device\" />\n 34  \t\t<param name=\"ios-package\" value=\"CDVDevice\" />\n 35  \t\t<param name=\"id\" value=\"org.apache.cordova.device\" />\n 36  \t</feature>\n 37  \t<feature name=\"Notification\">\n 38  \t\t<param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\" />\n 39  \t\t<param name=\"ios-package\" value=\"CDVNotification\" />\n 40  \t\t<param name=\"id\" value=\"org.apache.cordova.dialogs\" />\n 41  \t</feature>\n 42  \n 43  </widget>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\tTicketMonster-Cordova\n\n\t\n\t\tThe hybrid mobile app for TicketMonster.\n\t\n\n\t\n\t\tJBoss by Red Hat\n\t\n\n\t\n\t\n\n\t\n\t\n\t\n\t\n\n\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\" id=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\"><name>TicketMonster-Cordova</name><description>The hybrid mobile app for TicketMonster.</description><author href=\"http://www.jboss.org/jdf/examples/get-started/\" email=\"jdf-users@lists.jboss.org\">JBoss by Red Hat</author><!-- The application start page --><content src=\"mobileapp.html\"></content><!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n\t\tassumed blocked unless set otherwise. --><access origin=\"http://ticketmonster-jdf.rhcloud.com\"></access><preference name=\"fullscreen\" value=\"true\"></preference><preference name=\"webviewbounce\" value=\"true\"></preference><feature name=\"App\"><param name=\"android-package\" value=\"org.apache.cordova.App\"></param></feature><feature name=\"StatusBar\"><param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\"></param><param name=\"ios-package\" value=\"CDVStatusBar\"></param><param name=\"id\" value=\"org.apache.cordova.statusbar\"></param></feature><feature name=\"Device\"><param name=\"android-package\" value=\"org.apache.cordova.device.Device\"></param><param name=\"ios-package\" value=\"CDVDevice\"></param><param name=\"id\" value=\"org.apache.cordova.device\"></param></feature><feature name=\"Notification\"><param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\"></param><param name=\"ios-package\" value=\"CDVNotification\"></param><param name=\"id\" value=\"org.apache.cordova.dialogs\"></param></feature></widget>"
      - uri: file:///opt/input/source/monolith/src/main/wf-standalone/module/module.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\n\n  \n    \n  \n\n  \n    \n    \n  \n"
          matchingXML: <?xml version="1.0"?><module xmlns="urn:jboss:module:1.1" name="org.mysql"><resources><resource-root path="mysql-connector-java-5.1.38.jar"></resource-root></resources><dependencies><module name="javax.api"></module><module name="javax.transaction.api"></module></dependencies></module>
      - uri: file:///opt/input/source/monolith/src/main/wf-standalone/standalone.xml
        message: ""
        codeSnip: " 40            <properties path=\"mgmt-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n 41          </authentication>\n 42          <authorization map-groups-to-roles=\"false\">\n 43            <properties path=\"mgmt-groups.properties\" relative-to=\"jboss.server.config.dir\"/>\n 44          </authorization>\n 45        </security-realm>\n 46        <security-realm name=\"ApplicationRealm\">\n 47          <authentication>\n 48            <local default-user=\"$local\" allowed-users=\"*\" skip-group-loading=\"true\"/>\n 49            <properties path=\"application-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n 50          </authentication>\n 51          <authorization>\n 52            <properties path=\"application-roles.properties\" relative-to=\"jboss.server.config.dir\"/>\n 53          </authorization>\n 54        </security-realm>\n 55      </security-realms>\n 56      <audit-log>\n 57        <formatters>\n 58          <json-formatter name=\"json-formatter\"/>\n 59        </formatters>\n 60        <handlers>\n 61          <file-handler name=\"file\" formatter=\"json-formatter\" path=\"audit-log.log\" relative-to=\"jboss.server.data.dir\"/>\n 62        </handlers>\n 63        <logger log-boot=\"true\" log-read-only=\"false\" enabled=\"false\">\n 64          <handlers>\n 65            <handler name=\"file\"/>\n 66          </handlers>\n 67        </logger>\n 68      </audit-log>\n 69      <management-interfaces>\n 70        <http-interface security-realm=\"ManagementRealm\" http-upgrade-enabled=\"true\">\n 71          <socket-binding http=\"management-http\"/>\n 72        </http-interface>\n 73      </management-interfaces>\n 74      <access-control provider=\"simple\">\n 75        <role-mapping>\n 76          <role name=\"SuperUser\">\n 77            <include>\n 78              <user name=\"$local\"/>\n 79            </include>\n 80          </role>\n 81        </role-mapping>\n 82      </access-control>\n 83    </management>\n 84  \n 85    <profile>\n 86      <subsystem xmlns=\"urn:jboss:domain:logging:3.0\">\n 87        <console-handler name=\"CONSOLE\">\n 88          <level name=\"INFO\"/>\n 89          <formatter>\n 90            <named-formatter name=\"COLOR-PATTERN\"/>\n 91          </formatter>\n 92        </console-handler>\n 93        <periodic-rotating-file-handler name=\"FILE\" autoflush=\"true\">\n 94          <formatter>\n 95            <named-formatter name=\"PATTERN\"/>\n 96          </formatter>\n 97          <file relative-to=\"jboss.server.log.dir\" path=\"server.log\"/>\n 98          <suffix value=\".yyyy-MM-dd\"/>\n 99          <append value=\"true\"/>\n100        </periodic-rotating-file-handler>\n101        <logger category=\"com.arjuna\">\n102          <level name=\"WARN\"/>\n103        </logger>\n104        <logger category=\"org.jboss.as.config\">\n105          <level name=\"DEBUG\"/>\n106        </logger>\n107        <logger category=\"sun.rmi\">\n108          <level name=\"WARN\"/>\n109        </logger>\n110        <root-logger>\n111          <level name=\"INFO\"/>\n112          <handlers>\n113            <handler name=\"CONSOLE\"/>\n114            <handler name=\"FILE\"/>\n115          </handlers>\n116        </root-logger>\n117        <formatter name=\"PATTERN\">\n118          <pattern-formatter pattern=\"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n\"/>\n119        </formatter>\n120        <formatter name=\"COLOR-PATTERN\">\n121          <pattern-formatter pattern=\"%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n\"/>\n122        </formatter>\n123      </subsystem>\n124      <subsystem xmlns=\"urn:jboss:domain:batch-jberet:1.0\">\n125        <default-job-repository name=\"in-memory\"/>\n126        <default-thread-pool name=\"batch\"/>\n127        <job-repository name=\"in-memory\">\n128          <in-memory/>\n129        </job-repository>\n130        <thread-pool name=\"batch\">\n131          <max-threads count=\"10\"/>\n132          <keepalive-time time=\"30\" unit=\"seconds\"/>\n133        </thread-pool>\n134      </subsystem>\n135      <subsystem xmlns=\"urn:jboss:domain:bean-validation:1.0\"/>\n136      <subsystem xmlns=\"urn:jboss:domain:datasources:4.0\">\n137        <datasources>\n138          <datasource jndi-name=\"java:jboss/datasources/ExampleDS\" pool-name=\"ExampleDS\" enabled=\"true\" use-java-context=\"true\">\n139            <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>\n140            <driver>h2</driver>\n141            <security>\n142              <user-name>sa</user-name>\n143              <password>sa</password>\n144            </security>\n145          </datasource>\n146          <datasource jndi-name=\"java:jboss/datasources/MySQLDS\" pool-name=\"MySQLDS\">\n147            <connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url>\n148            <driver>mysql</driver>\n149            <security>\n150              <user-name>root</user-name>\n151              <password>admin</password>\n152            </security>\n153          </datasource>\n154          <drivers>\n155            <driver name=\"h2\" module=\"com.h2database.h2\">\n156              <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>\n157            </driver>\n158            <driver name=\"mysql\" module=\"org.mysql\">\n159              <driver-class>com.mysql.jdbc.Driver</driver-class>\n160            </driver>\n161          </drivers>\n162        </datasources>\n163      </subsystem>\n164      <subsystem xmlns=\"urn:jboss:domain:deployment-scanner:2.0\">\n165        <deployment-scanner path=\"deployments\" relative-to=\"jboss.server.base.dir\" scan-interval=\"5000\" runtime-failure-causes-rollback=\"${jboss.deployment.scanner.rollback.on.failure:false}\"/>\n166      </subsystem>\n167      <subsystem xmlns=\"urn:jboss:domain:ee:4.0\">\n168        <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>\n169        <concurrent>\n170          <context-services>\n171            <context-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/context/default\" use-transaction-setup-provider=\"true\"/>\n172          </context-services>\n173          <managed-thread-factories>\n174            <managed-thread-factory name=\"default\" jndi-name=\"java:jboss/ee/concurrency/factory/default\" context-service=\"default\"/>\n175          </managed-thread-factories>\n176          <managed-executor-services>\n177            <managed-executor-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/executor/default\" context-service=\"default\" hung-task-threshold=\"60000\" keepalive-time=\"5000\"/>\n178          </managed-executor-services>\n179          <managed-scheduled-executor-services>\n180            <managed-scheduled-executor-service name=\"default\" jndi-name=\"java:jboss/ee/concurrency/scheduler/default\" context-service=\"default\" hung-task-threshold=\"60000\" keepalive-time=\"3000\"/>\n181          </managed-scheduled-executor-services>\n182        </concurrent>\n183        <default-bindings context-service=\"java:jboss/ee/concurrency/context/default\" datasource=\"java:jboss/datasources/ExampleDS\" managed-executor-service=\"java:jboss/ee/concurrency/executor/default\" managed-scheduled-executor-service=\"java:jboss/ee/concurrency/scheduler/default\" managed-thread-factory=\"java:jboss/ee/concurrency/factory/default\"/>\n184      </subsystem>\n185      <subsystem xmlns=\"urn:jboss:domain:ejb3:4.0\">\n186        <session-bean>\n187          <stateless>\n188            <bean-instance-pool-ref pool-name=\"slsb-strict-max-pool\"/>\n189          </stateless>\n190          <stateful default-access-timeout=\"5000\" cache-ref=\"simple\" passivation-disabled-cache-ref=\"simple\"/>\n191          <singleton default-access-timeout=\"5000\"/>\n192        </session-bean>\n193        <pools>\n194          <bean-instance-pools>\n195            <strict-max-pool name=\"slsb-strict-max-pool\" derive-size=\"from-worker-pools\" instance-acquisition-timeout=\"5\" instance-acquisition-timeout-unit=\"MINUTES\"/>\n196            <strict-max-pool name=\"mdb-strict-max-pool\" derive-size=\"from-cpu-count\" instance-acquisition-timeout=\"5\" instance-acquisition-timeout-unit=\"MINUTES\"/>\n197          </bean-instance-pools>\n198        </pools>\n199        <caches>\n200          <cache name=\"simple\"/>\n201          <cache name=\"distributable\" passivation-store-ref=\"infinispan\" aliases=\"passivating clustered\"/>\n202        </caches>\n203        <passivation-stores>\n204          <passivation-store name=\"infinispan\" cache-container=\"ejb\" max-size=\"10000\"/>\n205        </passivation-stores>\n206        <async thread-pool-name=\"default\"/>\n207        <timer-service thread-pool-name=\"default\" default-data-store=\"default-file-store\">\n208          <data-stores>\n209            <file-data-store name=\"default-file-store\" path=\"timer-service-data\" relative-to=\"jboss.server.data.dir\"/>\n210          </data-stores>\n211        </timer-service>\n212        <remote connector-ref=\"http-remoting-connector\" thread-pool-name=\"default\"/>\n213        <thread-pools>\n214          <thread-pool name=\"default\">\n215            <max-threads count=\"10\"/>\n216            <keepalive-time time=\"100\" unit=\"milliseconds\"/>\n217          </thread-pool>\n218        </thread-pools>\n219        <default-security-domain value=\"other\"/>\n220        <default-missing-method-permissions-deny-access value=\"true\"/>\n221        <log-system-exceptions value=\"true\"/>\n222      </subsystem>\n223      <subsystem xmlns=\"urn:jboss:domain:io:1.1\">\n224        <worker name=\"default\"/>\n225        <buffer-pool name=\"default\"/>\n226      </subsystem>\n227      <subsystem xmlns=\"urn:jboss:domain:infinispan:4.0\">\n228        <cache-container name=\"server\" default-cache=\"default\" module=\"org.wildfly.clustering.server\">\n229          <local-cache name=\"default\">\n230            <transaction mode=\"BATCH\"/>\n231          </local-cache>\n232        </cache-container>\n233        <cache-container name=\"web\" default-cache=\"passivation\" module=\"org.wildfly.clustering.web.infinispan\">\n234          <local-cache name=\"passivation\">\n235            <locking isolation=\"REPEATABLE_READ\"/>\n236            <transaction mode=\"BATCH\"/>\n237            <file-store passivation=\"true\" purge=\"false\"/>\n238          </local-cache>\n239          <local-cache name=\"persistent\">\n240            <locking isolation=\"REPEATABLE_READ\"/>"
        lineNumber: 139
        variables:
          data: ""
          innerText: "\n\n\n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n\n  \n    \n      \n        \n          \n          \n        \n        \n          \n        \n      \n      \n        \n          \n          \n        \n        \n          \n        \n      \n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n      \n        \n          \n        \n        \n        \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n        \n          \n          \n        \n      \n      \n        \n      \n      \n        \n      \n    \n    \n      \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n    \n      \n        \n          jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n          h2\n          \n            sa\n            sa\n          \n        \n        \n          jdbc:mysql://mysql-backend:3306/ticketmonster\n          mysql\n          \n            root\n            admin\n          \n        \n        \n          \n            org.h2.jdbcx.JdbcDataSource\n          \n          \n            com.mysql.jdbc.Driver\n          \n        \n      \n    \n    \n      \n    \n    \n      false\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n    \n    \n      \n        \n          \n        \n        \n        \n      \n      \n        \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n      \n        \n          \n        \n      \n      \n      \n        \n          \n          \n        \n      \n      \n      \n      \n    \n    \n      \n      \n    \n    \n      \n        \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n          \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n          \n        \n        \n      \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n        \n          \n          \n          \n          \n        \n      \n      \n    \n    \n    \n      \n      \n      \n    \n    \n      \n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n    \n    \n      \n      \n    \n    \n    \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n              \n            \n            \n          \n        \n      \n    \n    \n      \n        \n          \n        \n      \n      \n    \n    \n      \n      \n        \n        \n          \n          \n          \n        \n      \n      \n        \n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n    \n      ${jboss.bind.address:127.0.0.1}\n      \n      \n        \n          \n        \n      \n      \n    \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n    \n    \n    \n    \n    \n    \n    \n      \n    \n  \n\n"
          matchingXML: '<?xml version="&#39;1.0&#39;" encoding="&#39;UTF-8&#39;"?><server xmlns="urn:jboss:domain:4.0"><extensions><extension module="org.jboss.as.clustering.infinispan"></extension><extension module="org.jboss.as.connector"></extension><extension module="org.jboss.as.deployment-scanner"></extension><extension module="org.jboss.as.ee"></extension><extension module="org.jboss.as.ejb3"></extension><extension module="org.jboss.as.jaxrs"></extension><extension module="org.jboss.as.jdr"></extension><extension module="org.jboss.as.jmx"></extension><extension module="org.jboss.as.jpa"></extension><extension module="org.jboss.as.jsf"></extension><extension module="org.jboss.as.logging"></extension><extension module="org.jboss.as.mail"></extension><extension module="org.jboss.as.naming"></extension><extension module="org.jboss.as.pojo"></extension><extension module="org.jboss.as.remoting"></extension><extension module="org.jboss.as.sar"></extension><extension module="org.jboss.as.security"></extension><extension module="org.jboss.as.transactions"></extension><extension module="org.jboss.as.webservices"></extension><extension module="org.jboss.as.weld"></extension><extension module="org.wildfly.extension.batch.jberet"></extension><extension module="org.wildfly.extension.bean-validation"></extension><extension module="org.wildfly.extension.io"></extension><extension module="org.wildfly.extension.request-controller"></extension><extension module="org.wildfly.extension.security.manager"></extension><extension module="org.wildfly.extension.undertow"></extension></extensions><management><security-realms><security-realm name="ManagementRealm"><authentication><local default-user="$local" skip-group-loading="true"></local><properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization map-groups-to-roles="false"><properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm><security-realm name="ApplicationRealm"><authentication><local default-user="$local" allowed-users="*" skip-group-loading="true"></local><properties path="application-users.properties" relative-to="jboss.server.config.dir"></properties></authentication><authorization><properties path="application-roles.properties" relative-to="jboss.server.config.dir"></properties></authorization></security-realm></security-realms><audit-log><formatters><json-formatter name="json-formatter"></json-formatter></formatters><handlers><file-handler name="file" formatter="json-formatter" path="audit-log.log" relative-to="jboss.server.data.dir"></file-handler></handlers><logger log-boot="true" log-read-only="false" enabled="false"><handlers><handler name="file"></handler></handlers></logger></audit-log><management-interfaces><http-interface security-realm="ManagementRealm" http-upgrade-enabled="true"><socket-binding http="management-http"></socket-binding></http-interface></management-interfaces><access-control provider="simple"><role-mapping><role name="SuperUser"><include><user name="$local"></user></include></role></role-mapping></access-control></management><profile><subsystem xmlns="urn:jboss:domain:logging:3.0"><console-handler name="CONSOLE"><level name="INFO"></level><formatter><named-formatter name="COLOR-PATTERN"></named-formatter></formatter></console-handler><periodic-rotating-file-handler name="FILE" autoflush="true"><formatter><named-formatter name="PATTERN"></named-formatter></formatter><file relative-to="jboss.server.log.dir" path="server.log"></file><suffix value=".yyyy-MM-dd"></suffix><append value="true"></append></periodic-rotating-file-handler><logger category="com.arjuna"><level name="WARN"></level></logger><logger category="org.jboss.as.config"><level name="DEBUG"></level></logger><logger category="sun.rmi"><level name="WARN"></level></logger><root-logger><level name="INFO"></level><handlers><handler name="CONSOLE"></handler><handler name="FILE"></handler></handlers></root-logger><formatter name="PATTERN"><pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter><formatter name="COLOR-PATTERN"><pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"></pattern-formatter></formatter></subsystem><subsystem xmlns="urn:jboss:domain:batch-jberet:1.0"><default-job-repository name="in-memory"></default-job-repository><default-thread-pool name="batch"></default-thread-pool><job-repository name="in-memory"><in-memory></in-memory></job-repository><thread-pool name="batch"><max-threads count="10"></max-threads><keepalive-time time="30" unit="seconds"></keepalive-time></thread-pool></subsystem><subsystem xmlns="urn:jboss:domain:bean-validation:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:datasources:4.0"><datasources><datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true"><connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource><datasource jndi-name="java:jboss/datasources/MySQLDS" pool-name="MySQLDS"><connection-url>jdbc:mysql://mysql-backend:3306/ticketmonster</connection-url><driver>mysql</driver><security><user-name>root</user-name><password>admin</password></security></datasource><drivers><driver name="h2" module="com.h2database.h2"><xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class></driver><driver name="mysql" module="org.mysql"><driver-class>com.mysql.jdbc.Driver</driver-class></driver></drivers></datasources></subsystem><subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0"><deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"></deployment-scanner></subsystem><subsystem xmlns="urn:jboss:domain:ee:4.0"><spec-descriptor-property-replacement>false</spec-descriptor-property-replacement><concurrent><context-services><context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"></context-service></context-services><managed-thread-factories><managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"></managed-thread-factory></managed-thread-factories><managed-executor-services><managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" keepalive-time="5000"></managed-executor-service></managed-executor-services><managed-scheduled-executor-services><managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" keepalive-time="3000"></managed-scheduled-executor-service></managed-scheduled-executor-services></concurrent><default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"></default-bindings></subsystem><subsystem xmlns="urn:jboss:domain:ejb3:4.0"><session-bean><stateless><bean-instance-pool-ref pool-name="slsb-strict-max-pool"></bean-instance-pool-ref></stateless><stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"></stateful><singleton default-access-timeout="5000"></singleton></session-bean><pools><bean-instance-pools><strict-max-pool name="slsb-strict-max-pool" derive-size="from-worker-pools" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool><strict-max-pool name="mdb-strict-max-pool" derive-size="from-cpu-count" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"></strict-max-pool></bean-instance-pools></pools><caches><cache name="simple"></cache><cache name="distributable" passivation-store-ref="infinispan" aliases="passivating clustered"></cache></caches><passivation-stores><passivation-store name="infinispan" cache-container="ejb" max-size="10000"></passivation-store></passivation-stores><async thread-pool-name="default"></async><timer-service thread-pool-name="default" default-data-store="default-file-store"><data-stores><file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"></file-data-store></data-stores></timer-service><remote connector-ref="http-remoting-connector" thread-pool-name="default"></remote><thread-pools><thread-pool name="default"><max-threads count="10"></max-threads><keepalive-time time="100" unit="milliseconds"></keepalive-time></thread-pool></thread-pools><default-security-domain value="other"></default-security-domain><default-missing-method-permissions-deny-access value="true"></default-missing-method-permissions-deny-access><log-system-exceptions value="true"></log-system-exceptions></subsystem><subsystem xmlns="urn:jboss:domain:io:1.1"><worker name="default"></worker><buffer-pool name="default"></buffer-pool></subsystem><subsystem xmlns="urn:jboss:domain:infinispan:4.0"><cache-container name="server" default-cache="default" module="org.wildfly.clustering.server"><local-cache name="default"><transaction mode="BATCH"></transaction></local-cache></cache-container><cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache></cache-container><cache-container name="ejb" aliases="sfsb" default-cache="passivation" module="org.wildfly.clustering.ejb.infinispan"><local-cache name="passivation"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="true" purge="false"></file-store></local-cache><local-cache name="persistent"><locking isolation="REPEATABLE_READ"></locking><transaction mode="BATCH"></transaction><file-store passivation="false" purge="false"></file-store></local-cache></cache-container><cache-container name="hibernate" default-cache="local-query" module="org.hibernate.infinispan"><local-cache name="entity"><transaction mode="NON_XA"></transaction><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="local-query"><eviction strategy="LRU" max-entries="10000"></eviction><expiration max-idle="100000"></expiration></local-cache><local-cache name="timestamps"></local-cache></cache-container></subsystem><subsystem xmlns="urn:jboss:domain:jaxrs:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jca:4.0"><archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"></archive-validation><bean-validation enabled="true"></bean-validation><default-workmanager><short-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></short-running-threads><long-running-threads><core-threads count="50"></core-threads><queue-length count="50"></queue-length><max-threads count="50"></max-threads><keepalive-time time="10" unit="seconds"></keepalive-time></long-running-threads></default-workmanager><cached-connection-manager></cached-connection-manager></subsystem><subsystem xmlns="urn:jboss:domain:jdr:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:jmx:1.3"><expose-resolved-model></expose-resolved-model><expose-expression-model></expose-expression-model><remoting-connector></remoting-connector></subsystem><subsystem xmlns="urn:jboss:domain:jpa:1.1"><jpa default-datasource="" default-extended-persistence-inheritance="DEEP"></jpa></subsystem><subsystem xmlns="urn:jboss:domain:jsf:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:mail:2.0"><mail-session name="default" jndi-name="java:jboss/mail/Default"><smtp-server outbound-socket-binding-ref="mail-smtp"></smtp-server></mail-session></subsystem><subsystem xmlns="urn:jboss:domain:naming:2.0"><remote-naming></remote-naming></subsystem><subsystem xmlns="urn:jboss:domain:pojo:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:remoting:3.0"><endpoint></endpoint><http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"></http-connector></subsystem><subsystem xmlns="urn:jboss:domain:resource-adapters:4.0"></subsystem><subsystem xmlns="urn:jboss:domain:request-controller:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:sar:1.0"></subsystem><subsystem xmlns="urn:jboss:domain:security-manager:1.0"><deployment-permissions><maximum-set><permission class="java.security.AllPermission"></permission></maximum-set></deployment-permissions></subsystem><subsystem xmlns="urn:jboss:domain:security:1.2"><security-domains><security-domain name="other" cache-type="default"><authentication><login-module code="Remoting" flag="optional"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module><login-module code="RealmDirect" flag="required"><module-option name="password-stacking" value="useFirstPass"></module-option></login-module></authentication></security-domain><security-domain name="jboss-web-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jboss-ejb-policy" cache-type="default"><authorization><policy-module code="Delegating" flag="required"></policy-module></authorization></security-domain><security-domain name="jaspitest" cache-type="default"><authentication-jaspi><login-module-stack name="dummy"><login-module code="Dummy" flag="optional"></login-module></login-module-stack><auth-module code="Dummy"></auth-module></authentication-jaspi></security-domain></security-domains></subsystem><subsystem xmlns="urn:jboss:domain:transactions:3.0"><core-environment><process-id><uuid></uuid></process-id></core-environment><recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"></recovery-environment></subsystem><subsystem xmlns="urn:jboss:domain:undertow:3.0"><buffer-cache name="default"></buffer-cache><server name="default-server"><http-listener name="default" socket-binding="http" redirect-socket="https"></http-listener><host name="default-host" alias="localhost"><location name="/" handler="welcome-content"></location><filter-ref name="server-header"></filter-ref><filter-ref name="x-powered-by-header"></filter-ref></host></server><servlet-container name="default"><jsp-config></jsp-config><websockets></websockets></servlet-container><handlers><file name="welcome-content" path="${jboss.home.dir}/welcome-content"></file></handlers><filters><response-header name="server-header" header-name="Server" header-value="WildFly/10"></response-header><response-header name="x-powered-by-header" header-name="X-Powered-By" header-value="Undertow/1"></response-header></filters></subsystem><subsystem xmlns="urn:jboss:domain:webservices:2.0"><wsdl-host>${jboss.bind.address:127.0.0.1}</wsdl-host><endpoint-config name="Standard-Endpoint-Config"></endpoint-config><endpoint-config name="Recording-Endpoint-Config"><pre-handler-chain name="recording-handlers" protocol-bindings="##SOAP11_HTTP ##SOAP11_HTTP_MTOM ##SOAP12_HTTP ##SOAP12_HTTP_MTOM"><handler name="RecordingHandler" class="org.jboss.ws.common.invocation.RecordingServerHandler"></handler></pre-handler-chain></endpoint-config><client-config name="Standard-Client-Config"></client-config></subsystem><subsystem xmlns="urn:jboss:domain:weld:3.0"></subsystem></profile><interfaces><interface name="management"><inet-address value="${jboss.bind.address.management:127.0.0.1}"></inet-address></interface><interface name="public"><inet-address value="${jboss.bind.address:127.0.0.1}"></inet-address></interface></interfaces><socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}"><socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"></socket-binding><socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"></socket-binding><socket-binding name="ajp" port="${jboss.ajp.port:8009}"></socket-binding><socket-binding name="http" port="${jboss.http.port:8080}"></socket-binding><socket-binding name="https" port="${jboss.https.port:8443}"></socket-binding><socket-binding name="txn-recovery-environment" port="4712"></socket-binding><socket-binding name="txn-status-manager" port="4713"></socket-binding><outbound-socket-binding name="mail-smtp"><remote-destination host="localhost" port="25"></remote-destination></outbound-socket-binding></socket-binding-group></server>'
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/beans.xml
        message: ""
        variables:
          data: ""
          innerText: |2+





          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- This file can be an empty text file (0 bytes) --><!-- We're declaring the schema to save you time if you do have to configure \n   this in the future --><beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n        https://jakarta.ee/xml/ns/jakartaee\n        https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\"></beans>"
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/jboss-deployment-structure.xml
        message: ""
        variables:
          data: ""
          innerText: "\n    \n        \n        \n        \n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <?xml?><jboss-deployment-structure><deployment><exclusions></exclusions><!-- This allows you to define additional dependencies, it is the same
              as using the Dependencies: manifest attribute --><dependencies><module name="org.jboss.as.naming"></module><module name="org.jboss.as.server"></module><module name="org.jboss.msc"></module></dependencies></deployment></jboss-deployment-structure>
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/ticket-monster-ds.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <!-- This is an unmanaged datasource. It should be used for proofs of concept \n 13      or testing only. It uses H2, an in memory database that ships with JBoss \n 14      AS. -->\n 15  <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n 16      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 17      xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n 18      <!-- The datasource is bound into JNDI at this location. We reference \n 19          this in META-INF/persistence.xml -->\n 20      <datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\"\n 21          pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\">\n 22          <connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n 23          <driver>h2</driver>\n 24          <security>\n 25              <user-name>sa</user-name>\n 26              <password>sa</password>\n 27          </security>\n 28      </datasource>\n 29  </datasources>\n 30   \n"
        lineNumber: 22
        variables:
          data: ""
          innerText: "\n\n\n\n    \n    \n        jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n        h2\n        \n            sa\n            sa\n        \n    \n\n \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n    and/or its affiliates, and individual contributors by the @authors tag. See \n    the copyright.txt in the distribution for a full listing of individual contributors. \n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n    use this file except in compliance with the License. You may obtain a copy \n    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n    by applicable law or agreed to in writing, software distributed under the \n    License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n    OF ANY KIND, either express or implied. See the License for the specific \n    language governing permissions and limitations under the License. --><!-- This is an unmanaged datasource. It should be used for proofs of concept \n    or testing only. It uses H2, an in memory database that ships with JBoss \n    AS. --><datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"><!-- The datasource is bound into JNDI at this location. We reference \n        this in META-INF/persistence.xml --><datasource jndi-name=\"java:jboss/datasources/ticket-monsterDS\" pool-name=\"ticket-monster\" enabled=\"true\" use-java-context=\"true\"><connection-url>jdbc:h2:mem:ticket-monster;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url><driver>h2</driver><security><user-name>sa</user-name><password>sa</password></security></datasource></datasources>"
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <!-- TODO: use 6.0? -->
            3  <web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0"
            4           xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd">
            5    <display-name>ticket-monster</display-name>
            6    <session-config>
            7      <session-timeout>30</session-timeout>
            8    </session-config>
            9    <mime-mapping>
           10      <extension>ico</extension>
           11      <mime-type>image/x-icon</mime-type>
           12    </mime-mapping>
           13    <welcome-file-list>
           14      <welcome-file>/index.html</welcome-file>
           15    </welcome-file-list>
           16  </web-app>
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n\n"
          matchingXML: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!-- TODO: use 6.0? --><web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"><display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list></web-app>'
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/config.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\"\n  3  \tid=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\">\n  4  \t<name>TicketMonster-Cordova</name>\n  5  \n  6  \t<description>\n  7  \t\tThe hybrid mobile app for TicketMonster.\n  8  \t</description>\n  9  \n 10  \t<author href=\"http://www.jboss.org/jdf/examples/get-started/\"\n 11  \t\temail=\"jdf-users@lists.jboss.org\">\n 12  \t\tJBoss by Red Hat\n 13  \t</author>\n 14  \n 15  \t<!-- The application start page -->\n 16  \t<content src=\"mobileapp.html\" />\n 17  \n 18  \t<!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n 19  \t\tassumed blocked unless set otherwise. -->\n 20  \t<access origin=\"http://ticketmonster-jdf.rhcloud.com\" />\n 21  \t<preference name=\"fullscreen\" value=\"true\" />\n 22  \t<preference name=\"webviewbounce\" value=\"true\" />\n 23  \n 24  \t<feature name=\"App\">\n 25  \t\t<param name=\"android-package\" value=\"org.apache.cordova.App\" />\n 26  \t</feature>\n 27  \t<feature name=\"StatusBar\">\n 28  \t\t<param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\" />\n 29  \t\t<param name=\"ios-package\" value=\"CDVStatusBar\" />\n 30  \t\t<param name=\"id\" value=\"org.apache.cordova.statusbar\" />\n 31  \t</feature>\n 32  \t<feature name=\"Device\">\n 33  \t\t<param name=\"android-package\" value=\"org.apache.cordova.device.Device\" />\n 34  \t\t<param name=\"ios-package\" value=\"CDVDevice\" />\n 35  \t\t<param name=\"id\" value=\"org.apache.cordova.device\" />\n 36  \t</feature>\n 37  \t<feature name=\"Notification\">\n 38  \t\t<param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\" />\n 39  \t\t<param name=\"ios-package\" value=\"CDVNotification\" />\n 40  \t\t<param name=\"id\" value=\"org.apache.cordova.dialogs\" />\n 41  \t</feature>\n 42  \n 43  </widget>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\tTicketMonster-Cordova\n\n\t\n\t\tThe hybrid mobile app for TicketMonster.\n\t\n\n\t\n\t\tJBoss by Red Hat\n\t\n\n\t\n\t\n\n\t\n\t\n\t\n\t\n\n\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\" id=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\"><name>TicketMonster-Cordova</name><description>The hybrid mobile app for TicketMonster.</description><author href=\"http://www.jboss.org/jdf/examples/get-started/\" email=\"jdf-users@lists.jboss.org\">JBoss by Red Hat</author><!-- The application start page --><content src=\"mobileapp.html\"></content><!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n\t\tassumed blocked unless set otherwise. --><access origin=\"http://ticketmonster-jdf.rhcloud.com\"></access><preference name=\"fullscreen\" value=\"true\"></preference><preference name=\"webviewbounce\" value=\"true\"></preference><feature name=\"App\"><param name=\"android-package\" value=\"org.apache.cordova.App\"></param></feature><feature name=\"StatusBar\"><param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\"></param><param name=\"ios-package\" value=\"CDVStatusBar\"></param><param name=\"id\" value=\"org.apache.cordova.statusbar\"></param></feature><feature name=\"Device\"><param name=\"android-package\" value=\"org.apache.cordova.device.Device\"></param><param name=\"ios-package\" value=\"CDVDevice\"></param><param name=\"id\" value=\"org.apache.cordova.device\"></param></feature><feature name=\"Notification\"><param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\"></param><param name=\"ios-package\" value=\"CDVNotification\"></param><param name=\"id\" value=\"org.apache.cordova.dialogs\"></param></feature></widget>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: ""
          innerText: "\n\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles></project>
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: ""
          innerText: "\n\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n\n"
          matchingXML: |-
            <?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"><modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build></project>
      - uri: file:///opt/input/source/tm-ui-v1/public-html/config.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\"\n  3  \tid=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\">\n  4  \t<name>TicketMonster-Cordova</name>\n  5  \n  6  \t<description>\n  7  \t\tThe hybrid mobile app for TicketMonster.\n  8  \t</description>\n  9  \n 10  \t<author href=\"http://www.jboss.org/jdf/examples/get-started/\"\n 11  \t\temail=\"jdf-users@lists.jboss.org\">\n 12  \t\tJBoss by Red Hat\n 13  \t</author>\n 14  \n 15  \t<!-- The application start page -->\n 16  \t<content src=\"mobileapp.html\" />\n 17  \n 18  \t<!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n 19  \t\tassumed blocked unless set otherwise. -->\n 20  \t<access origin=\"http://ticketmonster-jdf.rhcloud.com\" />\n 21  \t<preference name=\"fullscreen\" value=\"true\" />\n 22  \t<preference name=\"webviewbounce\" value=\"true\" />\n 23  \n 24  \t<feature name=\"App\">\n 25  \t\t<param name=\"android-package\" value=\"org.apache.cordova.App\" />\n 26  \t</feature>\n 27  \t<feature name=\"StatusBar\">\n 28  \t\t<param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\" />\n 29  \t\t<param name=\"ios-package\" value=\"CDVStatusBar\" />\n 30  \t\t<param name=\"id\" value=\"org.apache.cordova.statusbar\" />\n 31  \t</feature>\n 32  \t<feature name=\"Device\">\n 33  \t\t<param name=\"android-package\" value=\"org.apache.cordova.device.Device\" />\n 34  \t\t<param name=\"ios-package\" value=\"CDVDevice\" />\n 35  \t\t<param name=\"id\" value=\"org.apache.cordova.device\" />\n 36  \t</feature>\n 37  \t<feature name=\"Notification\">\n 38  \t\t<param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\" />\n 39  \t\t<param name=\"ios-package\" value=\"CDVNotification\" />\n 40  \t\t<param name=\"id\" value=\"org.apache.cordova.dialogs\" />\n 41  \t</feature>\n 42  \n 43  </widget>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\tTicketMonster-Cordova\n\n\t\n\t\tThe hybrid mobile app for TicketMonster.\n\t\n\n\t\n\t\tJBoss by Red Hat\n\t\n\n\t\n\t\n\n\t\n\t\n\t\n\t\n\n\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\" id=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\"><name>TicketMonster-Cordova</name><description>The hybrid mobile app for TicketMonster.</description><author href=\"http://www.jboss.org/jdf/examples/get-started/\" email=\"jdf-users@lists.jboss.org\">JBoss by Red Hat</author><!-- The application start page --><content src=\"mobileapp.html\"></content><!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n\t\tassumed blocked unless set otherwise. --><access origin=\"http://ticketmonster-jdf.rhcloud.com\"></access><preference name=\"fullscreen\" value=\"true\"></preference><preference name=\"webviewbounce\" value=\"true\"></preference><feature name=\"App\"><param name=\"android-package\" value=\"org.apache.cordova.App\"></param></feature><feature name=\"StatusBar\"><param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\"></param><param name=\"ios-package\" value=\"CDVStatusBar\"></param><param name=\"id\" value=\"org.apache.cordova.statusbar\"></param></feature><feature name=\"Device\"><param name=\"android-package\" value=\"org.apache.cordova.device.Device\"></param><param name=\"ios-package\" value=\"CDVDevice\"></param><param name=\"id\" value=\"org.apache.cordova.device\"></param></feature><feature name=\"Notification\"><param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\"></param><param name=\"ios-package\" value=\"CDVNotification\"></param><param name=\"id\" value=\"org.apache.cordova.dialogs\"></param></feature></widget>"
      - uri: file:///opt/input/source/tm-ui-v2/public-html/config.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\"\n  3  \tid=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\">\n  4  \t<name>TicketMonster-Cordova</name>\n  5  \n  6  \t<description>\n  7  \t\tThe hybrid mobile app for TicketMonster.\n  8  \t</description>\n  9  \n 10  \t<author href=\"http://www.jboss.org/jdf/examples/get-started/\"\n 11  \t\temail=\"jdf-users@lists.jboss.org\">\n 12  \t\tJBoss by Red Hat\n 13  \t</author>\n 14  \n 15  \t<!-- The application start page -->\n 16  \t<content src=\"mobileapp.html\" />\n 17  \n 18  \t<!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n 19  \t\tassumed blocked unless set otherwise. -->\n 20  \t<access origin=\"http://ticketmonster-jdf.rhcloud.com\" />\n 21  \t<preference name=\"fullscreen\" value=\"true\" />\n 22  \t<preference name=\"webviewbounce\" value=\"true\" />\n 23  \n 24  \t<feature name=\"App\">\n 25  \t\t<param name=\"android-package\" value=\"org.apache.cordova.App\" />\n 26  \t</feature>\n 27  \t<feature name=\"StatusBar\">\n 28  \t\t<param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\" />\n 29  \t\t<param name=\"ios-package\" value=\"CDVStatusBar\" />\n 30  \t\t<param name=\"id\" value=\"org.apache.cordova.statusbar\" />\n 31  \t</feature>\n 32  \t<feature name=\"Device\">\n 33  \t\t<param name=\"android-package\" value=\"org.apache.cordova.device.Device\" />\n 34  \t\t<param name=\"ios-package\" value=\"CDVDevice\" />\n 35  \t\t<param name=\"id\" value=\"org.apache.cordova.device\" />\n 36  \t</feature>\n 37  \t<feature name=\"Notification\">\n 38  \t\t<param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\" />\n 39  \t\t<param name=\"ios-package\" value=\"CDVNotification\" />\n 40  \t\t<param name=\"id\" value=\"org.apache.cordova.dialogs\" />\n 41  \t</feature>\n 42  \n 43  </widget>\n"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n\tTicketMonster-Cordova\n\n\t\n\t\tThe hybrid mobile app for TicketMonster.\n\t\n\n\t\n\t\tJBoss by Red Hat\n\t\n\n\t\n\t\n\n\t\n\t\n\t\n\t\n\n\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\n\t\n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><widget xmlns=\"http://www.w3.org/ns/widgets\" xmlns:gap=\"http://phonegap.com/ns/1.0\" id=\"org.jboss.examples.ticketmonster.cordova\" version=\"1.0.0\"><name>TicketMonster-Cordova</name><description>The hybrid mobile app for TicketMonster.</description><author href=\"http://www.jboss.org/jdf/examples/get-started/\" email=\"jdf-users@lists.jboss.org\">JBoss by Red Hat</author><!-- The application start page --><content src=\"mobileapp.html\"></content><!-- Add the TicketMonster cloud app to the domain whitelist. Domains are \n\t\tassumed blocked unless set otherwise. --><access origin=\"http://ticketmonster-jdf.rhcloud.com\"></access><preference name=\"fullscreen\" value=\"true\"></preference><preference name=\"webviewbounce\" value=\"true\"></preference><feature name=\"App\"><param name=\"android-package\" value=\"org.apache.cordova.App\"></param></feature><feature name=\"StatusBar\"><param name=\"android-package\" value=\"org.apache.cordova.statusbar.StatusBar\"></param><param name=\"ios-package\" value=\"CDVStatusBar\"></param><param name=\"id\" value=\"org.apache.cordova.statusbar\"></param></feature><feature name=\"Device\"><param name=\"android-package\" value=\"org.apache.cordova.device.Device\"></param><param name=\"ios-package\" value=\"CDVDevice\"></param><param name=\"id\" value=\"org.apache.cordova.device\"></param></feature><feature name=\"Notification\"><param name=\"android-package\" value=\"org.apache.cordova.dialogs.Notification\"></param><param name=\"ios-package\" value=\"CDVNotification\"></param><param name=\"id\" value=\"org.apache.cordova.dialogs\"></param></feature></widget>"
    windup-discover-jpa-configuration:
      description: JPA XML Configuration
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=JPA XML
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/MySQLDS\n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <persistence-unit name="primary"><!-- If you are running in a production environment, add a managed
            data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you
            can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name="hibernate.hbm2ddl.auto" value="none"></property><property name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/PostgreSQLDS\n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <persistence-unit name="primary"><!-- If you are running in a production environment, add a managed
            data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you
            can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name="hibernate.hbm2ddl.auto" value="create-drop"></property><property name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/MySQLDS\n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <persistence-unit name="primary"><!-- If you are running in a production environment, add a managed
            data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you
            can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name="hibernate.hbm2ddl.auto" value="none"></property><property name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/PostgreSQLDS\n        \n            \n            \n            \n        \n    \n"
          matchingXML: |-
            <persistence-unit name="primary"><!-- If you are running in a production environment, add a managed
            data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you
            can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source><properties><!-- Properties for Hibernate --><property name="hibernate.hbm2ddl.auto" value="create-drop"></property><property name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 23
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TicketMonsterTestDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different datasource for tests, so as to not overwrite \n         production data. This is an unmanaged data source, backed by H2, an in memory \n         database. Production applications should use a managed datasource. --><!-- The datasource is deployed as WEB-INF/test-ds.xml, \n         you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
    windup-discover-spring-configuration:
      description: Spring XML Configuration
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Spring XML
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/beans.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          https://jakarta.ee/xml/ns/jakartaee\n  8          https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/beans.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          https://jakarta.ee/xml/ns/jakartaee\n  8          https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
    windup-discover-web-configuration:
      description: Web XML Configuration
      labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Web XML
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          data: web-app
          innerText: "\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n"
          matchingXML: <display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list>
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          data: web-app
          innerText: "\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n"
          matchingXML: <display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list>
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <!-- TODO: use 6.0? -->
            3  <web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0"
            4           xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd">
            5    <display-name>ticket-monster</display-name>
            6    <session-config>
            7      <session-timeout>30</session-timeout>
            8    </session-config>
            9    <mime-mapping>
           10      <extension>ico</extension>
           11      <mime-type>image/x-icon</mime-type>
           12    </mime-mapping>
           13    <welcome-file-list>
           14      <welcome-file>/index.html</welcome-file>
           15    </welcome-file-list>
           16  </web-app>
        lineNumber: 4
        variables:
          data: web-app
          innerText: "\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n"
          matchingXML: <display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list>
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/web.xml
        message: ""
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <!-- TODO: use 6.0? -->
            3  <web-app xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.0"
            4           xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd">
            5    <display-name>ticket-monster</display-name>
            6    <session-config>
            7      <session-timeout>30</session-timeout>
            8    </session-config>
            9    <mime-mapping>
           10      <extension>ico</extension>
           11      <mime-type>image/x-icon</mime-type>
           12    </mime-mapping>
           13    <welcome-file-list>
           14      <welcome-file>/index.html</welcome-file>
           15    </welcome-file-list>
           16  </web-app>
        lineNumber: 4
        variables:
          data: web-app
          innerText: "\n  ticket-monster\n  \n    30\n  \n  \n    ico\n    image/x-icon\n  \n  \n    /index.html\n  \n"
          matchingXML: <display-name>ticket-monster</display-name><session-config><session-timeout>30</session-timeout></session-config><mime-mapping><extension>ico</extension><mime-type>image/x-icon</mime-type></mime-mapping><welcome-file-list><welcome-file>/index.html</welcome-file></welcome-file-list>
  unmatched:
  - discover-license
  - discover-manifest-file
  - hardcoded-ip-address
- name: droolsjbpm
  description: This ruleset provides help for migrating to a unified KIE (Knowledge Is Everything) API in the upgrade from version 5 to 6.
  skipped:
  - kie-api-01000
  - kie-api-01001
  - kie-api-01002
  - kie-api-01003
  - kie-api-01004
  - kie-api-01005
  - kie-api-01006
  - kie-api-01007
  - kie-api-01008
  - kie-api-01009
  - kie-api-01010
  - kie-api-01011
  - kie-api-01012
  - kie-api-01013
  - kie-api-01014
  - kie-api-01015
  - kie-api-01016
- name: eap6/java-ee/seam
  description: This ruleset provides generic migration knowledge from the Seam 2 UI controls to pure JSF 2 UI Controls
  skipped:
  - commonj-01000
  - commonj-02000
  - commonj-03000
  - commonj-04000
  - commonj-05000
  - commonj-06000
  - commonj-07000
  - eap4-eap6-25000
  - eap4-eap6-26000
  - eap4-eap6-27000
  - eap4-eap6-28000
  - eap4-eap6-29000
  - eap4-eap6-30000
  - eap4-eap6-31000
  - eap4-eap6-32000
  - eap4-eap6-33000
  - eap4-eap6-34000
  - eap4-eap6-35000
  - eap4-eap6-36000
  - eap4-eap6-37000
  - eap4-eap6-38000
  - eap4-eap6-39000
  - eap4-eap6-40000
  - eap4-eap6-41000
  - eap4-eap6-42000
  - environment-dependent-calls-01000
  - environment-dependent-calls-02000
  - environment-dependent-calls-03000
  - environment-dependent-calls-03500
  - environment-dependent-calls-04000
  - environment-dependent-calls-04001
  - environment-dependent-calls-05000
  - generic-catchall-00000
  - generic-catchall-00001
  - generic-catchall-00002
  - generic-catchall-00003
  - generic-catchall-00100
  - generic-catchall-00200
  - generic-catchall-00300
  - generic-catchall-00400
  - generic-catchall-00500
  - generic-catchall-00600
  - generic-catchall-00700
  - generic-catchall-00900
  - java-ee-jaxrpc-00000
  - jboss-eap5-7-xml-10000
  - jboss-eap5-java-01000
  - jboss-eap5-java-02000
  - jboss-eap5-java-04000
  - jboss-eap5-java-05000
  - jboss-eap5-java-06000
  - jboss-eap5-java-07000
  - jboss-eap5-java-08000
  - jboss-eap5-java-08100
  - jboss-eap5-java-08200
  - jboss-eap5-java-08300
  - jboss-eap5-java-08400
  - jboss-eap5-java-08500
  - jboss-eap5-java-08600
  - jboss-eap5-java-08700
  - jboss-eap5-java-08800
  - jboss-eap5-java-08900
  - jboss-eap5-java-09000
  - jboss-eap5-java-09100
  - jboss-eap5-xml-01000
  - jboss-eap5-xml-02000
  - jboss-eap5-xml-03000
  - jboss-eap5-xml-05000
  - jboss-eap5-xml-06000
  - jboss-eap5-xml-07000
  - jboss-eap5-xml-08000
  - jboss-eap5-xml-09000
  - jboss-eap5-xml-11000
  - jboss-eap5-xml-12000
  - jboss-eap5-xml-13000
  - jboss-eap5-xml-14000
  - jboss-eap5-xml-16000
  - jboss-eap5-xml-17000
  - jboss-eap5-xml-18000
  - jboss-eap5-xml-20000
  - jotm-00001
  - jrun-catchall-00000
  - jrun-catchall-00001
  - jsp-01000
  - log4j-01000
  - log4j-02000
  - log4j-03000
  - resteasy-eap5-000001
  - seam-java-00000
  - seam-java-00010
  - seam-java-00030
  - seam-java-00040
  - seam-java-00050
  - seam-java-00060
  - seam-java-00061
  - seam-java-00070
  - seam-java-00071
  - seam-java-00080
  - seam-java-00090
  - seam-java-00091
  - seam-java-00100
  - seam-java-00110
  - seam-java-00120
  - seam-java-00130
  - seam-java-00140
  - seam-java-00150
  - seam-java-00160
  - seam-java-00170
  - seam-java-00180
  - seam-java-00190
  - seam-java-00200
  - seam-java-00210
  - seam-java-00220
  - seam-java-00230
  - seam-java-00240
  - seam-java-00250
  - seam-java-00260
  - seam-java-00270
  - seam-ui-jsf-00001
  - seam-ui-jsf-00001-01
  - seam-ui-jsf-00002
  - seam-ui-jsf-01000
  - seam-ui-jsf-01001
  - seam-ui-jsf-01002
  - seam-ui-jsf-01003
  - seam-ui-jsf-01004
  - seam-ui-jsf-01005
  - seam-ui-jsf-01006
  - seam-ui-jsf-01007
  - seam-ui-jsf-01008
  - seam-ui-jsf-01009
  - seam-ui-jsf-01010
  - seam-ui-jsf-01011
  - seam-ui-jsf-01012
  - seam-ui-jsf-01013
  - seam-ui-jsf-01014
  - seam-ui-jsf-01015
  - seam-ui-jsf-01016
  - seam-ui-jsf-01017
  - seam-ui-jsf-01018
  - seam-ui-jsf-01019
  - seam-ui-jsf-01020
  - seam-ui-jsf-01021
  - seam-ui-jsf-01022
  - seam-ui-jsf-01023
  - seam-ui-jsf-01024
  - seam-ui-jsf-01025
  - seam-ui-jsf-01026
  - seam-ui-jsf-01027
  - seam-ui-jsf-01028
  - seam-ui-jsf-01029
  - xml-glassfish-01000
  - xml-glassfish-02000
  - xml-glassfish-03000
  - xml-jonas-01000
  - xml-jrun-01000
  - xml-jrun-02000
  - xml-orion-01000
  - xml-orion-02000
  - xml-orion-03000
  - xml-resin-01000
  - xml-webservices-01000
  - xml-webservices-02000
  - xml-webservices-03000
  - xml-webservices-04000
  - xml-webservices-05000
  - xml-webservices-06000
  - xml-webservices-06001
  - xml-webservices-07000
  - xml-webservices-08000
  - xml-webservices-09000
  - xml-webservices-10000
- name: eap7/weblogic/tests/data
  violations:
    maven-javax-to-jakarta-00002:
      description: Move to Jakarta EE Maven Artifacts - replace groupId javax.activation
      category: potential
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with groupId `com.sun.activation`
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: javax.activation.activation
          version: 1.1.1.redhat-5
      links:
      - url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
        title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for Jakarta EE'
      effort: 1
    maven-javax-to-jakarta-00004:
      description: The groupId 'javax' has been replaced by 'jakarta' in JBoss EAP 7.3, or later
      category: potential
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>"
        lineNumber: 130
        variables:
          matchingText: groupId>javax.enterprise<
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>"
        lineNumber: 136
        variables:
          matchingText: groupId>javax.inject<
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n238              <type>pom</type>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n243              fine tuning the content of the JSON responses -->"
        lineNumber: 142
        variables:
          matchingText: groupId>javax.validation<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->"
        lineNumber: 141
        variables:
          matchingText: groupId>javax.enterprise<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>"
        lineNumber: 147
        variables:
          matchingText: groupId>javax.inject<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency - groupId `jakarta.`.
        codeSnip: " 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>\n249  \n250          <!-- Optional, but highly recommended -->\n251          <!-- Arquillian allows you to test enterprise code such as EJBs and \n252              Transactional(JTA) JPA from JUnit/TestNG -->\n253          <dependency>\n254              <groupId>org.jboss.arquillian.junit</groupId>"
        lineNumber: 153
        variables:
          matchingText: groupId>javax.validation<
      links:
      - url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
        title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for Jakarta EE'
      effort: 1
    maven-javax-to-jakarta-00006:
      description: Move to Jakarta EE Maven Artifacts - replace artifactId cdi-api
      category: potential
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        codeSnip: " 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>"
        lineNumber: 131
        variables:
          matchingText: artifactId>cdi-api<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        codeSnip: " 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>"
        lineNumber: 142
        variables:
          matchingText: artifactId>cdi-api<
      links:
      - url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
        title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for Jakarta EE'
      effort: 1
    maven-javax-to-jakarta-00007:
      description: Move to Jakarta EE Maven Artifacts - replace artifactId validation-api
      category: potential
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        codeSnip: " 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n238              <type>pom</type>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n243              fine tuning the content of the JSON responses -->\n244          <dependency>"
        lineNumber: 143
        variables:
          matchingText: artifactId>validation-api<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        codeSnip: " 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>\n249  \n250          <!-- Optional, but highly recommended -->\n251          <!-- Arquillian allows you to test enterprise code such as EJBs and \n252              Transactional(JTA) JPA from JUnit/TestNG -->\n253          <dependency>\n254              <groupId>org.jboss.arquillian.junit</groupId>\n255              <artifactId>arquillian-junit-container</artifactId>"
        lineNumber: 154
        variables:
          matchingText: artifactId>validation-api<
      links:
      - url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
        title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for Jakarta EE'
      effort: 1
    maven-javax-to-jakarta-00008:
      description: Move to Jakarta EE Maven Artifacts - replace artifactId javax.inject
      category: potential
      labels:
      - JakartaEE
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap7
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee8
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        codeSnip: " 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n238              <type>pom</type>"
        lineNumber: 137
        variables:
          matchingText: artifactId>javax.inject<
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: If you migrate your application to JBoss EAP 7.3, or later, and want to ensure its Maven building, running or testing works as expected, use instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        codeSnip: " 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>\n249  "
        lineNumber: 148
        variables:
          matchingText: artifactId>javax.inject<
      links:
      - url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/migration_guide/index#maven-artifact-changes-for-jakarta-ee_default
        title: 'Red Hat JBoss EAP 7.3 Migration Guide: Maven Artifact Changes for Jakarta EE'
      effort: 1
  unmatched:
  - maven-javax-to-jakarta-00001
  - maven-javax-to-jakarta-00003
  - maven-javax-to-jakarta-00005
  - maven-javax-to-jakarta-00010
  - maven-javax-to-jakarta-00011
  - maven-javax-to-jakarta-00012
  - maven-javax-to-jakarta-00013
  - maven-javax-to-jakarta-00014
  - maven-javax-to-jakarta-00015
  - maven-javax-to-jakarta-00016
  - maven-javax-to-jakarta-00017
  skipped:
  - base64-01000
  - deprecated-singletonpolicy-00001
  - eap6-08000
  - eap6-08001
  - eap6-08002
  - eap6-11000
  - eap6-12000
  - eap6-xml-05000
  - eap6-xml-06000
  - eap7-websphere-xml-01000
  - eap7-websphere-xml-02000
  - eap7-websphere-xml-03500
  - eap7-websphere-xml-06000
  - eap7-websphere-xml-07000
  - eap7-websphere-xml-08000
  - eap7-websphere-xml-09000
  - elytron-eap71-00000
  - elytron-eap71-00010
  - embedded-framework-libraries-01000
  - embedded-framework-libraries-02000
  - embedded-framework-libraries-04000
  - embedded-framework-libraries-05000
  - embedded-framework-libraries-06000
  - hibernate4-00001
  - hibernate4-00002
  - hibernate4-00003
  - hibernate4-00004
  - hibernate4-00005
  - hibernate4-00006
  - hibernate4-00007
  - hibernate4-00008
  - hibernate4-00009
  - hibernate4-00010
  - hibernate4-00011
  - hibernate4-00012
  - hibernate4-00013
  - hibernate4-00014
  - hibernate4-00015
  - hibernate4-00016
  - hibernate4-00017
  - hibernate4-00018
  - hibernate4-00021
  - hibernate4-00022
  - hibernate4-00023
  - hibernate4-00024
  - hibernate4-00025
  - hibernate4-00026
  - hibernate4-00027
  - hibernate4-00028
  - hibernate4-00030
  - hibernate4-00031
  - hibernate4-00032
  - hibernate4-00033
  - hibernate4-00034
  - hibernate4-00035
  - hibernate4-00036
  - hibernate4-00037
  - hibernate4-00038
  - hibernate4-00039
  - hibernate4-00040
  - hibernate4-xml-00001
  - hibernate4-xml-00002
  - hibernate4-xml-00003
  - hibernate4-xml-00004
  - hibernate4-xml-00005
  - hibernate50-51-00000
  - hibernate50-51-00100
  - hibernate51-53-00001
  - hibernate51-53-00100
  - hibernate51-53-00300
  - hibernate51-53-00400
  - hibernate51-53-00401
  - hibernate51-53-00402
  - hibernate51-53-00403
  - hibernate51-53-00404
  - hibernate51-53-00405
  - hibernate51-53-00406
  - hibernate51-53-00407
  - hibernate51-53-00500
  - hibernate51-53-00600
  - hibernate51-53-00700
  - hibernate51-53-00701
  - hibernate51-53-00702
  - hibernate51-53-00800
  - hibernate51-53-01000
  - hibernate51-53-01001
  - hibernate51-53-01100
  - hibernate51-53-01200
  - hsearch-00000
  - hsearch-00001
  - hsearch-00002
  - hsearch-00003
  - hsearch-00004
  - hsearch-00005
  - hsearch-00006
  - hsearch-00007
  - hsearch-00008
  - hsearch-00009
  - hsearch-00010
  - hsearch-00011
  - hsearch-00100
  - hsearch-00101
  - hsearch-00103
  - hsearch-00104
  - hsearch-00106
  - hsearch-00107
  - hsearch-00108
  - hsearch-00109
  - hsearch-00110
  - hsearch-00111
  - hsearch-00112
  - hsearch-00113
  - hsearch-00114
  - hsearch-00115
  - hsearch-00116
  - hsearch-00117
  - hsearch-00118
  - hsearch-00119
  - hsearch-00200
  - hsearch-00201
  - hsearch-00210
  - hsearch-00211
  - hsearch-00213
  - hsearch-00214
  - hsearch-00215
  - hsearch-00216
  - hsearch-00217
  - hsearch-00218
  - hsearch-00219
  - hsearch-00220
  - hsearch-00221
  - hsearch-00222
  - hsearch-00224
  - hsearch-00225
  - hsearch-00226
  - hsearch-00227
  - hsearch-00228
  - hsearch-00229
  - hsearch-00230
  - hsearch-00231
  - hsearch-00232
  - hsearch-00233
  - hsearch-00234
  - hsearch-00235
  - hsearch-00236
  - hsearch-00237
  - hsearch-00238
  - hsearch-00239
  - hsearch-00240
  - jax-ws-00000
  - jaxrpc-00000
  - jboss-eap4and5to6and7-java-01000
  - jboss-eap4and5to6and7-java-02000
  - jboss-eap4and5to6and7-java-03000
  - jboss-eap4and5to6and7-xml-01000
  - jboss-eap4and5to6and7-xml-02000
  - jboss-eap4and5to6and7-xml-03000
  - jboss-eap4and5to6and7-xml-04000
  - jboss-eap4and5to6and7-xml-05000
  - jboss-eap4and5to6and7-xml-06000
  - jboss-eap4and5to6and7-xml-07000
  - jboss-eap5-7-java-02000
  - jboss-eap5-7-java-03000
  - jboss-eap5-7-java-05000
  - jboss-eap5-7-java-06000
  - jboss-eap5-7-java-07000
  - jboss-eap5-7-java-08000
  - jboss-eap5-7-java-08100
  - jboss-eap5-7-java-08200
  - jboss-eap5-7-java-08300
  - jboss-eap5-7-java-08400
  - jboss-eap5-7-java-08500
  - jboss-eap5-7-java-08600
  - jboss-eap5-7-java-08700
  - jboss-eap5-7-java-08800
  - jboss-eap5-7-java-08900
  - jboss-eap5-7-java-09000
  - jboss-eap5-7-java-09100
  - jboss-eap5-7-xml-01000
  - jboss-eap5-7-xml-02000
  - jboss-eap5-7-xml-10000
  - jboss-eap5-7-xml-13000
  - jboss-eap5-7-xml-14000
  - jboss-eap5-7-xml-16000
  - jboss-eap5and6to7-java-01000
  - jboss-eap5and6to7-java-02000
  - jboss-eap5and6to7-java-03000
  - jboss-eap5and6to7-java-04000
  - jboss-eap5and6to7-java-05000
  - jboss-eap5and6to7-java-06000
  - jboss-eap5and6to7-java-07000
  - jboss-eap5and6to7-java-08000
  - jboss-eap5and6to7-java-09000
  - jboss-eap5and6to7-xml-05000
  - jboss-eap5and6to7-xml-06000
  - jboss-eap5and6to7-xml-07000
  - jboss-eap5and6to7-xml-09000
  - jboss-eap5and6to7-xml-12000
  - jboss-eap5and6to7-xml-17000
  - jboss-eap5and6to7-xml-18000
  - jboss-eap5and6to7-xml-31000
  - jboss-eap5and6to7-xml-31500
  - jboss-eap5and6to7-xml-32000
  - jboss-eap5and6to7-xml-33000
  - jboss-eap5and6to7-xml-34000
  - jboss-eap5and6to7-xml-37000
  - jboss-eap5and6to7-xml-38000
  - jboss-eap5and6to7-xml-38001
  - jboss-eap5and6to7-xml-38002
  - jboss-eap5and6to7-xml-38003
  - jboss-eap5and6to7-xml-38004
  - jboss-eap5and6to7-xml-38005
  - jboss-eap5and6to7-xml-38006
  - jboss-eap5and6to7-xml-38007
  - jboss-eap5and6to7-xml-39000
  - jboss-eap5and6to7-xml-40000
  - maven-artemis-jms-client-00001
  - maven-jboss-rmi-api_1.0_spec-00001
  - microprofile_removed_from_eap-00001
  - microprofile_removed_from_eap-00001-01
  - microprofile_removed_from_eap-00002
  - microprofile_removed_from_eap-00003
  - microprofile_removed_from_eap-00004
  - move-to-microprofile-rest-client-1.3-00001
  - picketlink25-00000
  - resteasy-eap5and6to7-000018
  - resteasy-eap6-000001
  - resteasy-eap6-000002
  - resteasy-eap6-000003
  - resteasy-eap6-000004
  - resteasy-eap6-000005
  - resteasy-eap6-000006
  - resteasy-eap6-000007
  - resteasy-eap6-000008
  - resteasy-eap6-000009
  - resteasy-eap6-000010
  - resteasy-eap6-000011
  - resteasy-eap6-000012
  - resteasy-eap6-000013
  - resteasy-eap6-000014
  - resteasy-eap6-000015
  - resteasy-eap6-000017
  - resteasy-eap6-000019
  - resteasy-eap6-000020
  - resteasy-eap6-000021
  - resteasy-eap6-000022
  - resteasy-eap6-000023
  - resteasy-eap6-000024
  - resteasy-eap6-000025
  - resteasy-eap6-000029
  - resteasy-eap6-000030
  - resteasy-eap6-000032
  - resteasy-eap6-000101
  - resteasy-eap6-000103
  - resteasy-eap6-000104
  - resteasy-eap6-000105
  - resteasy-eap6-000106
  - resteasy-eap6-000107
  - resteasy-eap6-000118
  - resteasy-eap6-000119
  - resteasy-eap6-000120
  - resteasy-eap6-000121
  - resteasy-eap6-000122
  - resteasy-eap6-000123
  - resteasy-eap6-000125
  - resteasy-eap6-000126
  - resteasy-eap6-000127
  - resteasy-eap6-000128
  - resteasy-eap6-000129
  - resteasy-eap6-000130
  - resteasy-eap6-000131
  - resteasy-eap6-000140
  - resteasy-eap6-000141
  - resteasy-eap6-000142
  - resteasy30-36-00001
  - singleton-sessionbean-00001
  - weblogic-catchall-01000
  - weblogic-catchall-02000
  - weblogic-catchall-03000
  - weblogic-catchall-06000
  - weblogic-catchall-06500
  - weblogic-eap7-01000
  - weblogic-eap7-016000
  - weblogic-eap7-017000
  - weblogic-eap7-02000
  - weblogic-eap7-03000
  - weblogic-eap7-04000
  - weblogic-eap7-05000
  - weblogic-eap7-06000
  - weblogic-eap7-07000
  - weblogic-eap7-08000
  - weblogic-eap7-09000
  - weblogic-eap7-10000
  - weblogic-eap7-11000
  - weblogic-eap7-12000
  - weblogic-eap7-13000
  - weblogic-eap7-15000
  - weblogic-ejb-01000
  - weblogic-ejb-02000
  - weblogic-ejb-03000
  - weblogic-ejb-04000
  - weblogic-jms-eap7-00000
  - weblogic-jms-eap7-01000
  - weblogic-jms-eap7-02000
  - weblogic-jms-eap7-03000
  - weblogic-jms-eap7-04000
  - weblogic-jms-eap7-05000
  - weblogic-jms-eap7-06000
  - weblogic-jms-eap7-07000
  - weblogic-jms-eap7-08000
  - weblogic-services-eap7-01000
  - weblogic-services-eap7-02000
  - weblogic-services-eap7-03000
  - weblogic-webapp-eap7-01000
  - weblogic-webapp-eap7-02000
  - weblogic-webapp-eap7-03000
  - weblogic-webapp-eap7-04000
  - weblogic-webapp-eap7-05000
  - weblogic-webapp-eap7-06000
  - weblogic-webapp-eap7-07000
  - weblogic-webapp-eap7-08000
  - weblogic-webapp-eap7-09000
  - weblogic-webservices-07000
  - weblogic-webservices-eap7-01000
  - weblogic-webservices-eap7-02000
  - weblogic-webservices-eap7-03000
  - weblogic-webservices-eap7-04000
  - weblogic-webservices-eap7-05000
  - weblogic-webservices-eap7-06000
  - weblogic-xml-descriptor-19000
  - weblogic-xml-descriptor-eap7-01000
  - weblogic-xml-descriptor-eap7-02000
  - weblogic-xml-descriptor-eap7-03000
  - weblogic-xml-descriptor-eap7-04000
  - weblogic-xml-descriptor-eap7-06001
  - weblogic-xml-descriptor-eap7-07000
  - weblogic-xml-descriptor-eap7-08000
  - weblogic-xml-descriptor-eap7-09000
  - weblogic-xml-descriptor-eap7-10000
  - weblogic-xml-descriptor-eap7-11000
  - weblogic-xml-descriptor-eap7-12000
  - weblogic-xml-descriptor-eap7-13000
  - weblogic-xml-descriptor-eap7-14000
  - weblogic-xml-descriptor-eap7-15000
  - weblogic-xml-descriptor-eap7-16000
  - weblogic-xml-descriptor-eap7-17000
  - weblogic-xml-descriptor-eap7-18000
  - websphere-catchall-00000
  - websphere-catchall-00001
  - websphere-catchall-db2-00000
  - websphere-jms-eap7-00000
  - websphere-jms-eap7-01000
  - websphere-jms-eap7-02000
  - websphere-jms-eap7-02500
  - websphere-jms-eap7-03000
  - websphere-jms-eap7-04000
  - websphere-mq-eap7-00000
  - websphere-mq-eap7-01000
  - websphere-mq-eap7-02000
  - websphere-mqe-eap7-00000
  - websphere-mqe-eap7-01000
  - websphere-mqe-eap7-02000
  - websphere-mqe-eap7-03000
  - websphere-mqe-eap7-04000
  - websphere-other-eap7-01000
  - websphere-other-eap7-02000
  - ws-security-00000
  - ws-security-00001
  - ws-security-00002
- name: eap8/eap7
  description: This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.
  violations:
    hibernate-00005:
      description: Implicit name determination for sequences and tables associated with identifier generation has changed
      category: potential
      labels:
      - hibernate
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8+
      - konveyor.io/target=hibernate
      - konveyor.io/target=hibernate6+
      - konveyor.io/target=quarkus
      - konveyor.io/target=quarkus3+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "36  @SuppressWarnings(\"serial\")\n37  @Entity\n38  public class Booking implements Serializable {\n39  \n40      /* Declaration of fields */\n41  \n42      /**\n43       * The synthetic ID of the object.\n44       */\n45      @Id\n46      @GeneratedValue(strategy = IDENTITY)\n47      private Long id;\n48  \n49      /**\n50       * <p>\n51       * The set of tickets contained within the booking. The <code>@OneToMany<code> JPA mapping establishes this relationship.\n52       * </p>\n53       * \n54       * <p>\n55       * The set of tickets is eagerly loaded because FIXME . All operations are cascaded to each ticket, so for example if a\n56       * booking is removed, then all associated tickets will be removed."
        lineNumber: 46
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  public class Event implements Serializable {\n37  \n38      /* Declaration of fields */\n39  \n40      /**\n41       * The synthetic ID of the object.\n42       */\n43      @Id\n44      @GeneratedValue(strategy = IDENTITY)\n45      private Long id;\n46  \n47      /**\n48       * <p>\n49       * The name of the event.\n50       * </p>\n51       * \n52       * <p>\n53       * The name of the event forms it's natural identity and cannot be shared between events.\n54       * </p>"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "30  @SuppressWarnings(\"serial\")\n31  @Entity\n32  public class EventCategory implements Serializable {\n33  \n34      /* Declaration of fields */\n35      \n36      /**\n37       * The synthetic id of the object.\n38       */\n39      @Id\n40      @GeneratedValue(strategy = IDENTITY)\n41      private Long id;\n42  \n43      /**\n44       * <p>\n45       * A description of the event category.\n46       * </p>\n47       * \n48       * <p>\n49       * The description of an event category forms it's natural id and cannot be shared between event categories\n50       * </p>"
        lineNumber: 40
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "33  @SuppressWarnings(\"serial\")\n34  @Entity\n35  public class MediaItem implements Serializable {\n36  \n37      /* Declaration of fields */\n38  \n39      /**\n40       * The synthetic id of the object.\n41       */\n42      @Id\n43      @GeneratedValue(strategy = IDENTITY)\n44      private Long id;\n45  \n46      /**\n47       * <p>\n48       * The type of the media, required to render the media item correctly.\n49       * </p>\n50       * \n51       * <p>\n52       * The media type is a <em>closed set</em> - as each different type of media requires support coded into the view layers, it\n53       * cannot be expanded upon without rebuilding the application. It is therefore represented by an enumeration. We instruct"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id\n50      @GeneratedValue(strategy = IDENTITY)\n51      private Long id;\n52  \n53      /**\n54       * <p>\n55       * The date and start time of the performance.\n56       * </p>\n57       * \n58       * <p>\n59       * A Java {@link Date} object represents both a date and a time, whilst an RDBMS splits out Date, Time and Timestamp.\n60       * Therefore we instruct JPA to store this date as a timestamp using the <code>@Temporal(TIMESTAMP)</code> annotation."
        lineNumber: 50
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id\n50      @GeneratedValue(strategy = IDENTITY)\n51      private Long id;\n52  \n53      /**\n54       * <p>\n55       * The short name of the section, may be a code such as A12, G7, etc.\n56       * </p>\n57       * \n58       * <p>\n59       * The\n60       * <code>@NotEmpty<code> Bean Validation constraint means that the section name must be at least 1 character."
        lineNumber: 50
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id\n51      @GeneratedValue(strategy = IDENTITY)\n52      private Long id;\n53  \n54      /**\n55       * <p>\n56       * The version used to optimistically lock this entity.\n57       * </p>\n58       * \n59       * <p>\n60       * Adding this field enables optimistic locking. As we don't access this field in the application, we need to suppress the\n61       * warnings the java compiler gives us about not using the field!"
        lineNumber: 51
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)\n54      private Long id;\n55  \n56      /**\n57       * <p>\n58       * The event of which this show is an instance. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n59       * </p>\n60       * \n61       * <p>\n62       * The <code>@NotNull</code> Bean Validation constraint means that the event must be specified.\n63       * </p>"
        lineNumber: 53
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class Ticket implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;\n38  \n39      /**\n40       * <p>\n41       * The seat for which this ticket has been sold.\n42       * </p>\n43       * \n44       * <p>\n45       * The seat must be specifed, and the Bean Validation constraint <code>@NotNull</code> ensures this.\n46       * </p>"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;\n38  \n39      /**\n40       * <p>\n41       * The description of the of ticket category.\n42       * </p>\n43       * \n44       * <p>\n45       * The description forms the natural id of the ticket category, and so must be unique.\n46       * </p>"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */\n47      @Id\n48      @GeneratedValue(strategy = IDENTITY)\n49      private Long id;\n50  \n51      /**\n52       * <p>\n53       * The show to which this ticket price category belongs. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n54       * </p>\n55       * \n56       * <p>\n57       * The <code>@NotNull</code> Bean Validation constraint means that the show must be specified.\n58       * </p>"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "32  @SuppressWarnings(\"serial\")\n33  @Entity\n34  public class Venue implements Serializable {\n35  \n36      /* Declaration of fields */\n37  \n38      /**\n39       * The synthetic id of the object.\n40       */\n41      @Id\n42      @GeneratedValue(strategy = IDENTITY)\n43      private Long id;\n44  \n45      /**\n46       * <p>\n47       * The name of the event.\n48       * </p>\n49       * \n50       * <p>\n51       * The name of the event forms it's natural identity and cannot be shared between events.\n52       * </p>"
        lineNumber: 42
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "36  @SuppressWarnings(\"serial\")\n37  @Entity\n38  public class Booking implements Serializable {\n39  \n40      /* Declaration of fields */\n41  \n42      /**\n43       * The synthetic ID of the object.\n44       */\n45      @Id\n46      @GeneratedValue(strategy = IDENTITY)\n47      private Long id;\n48  \n49      /**\n50       * <p>\n51       * The set of tickets contained within the booking. The <code>@OneToMany<code> JPA mapping establishes this relationship.\n52       * </p>\n53       * \n54       * <p>\n55       * The set of tickets is eagerly loaded because FIXME . All operations are cascaded to each ticket, so for example if a\n56       * booking is removed, then all associated tickets will be removed."
        lineNumber: 46
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  public class Event implements Serializable {\n37  \n38      /* Declaration of fields */\n39  \n40      /**\n41       * The synthetic ID of the object.\n42       */\n43      @Id\n44      @GeneratedValue(strategy = IDENTITY)\n45      private Long id;\n46  \n47      /**\n48       * <p>\n49       * The name of the event.\n50       * </p>\n51       * \n52       * <p>\n53       * The name of the event forms it's natural identity and cannot be shared between events.\n54       * </p>"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "30  @SuppressWarnings(\"serial\")\n31  @Entity\n32  public class EventCategory implements Serializable {\n33  \n34      /* Declaration of fields */\n35      \n36      /**\n37       * The synthetic id of the object.\n38       */\n39      @Id\n40      @GeneratedValue(strategy = IDENTITY)\n41      private Long id;\n42  \n43      /**\n44       * <p>\n45       * A description of the event category.\n46       * </p>\n47       * \n48       * <p>\n49       * The description of an event category forms it's natural id and cannot be shared between event categories\n50       * </p>"
        lineNumber: 40
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "33  @SuppressWarnings(\"serial\")\n34  @Entity\n35  public class MediaItem implements Serializable {\n36  \n37      /* Declaration of fields */\n38  \n39      /**\n40       * The synthetic id of the object.\n41       */\n42      @Id\n43      @GeneratedValue(strategy = IDENTITY)\n44      private Long id;\n45  \n46      /**\n47       * <p>\n48       * The type of the media, required to render the media item correctly.\n49       * </p>\n50       * \n51       * <p>\n52       * The media type is a <em>closed set</em> - as each different type of media requires support coded into the view layers, it\n53       * cannot be expanded upon without rebuilding the application. It is therefore represented by an enumeration. We instruct"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id\n50      @GeneratedValue(strategy = IDENTITY)\n51      private Long id;\n52  \n53      /**\n54       * <p>\n55       * The date and start time of the performance.\n56       * </p>\n57       * \n58       * <p>\n59       * A Java {@link Date} object represents both a date and a time, whilst an RDBMS splits out Date, Time and Timestamp.\n60       * Therefore we instruct JPA to store this date as a timestamp using the <code>@Temporal(TIMESTAMP)</code> annotation."
        lineNumber: 50
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id\n50      @GeneratedValue(strategy = IDENTITY)\n51      private Long id;\n52  \n53      /**\n54       * <p>\n55       * The short name of the section, may be a code such as A12, G7, etc.\n56       * </p>\n57       * \n58       * <p>\n59       * The\n60       * <code>@NotEmpty<code> Bean Validation constraint means that the section name must be at least 1 character."
        lineNumber: 50
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id\n51      @GeneratedValue(strategy = IDENTITY)\n52      private Long id;\n53  \n54      /**\n55       * <p>\n56       * The version used to optimistically lock this entity.\n57       * </p>\n58       * \n59       * <p>\n60       * Adding this field enables optimistic locking. As we don't access this field in the application, we need to suppress the\n61       * warnings the java compiler gives us about not using the field!"
        lineNumber: 51
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)\n54      private Long id;\n55  \n56      /**\n57       * <p>\n58       * The event of which this show is an instance. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n59       * </p>\n60       * \n61       * <p>\n62       * The <code>@NotNull</code> Bean Validation constraint means that the event must be specified.\n63       * </p>"
        lineNumber: 53
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class Ticket implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;\n38  \n39      /**\n40       * <p>\n41       * The seat for which this ticket has been sold.\n42       * </p>\n43       * \n44       * <p>\n45       * The seat must be specifed, and the Bean Validation constraint <code>@NotNull</code> ensures this.\n46       * </p>"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;\n38  \n39      /**\n40       * <p>\n41       * The description of the of ticket category.\n42       * </p>\n43       * \n44       * <p>\n45       * The description forms the natural id of the ticket category, and so must be unique.\n46       * </p>"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */\n47      @Id\n48      @GeneratedValue(strategy = IDENTITY)\n49      private Long id;\n50  \n51      /**\n52       * <p>\n53       * The show to which this ticket price category belongs. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n54       * </p>\n55       * \n56       * <p>\n57       * The <code>@NotNull</code> Bean Validation constraint means that the show must be specified.\n58       * </p>"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "32  @SuppressWarnings(\"serial\")\n33  @Entity\n34  public class Venue implements Serializable {\n35  \n36      /* Declaration of fields */\n37  \n38      /**\n39       * The synthetic id of the object.\n40       */\n41      @Id\n42      @GeneratedValue(strategy = IDENTITY)\n43      private Long id;\n44  \n45      /**\n46       * <p>\n47       * The name of the event.\n48       * </p>\n49       * \n50       * <p>\n51       * The name of the event forms it's natural identity and cannot be shared between events.\n52       * </p>"
        lineNumber: 42
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Field
          name: Id
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "52  \n53      /* Declaration of fields */\n54  \n55      @TableGenerator(name = \"booking\",\n56      table = \"id_generator\",\n57      pkColumnName = \"idKey\",\n58      valueColumnName = \"idvalue\",\n59      pkColumnValue = \"booking\",\n60      allocationSize = 1)\n61      @Id\n62      @GeneratedValue(strategy = TABLE, generator = \"booking\")\n63      private Long id;\n64  \n65      /**\n66       * <p>\n67       * The set of tickets contained within the booking. The <code>@OneToMany<code> JPA mapping establishes this relationship.\n68       * </p>\n69       * \n70       * <p>\n71       * The set of tickets is eagerly loaded because\n72       * booking is removed, then all associated tickets will be removed."
        lineNumber: 62
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Field
          name: TableGenerator
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "35   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n36   */\n37  public class Section implements Serializable {\n38  \n39      /* Declaration of fields */\n40  \n41      /**\n42       * The synthetic id of the object.\n43       */\n44      @Id\n45      @GeneratedValue(strategy = IDENTITY)\n46      private Long id;\n47  \n48      /**\n49       * <p>\n50       * The short name of the section, may be a code such as A12, G7, etc.\n51       * </p>\n52       * \n53       * <p>\n54       * The\n55       * <code>@NotEmpty<code> Bean Validation constraint means that the section name must be at least 1 character."
        lineNumber: 45
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Field
          name: Id
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "55  \n56      /* Declaration of fields */\n57  \n58      @TableGenerator(name = \"section_allocation\",\n59              table = \"id_generator\",\n60              pkColumnName = \"idKey\",\n61              valueColumnName = \"idvalue\",\n62              pkColumnValue = \"section_allocation\",\n63              allocationSize = 1)\n64      @Id\n65      @GeneratedValue(strategy = TABLE, generator = \"section_allocation\")\n66      private Long id;\n67  \n68      /**\n69       * <p>\n70       * The version used to optimistically lock this entity.\n71       * </p>\n72       * \n73       * <p>\n74       * Adding this field enables optimistic locking. As we don't access this field in the application, we need to suppress the\n75       * warnings the java compiler gives us about not using the field!"
        lineNumber: 65
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Field
          name: TableGenerator
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "44  @Entity\n45  @Table(name=\"appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n46  public class Show implements Serializable {\n47  \n48      /* Declaration of fields */\n49  \n50      /**\n51       * The synthetic id of the object.\n52       */\n53      @Id\n54      @GeneratedValue(strategy = IDENTITY)\n55      private Long id;\n56  \n57      /**\n58       * <p>\n59       * The event of which this show is an instance. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n60       * </p>\n61       * \n62       * <p>\n63       * The <code>@NotNull</code> Bean Validation constraint means that the event must be specified.\n64       * </p>"
        lineNumber: 54
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Field
          name: Id
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "45  \n46      /* Declaration of fields */\n47  \n48      @TableGenerator(name = \"ticket\",\n49              table = \"id_generator\",\n50              pkColumnName = \"idKey\",\n51              valueColumnName = \"idvalue\",\n52              pkColumnValue = \"ticket\",\n53              allocationSize = 1)\n54      @Id\n55      @GeneratedValue(strategy = TABLE, generator = \"ticket\")\n56      private Long id;\n57  \n58      /**\n59       * <p>\n60       * The seat for which this ticket has been sold.\n61       * </p>\n62       * \n63       * <p>\n64       * The seat must be specifed, and the Bean Validation constraint <code>@NotNull</code> ensures this.\n65       * </p>"
        lineNumber: 55
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Field
          name: TableGenerator
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "26  @Table(name = \"ticket_category\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;\n38  \n39      /**\n40       * <p>\n41       * The description of the of ticket category.\n42       * </p>\n43       * \n44       * <p>\n45       * The description forms the natural id of the ticket category, and so must be unique.\n46       * </p>"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
          kind: Field
          name: Id
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
        message: "The way in which Hibernate determines implicit names for sequences and tables associated with identifier generation has changed in 6.0 which may affect migrating applications. \n As of 6.0, Hibernate by default creates a sequence per entity hierarchy instead of a single sequence hibernate_sequence. \n Due to this change, users that previously used `@GeneratedValue(strategy = GenerationStrategy.AUTO)` or simply `@GeneratedValue` (since `AUTO` is the default), need to ensure that the database now contains sequences for every entity, named `<entity name>_seq`. For an entity Person, a sequence person_seq is expected to exist. \n It’s best to run hbm2ddl (e.g. by temporarily setting `hbm2ddl.auto=create`) to obtain a list of DDL statements for the sequences."
        codeSnip: "37  @Table(name = \"ticket_price_guide\", uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n38  @SelectQuery(\"SELECT id, CAST(price AS double), section_id, show_id, ticketCategory_id AS ticketcategory_id FROM legacyDS.TicketPrice\")\n39  public class TicketPriceGuide implements Serializable {\n40  \n41      /* Declaration of fields */\n42  \n43      /**\n44       * The synthetic id of the object.\n45       */\n46      @Id\n47      @GeneratedValue(strategy = IDENTITY)\n48      private Long id;\n49  \n50      /**\n51       * <p>\n52       * The show to which this ticket price category belongs. The <code>@ManyToOne<code> JPA mapping establishes this relationship.\n53       * </p>\n54       * \n55       * <p>\n56       * The <code>@NotNull</code> Bean Validation constraint means that the show must be specified.\n57       * </p>"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Field
          name: Id
          package: org.ticketmonster.orders.domain
      links:
      - url: https://github.com/hibernate/hibernate-orm/blob/6.0/migration-guide.adoc#implicit-identifier-sequence-and-table-name
        title: Hibernate ORM 6 migration guide - Implicit Identifier Sequence and Table Name
      effort: 3
    hibernate-search-6.1-00010:
      description: Hibernate Search 6.1.* now requires using Hibernate ORM versions from the 5.6.x family.
      category: mandatory
      labels:
      - eap8
      - hibernate
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8+
      - konveyor.io/target=hibernate
      - konveyor.io/target=hibernate6.1+
      - konveyor.io/target=quarkus
      - konveyor.io/target=quarkus3+
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: Hibernate Search 6.1.x now requires using Hibernate ORM versions from the 5.6.x family.
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.hibernate.hibernate-core
          version: 5.0.12.Final
      links:
      - url: https://docs.jboss.org/hibernate/search/6.1/migration/html_single/#requirements
        title: Hibernate Search 6.1 - Migration Guide from 6.0
      effort: 1
    javaee-to-jakarta-namespaces-00001:
      description: Replace the Java EE namespace, schemaLocation and version with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 7
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 8
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/web.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 7
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 8
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/web.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee` and change the schema version number
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      links:
      - url: https://jakarta.ee/xml/ns/jakartaee/#10
        title: Jakarta EE XML Schemas
      effort: 1
    javaee-to-jakarta-namespaces-00002:
      description: Replace the Java EE persistence namespace, schemaLocation and version with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence` and change the schema version number
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      links:
      - url: https://jakarta.ee/xml/ns/persistence/#3
        title: Jakarta Persistence XML Schemas
      effort: 1
    javaee-to-jakarta-namespaces-00006:
      description: Replace the Java EE XSD with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 8
        variables:
          matchingText: beans_1_1.xsd
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 8
        variables:
          matchingText: beans_1_1.xsd
      links:
      - url: https://jakarta.ee/xml/ns/jakartaee/#9
        title: Jakarta XML Schemas
      effort: 1
    javaee-to-jakarta-namespaces-00017:
      description: Replace the Java EE XSD with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/web.xml
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version attribute to `"5.0"`
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          matchingText: web-app_3_1.xsd
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/web.xml
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version attribute to `"5.0"`
        codeSnip: |2
            1  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            2  <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">
            3    <display-name>ticket-monster</display-name>
            4    <session-config>
            5      <session-timeout>30</session-timeout>
            6    </session-config>
            7    <mime-mapping>
            8      <extension>ico</extension>
            9      <mime-type>image/x-icon</mime-type>
           10    </mime-mapping>
           11    <welcome-file-list>
           12      <welcome-file>/index.html</welcome-file>
           13    </welcome-file-list>
           14  </web-app>
        lineNumber: 2
        variables:
          matchingText: web-app_3_1.xsd
      links:
      - url: https://jakarta.ee/xml/ns/jakartaee/#9
        title: Jakarta XML Schemas
      effort: 1
    javaee-to-jakarta-namespaces-00030:
      description: Replace the Java EE XSD with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update the version attribute to `"3.0"`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: persistence_2_1.xsd
      links:
      - url: https://jakarta.ee/xml/ns/jakartaee/#9
        title: Jakarta XML Schemas
      effort: 1
    javaee-to-jakarta-namespaces-00033:
      description: Replace the Java EE version with the Jakarta equivalent
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=eap
      - konveyor.io/target=eap8
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 12
        variables:
          matchingText: version="2.1"
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 12
        variables:
          matchingText: version="2.1"
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 12
        variables:
          matchingText: version="2.1"
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 12
        variables:
          matchingText: version="2.1"
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: In the root tag, replace the `version` attribute value `2.1` with `3.0`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 22
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running in a production environment, add a managed \n         data source, this example data source is just for development and testing! --><!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n         can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!-- Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property name=\"hibernate.show_sql\" value=\"false\"></property></properties></persistence-unit>"
      effort: 1
  errors:
    javax-to-jakarta-import-00001: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00070: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00071: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00072: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00080: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00090: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00100: unable to ask for Konveyor rule entry
    javax-to-jakarta-servlet-00101: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00102: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00110: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00111: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00112: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00120: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00121: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00122: connection to the language server is closed, language server is not running
    javax-to-jakarta-servlet-00123: connection to the language server is closed, language server is not running
  unmatched:
  - hibernate-00010
  - hibernate-6.2-00010
  - hibernate-6.2-00020
  - hibernate-6.2-00030
  - hibernate-6.2-00040
  - hibernate-6.2-00050
  - hibernate-search-00010
  - hibernate-search-00020
  - hibernate-search-00030
  - hibernate-search-00040
  - hibernate-search-00050
  - hibernate-search-00060
  - hibernate-search-00070
  - hibernate-search-00080
  - hibernate-search-00090
  - hibernate-search-00100
  - hibernate-search-00105
  - hibernate-search-00110
  - hibernate-search-00120
  - hibernate-search-00140
  - hibernate-search-00150
  - hibernate-search-00160
  - hibernate-search-00170
  - hibernate-search-00180
  - hibernate-search-00190
  - hibernate-search-00200
  - hibernate-search-00210
  - hibernate-search-00220
  - hibernate-search-00230
  - hibernate-search-00240
  - hibernate-search-00250
  - hibernate-search-00260
  - hibernate-search-00270
  - hibernate-search-00280
  - hibernate-search-00290
  - hibernate-search-00300
  - hibernate-search-00310
  - hibernate-search-00320
  - hibernate-search-00330
  - hibernate-search-00340
  - hibernate-search-00350
  - hibernate-search-00360
  - hibernate-search-00370
  - hibernate-search-00380
  - hibernate-search-00390
  - hibernate-search-00400
  - hibernate-search-00410
  - hibernate-search-00420
  - hibernate-search-00430
  - hibernate-search-00440
  - hibernate-search-00450
  - hibernate-search-00460
  - hibernate-search-00470
  - hibernate-search-00480
  - hibernate-search-00490
  - hibernate-search-00500
  - hibernate-search-00510
  - hibernate-search-00520
  - hibernate-search-00530
  - hibernate-search-00540
  - hibernate-search-00550
  - hibernate-search-00560
  - hibernate-search-00570
  - hibernate-search-00580
  - hibernate-search-00590
  - hibernate-search-00600
  - hibernate-search-00610
  - hibernate-search-00620
  - hibernate-search-00630
  - hibernate-search-00640
  - hibernate-search-00650
  - hibernate-search-00660
  - hibernate-search-00670
  - hibernate-search-00680
  - hibernate-search-00690
  - hibernate-search-00700
  - hibernate-search-00710
  - hibernate-search-00720
  - hibernate-search-00730
  - hibernate-search-00740
  - hibernate-search-00750
  - hibernate-search-00760
  - hibernate-search-00770
  - hibernate-search-00780
  - hibernate-search-00790
  - hibernate-search-00800
  - hibernate-search-00810
  - hibernate-search-00820
  - hibernate-search-00830
  - hibernate-search-00840
  - hibernate-search-00850
  - hibernate-search-00860
  - hibernate-search-00870
  - hibernate-search-00880
  - hibernate-search-00890
  - hibernate-search-00900
  - hibernate-search-00910
  - hibernate-search-00920
  - hibernate-search-00930
  - hibernate-search-00940
  - hibernate-search-00950
  - hibernate-search-00960
  - hibernate-search-00970
  - hibernate-search-00980
  - hibernate-search-00990
  - hibernate-search-01000
  - hibernate-search-01010
  - hibernate-search-01020
  - hibernate-search-01030
  - hibernate-search-01040
  - hibernate-search-6.1-00020
  - hibernate-search-6.1-00030
  - hibernate-search-6.1-00040
  - hibernate-search-6.1-00050
  - hibernate-search-6.1-00060
  - hibernate-search-6.1-00070
  - hibernate-search-6.1-00080
  - hibernate-search-6.1-00090
  - hibernate-search-6.1-00100
  - hibernate-search-6.1-00120
  - hibernate-search-6.1-00130
  - hibernate-search-6.1-00140
  - hibernate-search-6.1-00150
  - hibernate-search-6.1-00160
  - hibernate-search-6.1-00170
  - hibernate-search-6.1-00180
  - hibernate-search-6.1-00190
  - hibernate6-00020
  - hibernate6-00030
  - hibernate6-00040
  - hibernate6-00050
  - hibernate6-00060
  - hibernate6-00070
  - hibernate6-00080
  - hibernate6-00090
  - hibernate6-00100
  - hibernate6-00110
  - hibernate6-00120
  - hibernate6-00130
  - hibernate6-00140
  - hibernate6-00150
  - hibernate6-00160
  - hibernate6-00170
  - hibernate6-00180
  - hibernate6-00190
  - hibernate6-00200
  - hibernate6-00210
  - hibernate6-00220
  - hibernate6-00230
  - hibernate6-00240
  - hibernate6-00250
  - hibernate6-00251
  - hibernate6-00252
  - hibernate6-00253
  - hibernate6-00254
  - hibernate6-00255
  - hibernate6-00257
  - hibernate6-00270
  - hibernate6-00280
  - javaee-to-jakarta-namespaces-00003
  - javaee-to-jakarta-namespaces-00004
  - javaee-to-jakarta-namespaces-00005
  - javaee-to-jakarta-namespaces-00007
  - javaee-to-jakarta-namespaces-00008
  - javaee-to-jakarta-namespaces-00009
  - javaee-to-jakarta-namespaces-00010
  - javaee-to-jakarta-namespaces-00011
  - javaee-to-jakarta-namespaces-00012
  - javaee-to-jakarta-namespaces-00013
  - javaee-to-jakarta-namespaces-00014
  - javaee-to-jakarta-namespaces-00015
  - javaee-to-jakarta-namespaces-00016
  - javaee-to-jakarta-namespaces-00018
  - javaee-to-jakarta-namespaces-00019
  - javaee-to-jakarta-namespaces-00020
  - javaee-to-jakarta-namespaces-00021
  - javaee-to-jakarta-namespaces-00022
  - javaee-to-jakarta-namespaces-00023
  - javaee-to-jakarta-namespaces-00024
  - javaee-to-jakarta-namespaces-00025
  - javaee-to-jakarta-namespaces-00026
  - javaee-to-jakarta-namespaces-00027
  - javaee-to-jakarta-namespaces-00028
  - javaee-to-jakarta-namespaces-00029
  - javaee-to-jakarta-namespaces-00031
  - javaee-to-jakarta-namespaces-00032
  - javaee-to-jakarta-namespaces-00034
  - javaee-to-jakarta-namespaces-00035
  - javaee-to-jakarta-namespaces-00036
  - javaee-to-jakarta-namespaces-00037
  - javaee-to-jakarta-namespaces-00038
  - javaee-to-jakarta-namespaces-00039
  - javaee-to-jakarta-namespaces-00040
  - javaee-to-jakarta-namespaces-00041
  - javaee-to-jakarta-namespaces-00042
  - javaee-to-jakarta-namespaces-00043
  - javaee-to-jakarta-namespaces-00044
  - javaee-to-jakarta-namespaces-00045
  - javaee-to-jakarta-namespaces-00046
  - javaee-to-jakarta-namespaces-00047
  - javaee-to-jakarta-namespaces-00048
  - javaee-to-jakarta-namespaces-00049
  - javaee-to-jakarta-namespaces-00050
  - javaee-to-jakarta-namespaces-00051
  - javaee-to-jakarta-namespaces-00052
  - javaee-to-jakarta-namespaces-00053
  - javaee-to-jakarta-namespaces-00054
  - javaee-to-jakarta-namespaces-00055
  - javaee-to-jakarta-namespaces-00056
  - javax-to-jakarta-bootstrapping-files-00001
  - javax-to-jakarta-dependencies-00001
  - javax-to-jakarta-dependencies-00002
  - javax-to-jakarta-dependencies-00003
  - javax-to-jakarta-dependencies-00004
  - javax-to-jakarta-dependencies-00005
  - javax-to-jakarta-dependencies-00006
  - javax-to-jakarta-dependencies-00007
  - javax-to-jakarta-dependencies-00008
  - javax-to-jakarta-properties-00001
  - javax-to-jakarta-servlet-00010
  - javax-to-jakarta-servlet-00020
  - javax-to-jakarta-servlet-00030
  - javax-to-jakarta-servlet-00040
  - javax-to-jakarta-servlet-00041
  - javax-to-jakarta-servlet-00042
  - javax-to-jakarta-servlet-00043
  - javax-to-jakarta-servlet-00050
  - javax-to-jakarta-servlet-00060
  - javax-to-jakarta-servlet-00130
  skipped:
  - deprecated-initialcontextfactory-is-removed-00001
  - eap8-ejb-00001
  - eap8-ejb-00002
  - eap8-ejb-00003
  - eap8-faces-00001
  - eap8-faces-00002
  - eap8-faces-00003
  - eap8-faces-00004
  - eap8-faces-00005
  - eap8-faces-00006
  - eap8-faces-00007
  - eap8-faces-00008
  - eap8-faces-00009
  - eap8-resteasy-00001
  - eap8-resteasy-00002
  - eap8-resteasy-00003
  - eap8-resteasy-00004
  - eap8-resteasy-00005
  - eap8-resteasy-00006
  - eap8-resteasy-00007
  - eap8-resteasy-00008
  - eap8-resteasy-00009
  - eap8-resteasy-00010
  - eap8-resteasy-00011
  - eap8-xml-binding-00001
  - eap8-xml-binding-00002
  - eap8-xml-binding-00003
  - eap8-xml-binding-00004
  - eap8-xml-binding-00005
  - eap8-xml-binding-00006
  - eap8-xml-binding-00007
  - eap8-xml-binding-00008
  - eap8-xml-binding-00009
  - empty-beans-xml-00001
  - jakarta-cdi-00001
  - jakarta-cdi-00002
  - jakarta-cdi-00003
  - jakarta-cdi-00004
  - jakarta-el-00010
  - jakarta-el-00020
  - jakarta-faces-00001
  - jakarta-json-binding-00010
  - jakarta-soap-00010
  - jakarta-soap-00020
  - jakarta-ws-rs-00001
  - jboss-dependencies-00001
  - jboss-dependencies-00002
  - jboss-dependencies-00003
  - jboss-dependencies-00004
  - jboss-dependencies-00005
  - jboss-dependencies-00006
  - jboss-dependencies-00007
  - jboss-dependencies-00008
  - jboss-dependencies-00009
  - jboss-dependencies-00010
  - jboss-dependencies-00011
  - jboss-dependencies-00012
  - jboss-dependencies-00013
  - jboss-dependencies-00014
  - jboss-dependencies-00015
  - jboss-dependencies-00016
  - jboss-dependencies-00017
  - jboss-dependencies-00018
  - jboss-dependencies-00019
  - jboss-dependencies-00020
  - jboss-dependencies-00021
  - jboss-dependencies-00022
  - jboss-dependencies-00023
  - jboss-dependencies-00024
  - jboss-dependencies-00025
  - jboss-dependencies-00026
  - jboss-dependencies-00027
  - jboss-dependencies-00028
  - jboss-dependencies-00030
  - jboss-dependencies-00031
  - jboss-dependencies-00032
  - keycloak-openid-00001
  - keycloak-openid-00010
  - legacy-vault-00010
  - log4j-removed-00001
  - log4j-removed-00002
  - log4j-removed-00003
  - log4j-removed-00004
  - log4j-removed-00005
  - login-modules-00001
  - picketlink-00010
  - picketlink-00020
- name: eapxp/thorntail
  description: This ruleset provides analysis of Maven built applications that use Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR Maven Plugin, when migrating to JBoss EAP XP.
  skipped:
  - eapxp_bootable_jar_maven_plugin_configuration_changes-1
  - eapxp_microprofile_metrics_not_supported-00001
  - eapxp_microprofile_opentracing_not_supported-00001
  - remove_thorntail_yaml_configuration_files-1
  - replace_thorntail_boms-1
  - replace_thorntail_boms-2
  - replace_thorntail_fractions-01
  - replace_thorntail_fractions-02
  - replace_thorntail_fractions-03
  - replace_thorntail_fractions-04
  - replace_thorntail_fractions-05
  - replace_thorntail_fractions-06
  - replace_thorntail_fractions-07
  - replace_thorntail_fractions-08
  - replace_thorntail_fractions-09
  - replace_thorntail_fractions-10
  - replace_thorntail_fractions-11
  - replace_thorntail_fractions-12
  - replace_thorntail_fractions-13
  - replace_thorntail_fractions-14
  - replace_thorntail_fractions-15
  - replace_thorntail_fractions-16
  - replace_thorntail_fractions-17
  - replace_thorntail_fractions-18
  - replace_thorntail_fractions-19
  - replace_thorntail_fractions-20
  - replace_thorntail_fractions-21
  - replace_thorntail_fractions-22
  - replace_thorntail_fractions-23
  - replace_thorntail_fractions-24
  - replace_thorntail_fractions-25
  - replace_thorntail_fractions-26
  - replace_thorntail_fractions-27
  - replace_thorntail_fractions-28
  - replace_thorntail_fractions-29
  - replace_thorntail_fractions-30
  - replace_thorntail_fractions-31
  - replace_thorntail_fractions-32
  - replace_thorntail_fractions-33
  - replace_thorntail_fractions-34
  - replace_thorntail_fractions-35
  - replace_thorntail_fractions-36
  - replace_thorntail_fractions-37
  - replace_thorntail_fractions-38
  - replace_thorntail_fractions-39
  - replace_thorntail_fractions-40
  - replace_thorntail_fractions-41
  - replace_thorntail_fractions-42
  - replace_thorntail_fractions-43
  - replace_thorntail_fractions-44
  - replace_thorntail_fractions-45
  - replace_thorntail_fractions-46
  - replace_thorntail_fractions-47
  - replace_thorntail_fractions-48
  - replace_thorntail_fractions-49
  - replace_thorntail_fractions-50
  - replace_thorntail_maven_plugin-1
- name: filemappings
  description: This rule set configures the organization matching functionality, using known root-package prefixes to identify libraries and other code.
- name: fuse-service-works/soa-p-5
  description: This ruleset provides analysis of JBoss SOA Platform 5 applications and provides information on how to migrate these to Red Hat JBoss Fuse Service Works
  skipped:
  - soa-p-16000
  - soa-p-17000
  - soa-p-18000
  - soa-p-19000
  - soa-p-20000
  - soa-p-21000
  - soa-p-22000
  - soa-p-23000
  - soa-p-24000
  - soa-p-25000
  - soa-p-26000
  - soa-p-27000
  - soa-p-28000
  - soa-p-29000
  - soa-p-30000
  - soa-p-31000
  - soa-p-32000
  - soa-p-33000
  - soa-p-34000
  - soa-p-35000
  - soa-p-36000
  - soa-p-37000
  - soa-p-38000
  - soa-p-39000
  - soa-p-40000
  - soa-p-41000
  - soa-p-42000
  - soa-p-43000
  - soa-p-44000
  - soa-p-45000
  - soa-p-46000
  - soa-p-47000
  - soa-p-48000
  - soa-p-49000
  - soa-p-5-01000
  - soa-p-5-02000
  - soa-p-5-03000
  - soa-p-5-04000
  - soa-p-5-05000
  - soa-p-5-06000
  - soa-p-5-07000
  - soa-p-5-08000
  - soa-p-5-09000
  - soa-p-5-10000
  - soa-p-5-11000
  - soa-p-5-12000
  - soa-p-5-13000
  - soa-p-5-14000
  - soa-p-5-15000
  - soa-p-50000
- name: fuse/sonicesb
  description: This ruleset contains rules that assist in migrating from Sonic ESB to Apache Camel.
  skipped:
  - sonic-catchall-00000
  - sonic-esb-01000
  - sonic-esb-02000
  - sonic-esb-03000
  - sonic-esb-04000
  - sonic-esb-05000
  - sonic-esb-06000
  - sonic-esb-07000
  - sonic-esb-08000
  - sonic-esb-09000
  - sonic-esb-10000
  - sonic-esb-11000
  - sonic-esb-12000
  - sonic-esb-13000
  - sonic-esb-14000
  - sonic-esb-15000
  - sonic-esb-16000
  - sonic-esb-17000
  - sonic-esb-18000
  - sonic-esb-19000
  - sonic-esb-20000
  - sonic-esb-21000
  - xml-sonic-esb-01000
- name: hibernate
  description: This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.
  skipped:
  - hibernate-01000
  - hibernate-02000
  - hibernate-03000
  - hibernate-04000
  - hibernate-05000
  - hibernate-06000
  - hibernate-07000
  - hibernate-08000
  - hibernate-09000
  - hibernate-10000
  - hibernate-10100
  - hibernate-catchall-00000
  - hibernate-xml-01000
  - hibernate-xml-02000
  - hibernate-xml-03000
  - hibernate-xml-04000
  - hibernate-xml-05000
- name: jakarta-ee9
  violations:
    spring-components-00001:
      description: Version of Spring Boot not compatible with Jakarta EE 9+
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: Version 3.0.0 is the minimum version of Spring Boot that is Jakarta EE 9+ compatible
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.boot.spring-boot-starter-test
          version: 1.5.6.RELEASE
      links:
      - url: https://spring.io/blog/2021/09/02/a-java-17-and-jakarta-ee-9-baseline-for-spring-framework-6/
        title: A Java 17 and Jakarta EE 9 baseline for Spring Framework 6
      effort: 3
    spring-components-00002:
      description: Version of Spring not compatible with Jakarta EE 9+
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=jakarta-ee
      - konveyor.io/target=jakarta-ee9+
      - konveyor.io/target=jws
      - konveyor.io/target=jws6+
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: Version 6.0.0 is the minimum version of Spring that is Jakarta EE 9+ compatible
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.boot.spring-boot-starter-test
          version: 1.5.6.RELEASE
      links:
      - url: https://spring.io/blog/2021/09/02/a-java-17-and-jakarta-ee-9-baseline-for-spring-framework-6/
        title: A Java 17 and Jakarta EE 9 baseline for Spring Framework 6
      effort: 3
- name: jws5
  description: This ruleset provides analysis of applications that need to change their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`
  skipped:
  - upgrade-tomcat-dependencies-00001
- name: kai/quarkus
  description: Quarkus focused rules to help migrate from Java EE
- name: openjdk11/openjdk8
  description: This ruleset provides analysis with respect to API removals between OpenJDK 8 and 11.
  skipped:
  - java-removals-00000
  - java-removals-00010
  - java-removals-00020
  - java-removals-00030
  - java-removals-00040
  - java-removals-00041
  - java-removals-00050
  - java-removals-00060
  - java-removals-00100
  - java-removals-00110
  - java-removals-00120
  - java-removals-00130
  - java-removals-00140
  - java-removals-00150
  - removed-javaee-modules-00000
  - removed-javaee-modules-00010
  - removed-javaee-modules-00020
- name: openjdk17
  description: This ruleset provides analysis regarding deprecated APIs in OpenJDK 21.
  skipped:
  - deprecation-00000
  - deprecation-00005
  - deprecation-00010
  - deprecation-00020
  - deprecation-00030
  - dynamic-agents-00000
  - finalization-deprecation-00000
  - finalization-deprecation-00010
  - removed-apis-00000
  - removed-apis-00005
  - removed-apis-00010
  - removed-apis-00015
  - utf-8-by-default-00000
  - utf-8-by-default-00010
  - utf-8-by-default-00020
  - utf-8-by-default-00030
- name: openjdk17/openjdk11
  description: This ruleset provides analysis Security Manager classes and methods deprecated between OpenJDK 11 to 17.
  skipped:
  - applet-api-deprecation-00000
  - lombok-incompatibility-00001
  - removed-classes-00000
  - removed-packages-00000
  - removed-packages-00010
  - security-manager-deprecation-00000
  - security-manager-deprecation-00010
  - security-manager-deprecation-00020
  - security-manager-deprecation-00030
  - security-manager-deprecation-00040
  - security-manager-deprecation-00050
  - security-manager-deprecation-00060
  - security-manager-deprecation-00070
- name: openjdk7/oraclejdk7
  description: This ruleset provides analysis with respect to the migration from OracleJDK to OpenJDK.
  skipped:
  - oracle2openjdk-00000
  - oracle2openjdk-00001
  - oracle2openjdk-00002
  - oracle2openjdk-00003
  - oracle2openjdk-00004
  - oracle2openjdk-00005
  - oracle2openjdk-00006
- name: openliberty/websphere
  description: This ruleset identifies usage of Java APIs and technologies which are not provided by Open Liberty.
  skipped:
  - ActivitySessionRule
  - AppProfileRule
  - AsyncBeansSchedulerRule
  - BatchFeaturePackRule
  - DetectEJBEntityBeansXML
  - DetectJAXRJava
  - DetectJAXRPC
  - DetectJavaApplicationDeploymentJava
  - DetectJavaPortlet
  - DetectPolicySetAndWsSecurity
  - DetectRemoteBundleRepositoriesJava
  - DetectRemoteServicesJava
  - DetectTransactionPropagationEJBRemote
  - DetectWSATXML
  - DetectWSBAJava
  - DetectWSNotificationJava
  - DynamicCacheRule
  - DynamicQueryRule
  - I18nRule
  - MTOMRule
  - SOAPOverJMSRule
  - ServerName
  - StartupBeanRule
  - WOLAMissingClassesRule
  - WOLARule
  - WSNotificationRuleJava
  - WebSphereSchedulerRule
  - WebSphereSdoRule
  - WebSphereServletRule
  - WebSphereUnavailableAPIsAppClient
  - WebSphereUnavailableAPIsConnectorArchitecture
  - WebSphereUnavailableAPIsEnterpriseJavaBeans
  - WebSphereUnavailableAPIsExceptions
  - WebSphereUnavailableAPIsExtHelper
  - WebSphereUnavailableAPIsExtensionRegistry
  - WebSphereUnavailableAPIsISC
  - WebSphereUnavailableAPIsLoggingAndRAS
  - WebSphereUnavailableAPIsManagement
  - WebSphereUnavailableAPIsORB
  - WebSphereUnavailableAPIsPMI
  - WebSphereUnavailableAPIsPortal
  - WebSphereUnavailableAPIsResourceAdapter
  - WebSphereUnavailableAPIsSIB
  - WebSphereUnavailableAPIsSMF
  - WebSphereUnavailableAPIsSecurity
  - WebSphereUnavailableAPIsTPV
  - WebSphereUnavailableAPIsUDDI
  - WebSphereUnavailableAPIsWLM
  - WebSphereUnavailableAPIsWSADIE
  - WebSphereUnavailableAPIsWSSecurityHelper
  - WebSphereUnavailableSPIsRRD
  - WebSphereUnavailableSSOCookieMethod
  - WebSphereUnavailableSSOTokenMethod
  - WebSphereWebServicesGeneratedClassesRule
  - WebSphereWebServicesRule
  - WorkAreaRule
  - XMLFeaturePackRule
- name: os/windows
  description: This is a ruleset for Windows operating system specific rules while migrating to Linux operating system.
  skipped:
  - os-specific-00001
  - os-specific-00002
- name: quarkus/springboot
  description: This ruleset gives hints to migrate from SpringBoot devtools to Quarkus
  violations:
    cdi-to-quarkus-00000:
      description: Replace javax.enterprise:cdi-api dependency
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: Dependency `javax.enterprise:cdi-api` has to be replaced with `io.quarkus:quarkus-arc` artifact.
        codeSnip: " 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>"
        lineNumber: 130
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n            provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: Dependency `javax.enterprise:cdi-api` has to be replaced with `io.quarkus:quarkus-arc` artifact.
        codeSnip: " 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->"
        lineNumber: 141
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n            provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
      links:
      - url: https://quarkus.io/guides/cdi-reference
        title: Quarkus - Guide
      effort: 1
    cdi-to-quarkus-00020:
      description: Replace javax.inject:javax.inject dependency
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: Dependency `javax.inject:javax.inject` has to be replaced with `io.quarkus:quarkus-arc` artifact.
        codeSnip: " 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>"
        lineNumber: 136
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n            provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: Dependency `javax.inject:javax.inject` has to be replaced with `io.quarkus:quarkus-arc` artifact.
        codeSnip: " 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>"
        lineNumber: 147
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n            provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
      links:
      - url: https://quarkus.io/guides/cdi-reference
        title: Quarkus - Guide
      effort: 1
    cdi-to-quarkus-00030:
      description: '`beans.xml` descriptor content is ignored'
      category: potential
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/beans.xml
        message: "`beans.xml` descriptor content is ignored and it could be removed from the application. \n Refer to the guide referenced below to check the supported CDI feature in Quarkus."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/beans.xml
        message: "`beans.xml` descriptor content is ignored and it could be removed from the application. \n Refer to the guide referenced below to check the supported CDI feature in Quarkus."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          http://xmlns.jcp.org/xml/ns/javaee\n  8          http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      effort: 3
    dependency-removal-for-quarkus-00000:
      description: Remove non-quarkus dependencies
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: Non-quarkus dependencies are no longer required and can be removed.
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 1.0.0.Final-redhat-1
      links:
      - url: https://quarkus.io/guides
        title: Quarkus - Guide
      effort: 1
    jakarta-cdi-to-quarkus-00030:
      description: '`beans.xml` descriptor content is ignored'
      category: potential
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/beans.xml
        message: "The `beans.xml` descriptor content is ignored and it could be removed from the application. \n Refer to the guide referenced below to check the supported CDI feature in Quarkus."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          https://jakarta.ee/xml/ns/jakartaee\n  8          https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/beans.xml
        message: "The `beans.xml` descriptor content is ignored and it could be removed from the application. \n Refer to the guide referenced below to check the supported CDI feature in Quarkus."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- This file can be an empty text file (0 bytes) -->\n  3  <!-- We're declaring the schema to save you time if you do have to configure \n  4     this in the future -->\n  5  <beans xmlns=\"https://jakarta.ee/xml/ns/jakartaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  6     xsi:schemaLocation=\"\n  7          https://jakarta.ee/xml/ns/jakartaee\n  8          https://jakarta.ee/xml/ns/jakartaee/beans_4_0.xsd\" bean-discovery-mode=\"all\">\n  9  </beans>\n"
        lineNumber: 5
        variables:
          data: beans
          innerText: |2+

          matchingXML: ""
      effort: 3
    jakarta-jaxrs-to-quarkus-00010:
      description: Replace jakarta JAX-RS dependency
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: Dependency `jakarta.ws.rs:jakarta.ws.rs-api` has to be replaced with `io.quarkus:quarkus-resteasy-reactive` artifact.
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: jakarta.ws.rs.jakarta.ws.rs-api
          version: 3.1.0
      links:
      - url: https://quarkus.io/guides/resteasy-reactive
        title: Quarkus - Guide
      effort: 1
    javaee-pom-to-quarkus-00000:
      description: The expected project artifact's extension is `jar`
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: The project artifact's current extension (i.e. `<packaging>` tag value) is `` but the expected value should be `jar`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>"
        lineNumber: 7
        variables:
          data: war
          innerText: war
          matchingXML: ""
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: The project artifact's current extension (i.e. `<packaging>` tag value) is `` but the expected value should be `jar`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>"
        lineNumber: 7
        variables:
          data: war
          innerText: war
          matchingXML: ""
      - uri: file:///opt/input/source/pom.xml
        message: The project artifact's current extension (i.e. `<packaging>` tag value) is `` but the expected value should be `jar`
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>\n105          </plugins>\n106      </build>\n107  \n108  </project>\n"
        lineNumber: 13
        variables:
          data: pom
          innerText: pom
          matchingXML: ""
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00010:
      description: Adopt Quarkus BOM
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Use the Quarkus BOM to omit the version of the different Quarkus dependencies. \n Add the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <dependencyManagement> \n <dependencies> \n <dependency> \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version> \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies> \n </dependencyManagement> \n ```\n Check the latest Quarkus version available from the `Quarkus - Releases` link below."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Use the Quarkus BOM to omit the version of the different Quarkus dependencies. \n Add the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <dependencyManagement> \n <dependencies> \n <dependency> \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version> \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies> \n </dependencyManagement> \n ```\n Check the latest Quarkus version available from the `Quarkus - Releases` link below."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Use the Quarkus BOM to omit the version of the different Quarkus dependencies. \n Add the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <dependencyManagement> \n <dependencies> \n <dependency> \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version> \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies> \n </dependencyManagement> \n ```\n Check the latest Quarkus version available from the `Quarkus - Releases` link below."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Use the Quarkus BOM to omit the version of the different Quarkus dependencies. \n Add the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <dependencyManagement> \n <dependencies> \n <dependency> \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version> \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies> \n </dependencyManagement> \n ```\n Check the latest Quarkus version available from the `Quarkus - Releases` link below."
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      - url: https://quarkus.io/blog/tag/release/
        title: Quarkus - Releases
      effort: 1
    javaee-pom-to-quarkus-00020:
      description: Adopt Quarkus Maven plugin
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Use the Quarkus Maven plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Use the Quarkus Maven plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Use the Quarkus Maven plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Use the Quarkus Maven plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id> \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00030:
      description: Adopt Maven Compiler plugin
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Use the Maven Compiler plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n <maven.compiler.release>11</maven.compiler.release>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Use the Maven Compiler plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n <maven.compiler.release>11</maven.compiler.release>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/monolith/pom.xml
        message: "Use the Maven Compiler plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n <maven.compiler.release>11</maven.compiler.release>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <packaging>jar</packaging>\n  8      <name>ticket-monster</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <properties>\n 12          <!-- Explicitly declaring the source encoding eliminates the following \n 13              message: -->\n 14          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 15              resources, i.e. build is platform dependent! -->\n 16          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 17          <!-- Timestamp format for the maven.build.timestamp property -->\n 18          <!-- You can reference property in pom.xml or filtered resources \n 19              (must enable third-party plugin if using Maven < 2.1) -->\n 20          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 21          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n 22              variable -->\n 23          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n 24          <maven.home>${env.MAVEN_HOME}</maven.home>\n 25          <!-- the version for the Server -->\n 26          <version.server>30.0.0.Final</version.server>\n 27          <!-- the versions for BOMs, Packs and Plugins -->\n 28          <version.bom.ee>${version.server}</version.bom.ee>\n 29          <version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin>\n 30          <version.surefire.plugin>2.10</version.surefire.plugin>\n 31          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n 32          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 33          <docker.image.name>%g/%a:%l</docker.image.name>\n 34  \n 35          <compiler-plugin.version>3.10.1</compiler-plugin.version>\n 36  \n 37          <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n 38          <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n 39          <quarkus.platform.version>3.5.1</quarkus.platform.version>\n 40  \n 41          <surefire-plugin.version>3.0.0</surefire-plugin.version>\n 42  \n 43      </properties>\n 44  \n 45      <dependencyManagement>\n 46          <dependencies>\n 47              <dependency>\n 48                  <groupId>${quarkus.platform.group-id}</groupId>\n 49                  <artifactId>${quarkus.platform.artifact-id}</artifactId>\n 50                  <version>${quarkus.platform.version}</version>\n 51                  <type>pom</type>\n 52                  <scope>import</scope>\n 53              </dependency>\n 54          </dependencies>\n 55      </dependencyManagement>\n 56  \n 57      <dependencies>\n 58  \n 59          <dependency>\n 60              <groupId>io.quarkus</groupId>\n 61              <artifactId>quarkus-arc</artifactId>\n 62          </dependency>\n 63  \n 64          <dependency>\n 65              <groupId>jakarta.validation</groupId>\n 66              <artifactId>jakarta.validation-api</artifactId>\n 67              <scope>provided</scope>\n 68          </dependency>\n 69  \n 70          <dependency>\n 71              <groupId>jakarta.annotation</groupId>\n 72              <artifactId>jakarta.annotation-api</artifactId>\n 73              <scope>provided</scope>\n 74          </dependency>\n 75  \n 76          <dependency>\n 77              <groupId>io.quarkus</groupId>\n 78              <artifactId>quarkus-resteasy-reactive</artifactId>\n 79          </dependency>\n 80  \n 81          <dependency>\n 82              <groupId>io.quarkus</groupId>\n 83              <artifactId>quarkus-hibernate-orm</artifactId>\n 84          </dependency>\n 85          <dependency>\n 86              <groupId>io.quarkus</groupId>\n 87              <artifactId>quarkus-jdbc-mysql</artifactId>\n 88          </dependency>\n 89          <dependency>\n 90              <groupId>io.quarkus</groupId>\n 91              <artifactId>quarkus-hibernate-validator</artifactId>\n 92          </dependency>\n 93  \n 94          <dependency>\n 95              <groupId>io.quarkus</groupId>\n 96              <artifactId>quarkus-undertow</artifactId>\n 97          </dependency>\n 98  \n 99          <!-- Now we declare any tools needed -->\n100          <dependency>\n101              <groupId>org.hibernate.orm</groupId>\n102              <artifactId>hibernate-jpamodelgen</artifactId>\n103              <scope>provided</scope>\n104          </dependency>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n        \n        30.0.0.Final\n        \n        ${version.server}\n        4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n            \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n                ${quarkus.platform.version}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n            io.quarkus\n            quarkus-arc\n        \n\n        \n            jakarta.validation\n            jakarta.validation-api\n            provided\n        \n\n        \n            jakarta.annotation\n            jakarta.annotation-api\n            provided\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive\n        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n        \n\n        \n            io.quarkus\n            quarkus-undertow\n        \n\n        \n        \n            org.hibernate.orm\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            3.2.1\n            pom\n            test\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    ${compiler-plugin.version}\n                    \n                        \n                            -parameters\n                        \n                    \n                \n\n\n                \n                    ${quarkus.platform.group-id}\n                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n                    true\n                    \n                        \n                            \n                                build\n                                generate-code\n                                generate-code-tests\n                            \n                        \n                    \n                \n\n                \n                    maven-surefire-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            org.jboss.logmanager.LogManager\n                            ${maven.home}\n                        \n                    \n                \n\n                \n                    maven-failsafe-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            \n                                integration-test\n                                verify\n                            \n                            \n                                \n                                    ${project.build.directory}/${project.build.finalName}-runner\n                                    org.jboss.logmanager.LogManager\n                                    ${maven.home}\n                                \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n            \n                ${quarkus.platform.group-id}\n                quarkus-maven-plugin\n            \n        \n    \n\n    \n        \n            native\n            \n                \n                    native\n                \n            \n            \n                false\n                native\n            \n        \n        \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            kubernetes\n            \n                \n                %g/%a:%l\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!-- the version for the Server --><version.server>30.0.0.Final</version.server><!-- the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!-- Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Use the Maven Compiler plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n <maven.compiler.release>11</maven.compiler.release>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Use the Maven Compiler plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n <maven.compiler.release>11</maven.compiler.release>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00040:
      description: Adopt Maven Surefire plugin
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Use the Maven Surefire plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Use the Maven Surefire plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/monolith/pom.xml
        message: "Use the Maven Surefire plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <packaging>jar</packaging>\n  8      <name>ticket-monster</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <properties>\n 12          <!-- Explicitly declaring the source encoding eliminates the following \n 13              message: -->\n 14          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 15              resources, i.e. build is platform dependent! -->\n 16          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 17          <!-- Timestamp format for the maven.build.timestamp property -->\n 18          <!-- You can reference property in pom.xml or filtered resources \n 19              (must enable third-party plugin if using Maven < 2.1) -->\n 20          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 21          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n 22              variable -->\n 23          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n 24          <maven.home>${env.MAVEN_HOME}</maven.home>\n 25          <!-- the version for the Server -->\n 26          <version.server>30.0.0.Final</version.server>\n 27          <!-- the versions for BOMs, Packs and Plugins -->\n 28          <version.bom.ee>${version.server}</version.bom.ee>\n 29          <version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin>\n 30          <version.surefire.plugin>2.10</version.surefire.plugin>\n 31          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n 32          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 33          <docker.image.name>%g/%a:%l</docker.image.name>\n 34  \n 35          <compiler-plugin.version>3.10.1</compiler-plugin.version>\n 36  \n 37          <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n 38          <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n 39          <quarkus.platform.version>3.5.1</quarkus.platform.version>\n 40  \n 41          <surefire-plugin.version>3.0.0</surefire-plugin.version>\n 42  \n 43      </properties>\n 44  \n 45      <dependencyManagement>\n 46          <dependencies>\n 47              <dependency>\n 48                  <groupId>${quarkus.platform.group-id}</groupId>\n 49                  <artifactId>${quarkus.platform.artifact-id}</artifactId>\n 50                  <version>${quarkus.platform.version}</version>\n 51                  <type>pom</type>\n 52                  <scope>import</scope>\n 53              </dependency>\n 54          </dependencies>\n 55      </dependencyManagement>\n 56  \n 57      <dependencies>\n 58  \n 59          <dependency>\n 60              <groupId>io.quarkus</groupId>\n 61              <artifactId>quarkus-arc</artifactId>\n 62          </dependency>\n 63  \n 64          <dependency>\n 65              <groupId>jakarta.validation</groupId>\n 66              <artifactId>jakarta.validation-api</artifactId>\n 67              <scope>provided</scope>\n 68          </dependency>\n 69  \n 70          <dependency>\n 71              <groupId>jakarta.annotation</groupId>\n 72              <artifactId>jakarta.annotation-api</artifactId>\n 73              <scope>provided</scope>\n 74          </dependency>\n 75  \n 76          <dependency>\n 77              <groupId>io.quarkus</groupId>\n 78              <artifactId>quarkus-resteasy-reactive</artifactId>\n 79          </dependency>\n 80  \n 81          <dependency>\n 82              <groupId>io.quarkus</groupId>\n 83              <artifactId>quarkus-hibernate-orm</artifactId>\n 84          </dependency>\n 85          <dependency>\n 86              <groupId>io.quarkus</groupId>\n 87              <artifactId>quarkus-jdbc-mysql</artifactId>\n 88          </dependency>\n 89          <dependency>\n 90              <groupId>io.quarkus</groupId>\n 91              <artifactId>quarkus-hibernate-validator</artifactId>\n 92          </dependency>\n 93  \n 94          <dependency>\n 95              <groupId>io.quarkus</groupId>\n 96              <artifactId>quarkus-undertow</artifactId>\n 97          </dependency>\n 98  \n 99          <!-- Now we declare any tools needed -->\n100          <dependency>\n101              <groupId>org.hibernate.orm</groupId>\n102              <artifactId>hibernate-jpamodelgen</artifactId>\n103              <scope>provided</scope>\n104          </dependency>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n        \n        30.0.0.Final\n        \n        ${version.server}\n        4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n            \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n                ${quarkus.platform.version}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n            io.quarkus\n            quarkus-arc\n        \n\n        \n            jakarta.validation\n            jakarta.validation-api\n            provided\n        \n\n        \n            jakarta.annotation\n            jakarta.annotation-api\n            provided\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive\n        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n        \n\n        \n            io.quarkus\n            quarkus-undertow\n        \n\n        \n        \n            org.hibernate.orm\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            3.2.1\n            pom\n            test\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    ${compiler-plugin.version}\n                    \n                        \n                            -parameters\n                        \n                    \n                \n\n\n                \n                    ${quarkus.platform.group-id}\n                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n                    true\n                    \n                        \n                            \n                                build\n                                generate-code\n                                generate-code-tests\n                            \n                        \n                    \n                \n\n                \n                    maven-surefire-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            org.jboss.logmanager.LogManager\n                            ${maven.home}\n                        \n                    \n                \n\n                \n                    maven-failsafe-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            \n                                integration-test\n                                verify\n                            \n                            \n                                \n                                    ${project.build.directory}/${project.build.finalName}-runner\n                                    org.jboss.logmanager.LogManager\n                                    ${maven.home}\n                                \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n            \n                ${quarkus.platform.group-id}\n                quarkus-maven-plugin\n            \n        \n    \n\n    \n        \n            native\n            \n                \n                    native\n                \n            \n            \n                false\n                native\n            \n        \n        \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            kubernetes\n            \n                \n                %g/%a:%l\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!-- the version for the Server --><version.server>30.0.0.Final</version.server><!-- the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!-- Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Use the Maven Surefire plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Use the Maven Surefire plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00050:
      description: Adopt Maven Failsafe plugin
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/monolith/pom.xml
        message: "Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <packaging>jar</packaging>\n  8      <name>ticket-monster</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <properties>\n 12          <!-- Explicitly declaring the source encoding eliminates the following \n 13              message: -->\n 14          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 15              resources, i.e. build is platform dependent! -->\n 16          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 17          <!-- Timestamp format for the maven.build.timestamp property -->\n 18          <!-- You can reference property in pom.xml or filtered resources \n 19              (must enable third-party plugin if using Maven < 2.1) -->\n 20          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 21          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n 22              variable -->\n 23          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n 24          <maven.home>${env.MAVEN_HOME}</maven.home>\n 25          <!-- the version for the Server -->\n 26          <version.server>30.0.0.Final</version.server>\n 27          <!-- the versions for BOMs, Packs and Plugins -->\n 28          <version.bom.ee>${version.server}</version.bom.ee>\n 29          <version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin>\n 30          <version.surefire.plugin>2.10</version.surefire.plugin>\n 31          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n 32          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 33          <docker.image.name>%g/%a:%l</docker.image.name>\n 34  \n 35          <compiler-plugin.version>3.10.1</compiler-plugin.version>\n 36  \n 37          <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n 38          <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n 39          <quarkus.platform.version>3.5.1</quarkus.platform.version>\n 40  \n 41          <surefire-plugin.version>3.0.0</surefire-plugin.version>\n 42  \n 43      </properties>\n 44  \n 45      <dependencyManagement>\n 46          <dependencies>\n 47              <dependency>\n 48                  <groupId>${quarkus.platform.group-id}</groupId>\n 49                  <artifactId>${quarkus.platform.artifact-id}</artifactId>\n 50                  <version>${quarkus.platform.version}</version>\n 51                  <type>pom</type>\n 52                  <scope>import</scope>\n 53              </dependency>\n 54          </dependencies>\n 55      </dependencyManagement>\n 56  \n 57      <dependencies>\n 58  \n 59          <dependency>\n 60              <groupId>io.quarkus</groupId>\n 61              <artifactId>quarkus-arc</artifactId>\n 62          </dependency>\n 63  \n 64          <dependency>\n 65              <groupId>jakarta.validation</groupId>\n 66              <artifactId>jakarta.validation-api</artifactId>\n 67              <scope>provided</scope>\n 68          </dependency>\n 69  \n 70          <dependency>\n 71              <groupId>jakarta.annotation</groupId>\n 72              <artifactId>jakarta.annotation-api</artifactId>\n 73              <scope>provided</scope>\n 74          </dependency>\n 75  \n 76          <dependency>\n 77              <groupId>io.quarkus</groupId>\n 78              <artifactId>quarkus-resteasy-reactive</artifactId>\n 79          </dependency>\n 80  \n 81          <dependency>\n 82              <groupId>io.quarkus</groupId>\n 83              <artifactId>quarkus-hibernate-orm</artifactId>\n 84          </dependency>\n 85          <dependency>\n 86              <groupId>io.quarkus</groupId>\n 87              <artifactId>quarkus-jdbc-mysql</artifactId>\n 88          </dependency>\n 89          <dependency>\n 90              <groupId>io.quarkus</groupId>\n 91              <artifactId>quarkus-hibernate-validator</artifactId>\n 92          </dependency>\n 93  \n 94          <dependency>\n 95              <groupId>io.quarkus</groupId>\n 96              <artifactId>quarkus-undertow</artifactId>\n 97          </dependency>\n 98  \n 99          <!-- Now we declare any tools needed -->\n100          <dependency>\n101              <groupId>org.hibernate.orm</groupId>\n102              <artifactId>hibernate-jpamodelgen</artifactId>\n103              <scope>provided</scope>\n104          </dependency>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n        \n        30.0.0.Final\n        \n        ${version.server}\n        4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n            \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n                ${quarkus.platform.version}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n            io.quarkus\n            quarkus-arc\n        \n\n        \n            jakarta.validation\n            jakarta.validation-api\n            provided\n        \n\n        \n            jakarta.annotation\n            jakarta.annotation-api\n            provided\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive\n        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n        \n\n        \n            io.quarkus\n            quarkus-undertow\n        \n\n        \n        \n            org.hibernate.orm\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            3.2.1\n            pom\n            test\n        \n\n        \n            io.quarkus\n            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    ${compiler-plugin.version}\n                    \n                        \n                            -parameters\n                        \n                    \n                \n\n\n                \n                    ${quarkus.platform.group-id}\n                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n                    true\n                    \n                        \n                            \n                                build\n                                generate-code\n                                generate-code-tests\n                            \n                        \n                    \n                \n\n                \n                    maven-surefire-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            org.jboss.logmanager.LogManager\n                            ${maven.home}\n                        \n                    \n                \n\n                \n                    maven-failsafe-plugin\n                    ${surefire-plugin.version}\n                    \n                        \n                            \n                                integration-test\n                                verify\n                            \n                            \n                                \n                                    ${project.build.directory}/${project.build.finalName}-runner\n                                    org.jboss.logmanager.LogManager\n                                    ${maven.home}\n                                \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n            \n                ${quarkus.platform.group-id}\n                quarkus-maven-plugin\n            \n        \n    \n\n    \n        \n            native\n            \n                \n                    native\n                \n            \n            \n                false\n                native\n            \n        \n        \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            kubernetes\n            \n                \n                %g/%a:%l\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!-- the version for the Server --><version.server>30.0.0.Final</version.server><!-- the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!-- Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Use the Maven Failsafe plugin adding the following sections to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00060:
      description: Add Maven profile to run the Quarkus native build
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Leverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n <quarkus.package.type>native</quarkus.package.type>\n </properties>\n </profile>\n </profiles>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v1</artifactId>\n  6      <version>1.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n    1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n    \n\n    \n        \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n        \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n            provided\n        \n\n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster backend</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Leverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n <quarkus.package.type>native</quarkus.package.type>\n </properties>\n </profile>\n </profiles>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>backend-v2</artifactId>\n  6      <version>2.0</version>\n  7      <packaging>war</packaging>\n  8      <name>ticket-monster backend v2</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <!-- Activate JBoss Product Maven repository.\n 12  \n 13          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 14          and is only done here to make it easier to use the quickstarts.\n 15  \n 16          For more information about how to configure Maven for your application,\n 17          see the section entitled 'Use the Maven Repository'\n 18          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 19  \n 20          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 21      -->\n 22      <repositories>\n 23          <repository>\n 24              <id>redhat-ga-repository</id>\n 25              <url>https://maven.repository.redhat.com/ga/</url>\n 26              <releases>\n 27                  <enabled>true</enabled>\n 28              </releases>\n 29              <snapshots>\n 30                  <enabled>false</enabled>\n 31              </snapshots>\n 32          </repository>\n 33          <repository>\n 34              <id>jboss-ga-repository</id>\n 35              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 36              <releases>\n 37                  <enabled>true</enabled>\n 38              </releases>\n 39              <snapshots>\n 40                  <enabled>false</enabled>\n 41              </snapshots>\n 42          </repository>\n 43          <repository>\n 44              <id>jboss-earlyaccess-repository</id>\n 45              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 46              <releases>\n 47                  <enabled>true</enabled>\n 48              </releases>\n 49              <snapshots>\n 50                  <enabled>false</enabled>\n 51              </snapshots>\n 52          </repository>\n 53          <repository>\n 54              <id>redhat.ea</id>\n 55              <name>Red Hat Early Access Repository</name>\n 56              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 57              <snapshots>\n 58                  <enabled>false</enabled>\n 59              </snapshots>\n 60              <releases>\n 61                  <enabled>true</enabled>\n 62              </releases>\n 63          </repository>\n 64      </repositories>\n 65  \n 66      <pluginRepositories>\n 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n    2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n        \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n        1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n        \n            \n                org.jboss.arquillian\n                arquillian-bom\n                ${version.org.jboss.arquillian}\n                pom\n                import\n            \n            \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n                pom\n                import\n            \n\n        \n    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n            cdi-api\n            provided\n        \n        \n        \n            javax.inject\n            javax.inject\n            provided\n        \n        \n        \n            javax.validation\n            validation-api\n            provided\n        \n       \n        \n        \n            org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n            hibernate-jpa-2.1-api\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n            jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n            provided\n        \n\n        \n            org.ff4j\n            ff4j-core\n            ${ffj4.version}\n        \n        \n            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n        \n\n        \n        \n        \n        \n            org.hibernate\n            hibernate-validator\n            provided\n            \n                \n                    org.slf4j\n                    slf4j-api\n                \n            \n        \n\n\n        \n\n        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n            provided\n        \n\n        \n        \n            junit\n            junit\n            test\n        \n\n        \n        \n            io.specto\n            hoverfly-java\n            0.8.0\n            test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n            arquillian-junit-container\n            test\n        \n\n        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n            shrinkwrap-resolver-depchain\n            pom\n            test\n        \n\n        \n        \n            org.jboss.resteasy\n            resteasy-jackson2-provider\n            provided\n            \n                \n                    jackson-annotations\n                    com.fasterxml.jackson.core\n                \n                \n                    jackson-core\n                    com.fasterxml.jackson.core\n                \n            \n        \n        \n            org.jboss.resteasy\n            resteasy-client\n            provided\n        \n\n\n        \n        \n        \n        \n            org.arquillian.algeron\n            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n            test\n        \n        \n            au.com.dius\n            pact-jvm-consumer_2.11\n            3.5.0\n            test\n        \n\n        \n        \n    \n\n    \n        \n        ROOT\n        \n\n            \n                \n                \n                    maven-compiler-plugin\n                    2.3.1\n                    \n                        1.8\n                        1.8\n                    \n                \n                \n                    maven-war-plugin\n                    2.1.1\n                    \n                    \tfalse\n                        \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n                            \n                        \n                    \n                \n\n                \n                \n                \n                    org.wildfly.plugins\n                    wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n                \n            \n        \n    \n\n    \n        \n            \n            \n            default\n            \n                true\n            \n            \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n\n        \n            \n            arq-wildfly\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n                    test\n                \n            \n            \n                \n                    \n                        org.apache.maven.plugins\n                        maven-dependency-plugin\n                        2.8\n                        \n                            \n                                unpack\n                                process-test-classes\n                                \n                                    unpack\n                                \n                                \n                                    \n                                        \n                                            org.wildfly\n                                            wildfly-dist\n                                            10.1.0.Final\n                                            zip\n                                            false\n                                            \n                                            target/wildfly-run\n                                        \n                                    \n                                \n                            \n                        \n                    \n                    \n                        org.apache.maven.plugins\n                        maven-surefire-plugin\n                        2.17\n                        \n                            \n                            \n                            1\n                            1\n                            \n                            \n                                org.jboss.logmanager.LogManager\n                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n                                \n                                \n                            \n                            false\n                        \n                    \n                \n            \n        \n\n        \n            \n            \n            \n            arq-wildfly-managed\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n                    test\n                \n            \n        \n\n        \n            \n            \n            arq-wildfly-remote\n            \n                \n                    org.wildfly.arquillian\n                    wildfly-arquillian-container-remote\n                    test\n                \n            \n        \n\n\n        \n            mysql\n            \n                ceposta/%a-mysql:%l\n            \n            \n                \n                    \n                        src/main/resources-mysql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n                \n                    \n                        \n                            io.fabric8\n                            fabric8-maven-plugin\n                            ${fabric8.maven.plugin.version}\n                            \n                                \n                                    \n                                        resource\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                        ${docker.image.name}\n                                        \n                                            jboss/wildfly:10.1.0.Final\n                                            \n                                                8080\n                                            \n                                            \n                                                \n                                                    \n                                                        \n                                                            \n                                                                ${project.groupId}:${project.artifactId}\n                                                            \n                                                            standalone/deployments/ROOT.war\n                                                        \n                                                    \n                                                    \n                                                        \n                                                            src/main/wf-standalone\n                                                            \n                                                                standalone.xml\n                                                            \n                                                            standalone/configuration\n                                                        \n                                                        \n                                                            src/main/wf-standalone/module\n                                                            \n                                                                module.xml\n                                                                mysql-connector-java-5.1.38.jar\n                                                            \n                                                            modules/org/mysql/main\n                                                        \n                                                    \n                                                \n                                                jboss:jboss:jboss\n                                                /opt/jboss/wildfly/\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            postgresql\n            \n                \n                    \n                        src/main/resources-postgresql\n                    \n                    \n                        src/main/resources\n                        \n                            **/*\n                        \n                        \n                            META-INF/*\n                        \n                    \n                \n                \n                    \n                        maven-surefire-plugin\n                        ${version.surefire.plugin}\n                        \n                            true\n                        \n                    \n                \n            \n        \n        \n            openshift\n            \n                \n                docker\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            kubernetes\n            \n                \n                ${docker.image.name}\n            \n            \n                \n                    \n                        io.fabric8\n                        fabric8-maven-plugin\n                        \n                            \n                                \n                                    resource\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n            openshift-no-fmp\n            \n                \n                    \n                        maven-war-plugin\n                        \n                            ${project.build.directory}/openshift/deployments\n                            ROOT.war\n                        \n                    \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster backend v2</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\n        NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n        and is only done here to make it easier to use the quickstarts.\n\n        For more information about how to configure Maven for your application,\n        see the section entitled 'Use the Maven Repository'\n        in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!-- Explicitly declaring the source encoding eliminates the following \n            message: --><!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n            resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!-- Timestamp format for the maven.build.timestamp property --><!-- You can reference property in pom.xml or filtered resources \n            (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n            variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!-- First declare the APIs we depend on and need for compilation. \n            All of them are provided by JBoss EAP --><!-- Import the CDI API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!-- Import the Common Annotations API (JSR-250), we use provided \n            scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the JAX-RS API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!-- Import the JPA API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!-- Import the EJB API, we use provided scope as the API is included \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!-- Import the Servlet API, we use provided scope as the API is \n            included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!-- JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!-- Now we declare any tools needed --><!-- Annotation processor to generate the JPA 2.0 metamodel classes \n            for typesafe criteria queries --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!-- Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!-- For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!-- Optional, but highly recommended --><!-- Arquillian allows you to test enterprise code such as EJBs and \n            Transactional(JTA) JPA from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n            fine tuning the content of the JSON responses --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!-- Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!-- https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n            <version>3.5.0</version>\n            <scope>test</scope>\n        </dependency>--></dependencies><build><!-- Maven will append the version to the finalName (which is the\n       name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!-- Compiler plugin enforces Java 1.8 compatibility and activates\n              annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!-- The WildFly plugin deploys your war to a local JBoss EAP container --><!-- To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!-- The default profile skips all tests, though you can tune \n                it to run just unit tests based on a custom pattern --><!-- Seperate profiles are provided for running all tests, including \n                Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!-- Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!-- putting under this subdir because this is where wildfly:run puts its dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!-- Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!-- the maven dependency plugin will have already downloaded the server on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in your JBoss EAP instance --><!-- This profile will start a new JBoss EAP instance, and execute\n                the test, shutting it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!-- An optional Arquillian testing profile that executes tests \n                in a remote JBoss EAP instance --><!-- Run with: mvn clean test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!-- we need this for now because fmp doesn't support straight binary s2i builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!-- todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030 --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n             We can stage the build if using binary s2i without the f-m-p.. but really? why\n             would you want to do that? f-m-p does the binary s2i for you without all this extra\n             hoop-jumping\n             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: "Leverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n <quarkus.package.type>native</quarkus.package.type>\n </properties>\n </profile>\n </profiles>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>"
        lineNumber: 5
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n    monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n  \n\n  \n    \n      \n        \n        org.springframework.boot\n        spring-boot-dependencies\n        ${spring-boot.version}\n        pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n    \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n      test\n    \n    \n      io.rest-assured\n      json-schema-validator\n      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n      0.8.0\n      test\n    \n    \n      org.springframework.boot\n      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      \n      \n        maven-compiler-plugin\n        2.3.1\n        \n          1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n      default\n      \n        true\n      \n      \n        \n          com.h2database\n          h2\n        \n      \n    \n    \n      mysql\n      \n        mysql\n        false\n      \n      \n        \n          mysql\n          mysql-connector-java\n          5.1.44\n        \n      \n      \n        \n          \n            org.springframework.boot\n            spring-boot-maven-plugin\n            \n              \n                \n                  repackage\n                \n              \n            \n            \n              \n                mysql\n              \n            \n          \n          \n            io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n            \n              \n                \n                  tm-orders/mysql-test-database\n                  \n                    \n                      admin\n                      ticketmonster\n                      ${mysql.user}\n                      ${mysql.password}\n                    \n                    \n                      ${mysql.port}:3306\n                    \n                    \n                      mysql\n                      true\n                      yellow\n                    \n                    \n                      MySQL init process done. Ready for start up.\n                      ${mysql.init.timeout}\n                    \n                  \n                  \n                    mysql/mysql-server:${mysql-server.version}\n                    \n                      \n                        \n                          \n                            ${project.basedir}/scripts\n                            docker-entrypoint-initdb.d\n                          \n                        \n                      \n                      /\n                    \n                  \n                \n              \n            \n            \n              \n                start\n                pre-integration-test\n                \n                  build\n                  start\n                \n              \n              \n                stop\n                post-integration-test\n                \n                  stop\n                \n              \n            \n          \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n            \n              ${skipITs}\n              true\n              \n                \n                ${mysql.port}\n                ${mysql.user}\n                ${mysql.password}\n                ${spring.profiles.active}\n              \n            \n            \n              \n                integration-test\n                \n                  integration-test\n                \n              \n              \n                verify\n                \n                  verify\n                \n              \n            \n          \n        \n      \n    \n    \n      skip-integration-tests\n      \n        false\n        \n          skipITs\n          true\n        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n      \n        ${docker.image.name}\n      \n      \n        \n          \n            io.fabric8\n            fabric8-maven-plugin\n            ${fabric8.maven.plugin.version}\n            \n              \n                \n                  resource\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!-- Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!-- Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!-- Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      - uri: file:///opt/input/source/pom.xml
        message: "Leverage a Maven profile to run the Quarkus native build adding the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n <quarkus.package.type>native</quarkus.package.type>\n </properties>\n </profile>\n </profiles>\n ```"
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster-parent</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <modules>\n  8          <module>monolith</module>\n  9          <module>backend-v1</module>\n 10          <module>backend-v2</module>\n 11          <module>orders-service</module>\n 12      </modules>\n 13      <packaging>pom</packaging>\n 14      <name>Ticket Monster Parent</name>\n 15      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 16  \n 17      <!-- Activate JBoss Product Maven repository.\n 18  \n 19          NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure\n 20          and is only done here to make it easier to use the quickstarts.\n 21  \n 22          For more information about how to configure Maven for your application,\n 23          see the section entitled 'Use the Maven Repository'\n 24          in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:\n 25  \n 26          https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n 27      -->\n 28      <repositories>\n 29          <repository>\n 30              <id>redhat-ga-repository</id>\n 31              <url>https://maven.repository.redhat.com/ga/</url>\n 32              <releases>\n 33                  <enabled>true</enabled>\n 34              </releases>\n 35              <snapshots>\n 36                  <enabled>false</enabled>\n 37              </snapshots>\n 38          </repository>\n 39          <repository>\n 40              <id>jboss-ga-repository</id>\n 41              <url>http://maven.repository.redhat.com/techpreview/all</url>\n 42              <releases>\n 43                  <enabled>true</enabled>\n 44              </releases>\n 45              <snapshots>\n 46                  <enabled>false</enabled>\n 47              </snapshots>\n 48          </repository>\n 49          <repository>\n 50              <id>jboss-earlyaccess-repository</id>\n 51              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 52              <releases>\n 53                  <enabled>true</enabled>\n 54              </releases>\n 55              <snapshots>\n 56                  <enabled>false</enabled>\n 57              </snapshots>\n 58          </repository>\n 59          <repository>\n 60              <id>redhat.ea</id>\n 61              <name>Red Hat Early Access Repository</name>\n 62              <url>https://maven.repository.redhat.com/earlyaccess/all</url>\n 63              <snapshots>\n 64                  <enabled>false</enabled>\n 65              </snapshots>\n 66              <releases>\n 67                  <enabled>true</enabled>\n 68              </releases>\n 69          </repository>\n 70      </repositories>\n 71  \n 72      <pluginRepositories>\n 73          <pluginRepository>\n 74              <id>redhat-ga-repository</id>\n 75              <url>https://maven.repository.redhat.com/ga/</url>\n 76              <releases>\n 77                  <enabled>true</enabled>\n 78              </releases>\n 79              <snapshots>\n 80                  <enabled>false</enabled>\n 81              </snapshots>\n 82          </pluginRepository>\n 83          <pluginRepository>\n 84              <id>jboss-earlyaccess-plugin-repository</id>\n 85              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 86              <releases>\n 87                  <enabled>true</enabled>\n 88              </releases>\n 89              <snapshots>\n 90                  <enabled>false</enabled>\n 91              </snapshots>\n 92          </pluginRepository>\n 93      </pluginRepositories>\n 94  \n 95      <build>\n 96          <plugins>\n 97              <plugin>\n 98                  <artifactId>maven-compiler-plugin</artifactId>\n 99                  <version>2.3.1</version>\n100                  <configuration>\n101                      <source>1.8</source>\n102                      <target>1.8</target>\n103                  </configuration>\n104              </plugin>"
        lineNumber: 3
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n        backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-ga-repository\n            http://maven.repository.redhat.com/techpreview/all\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            redhat.ea\n            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n            \n                false\n            \n            \n                true\n            \n        \n    \n\n    \n        \n            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n            \n                true\n            \n            \n                false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n            http://maven.repository.redhat.com/earlyaccess/all/\n            \n                true\n            \n            \n                false\n            \n        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n                2.3.1\n                \n                    1.8\n                    1.8\n                \n            \n        \n    \n\n"
          matchingXML: |-
            <modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket Monster Parent</name><description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.

                    NOTE: Configuring the Maven repository in the pom.xml file is not a recommended procedure
                    and is only done here to make it easier to use the quickstarts.

                    For more information about how to configure Maven for your application,
                    see the section entitled 'Use the Maven Repository'
                    in the Development Guide for Red Hat JBoss Enterprise Application Platform located here:

                    https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/
                --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven;
        title: Quarkus - Guide;
      effort: 1
    javaee-pom-to-quarkus-00070:
      description: Configure Quarkus hibernate-orm
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/pom.xml
        message: "Configure Quarkus 'hibernate-orm` and jakarta persistence. \n Add the `quarkus-hibernate-orm` section and one for your preferred jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!-- Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!-- JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```"
        codeSnip: " 67          <pluginRepository>\n 68              <id>redhat-ga-repository</id>\n 69              <url>https://maven.repository.redhat.com/ga/</url>\n 70              <releases>\n 71                  <enabled>true</enabled>\n 72              </releases>\n 73              <snapshots>\n 74                  <enabled>false</enabled>\n 75              </snapshots>\n 76          </pluginRepository>\n 77          <pluginRepository>\n 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108      </properties>\n109  \n110      <dependencyManagement>\n111          <dependencies>\n112              <dependency>\n113                  <groupId>org.jboss.bom</groupId>\n114                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n115                  <version>${version.jboss.bom.eap}</version>\n116                  <type>pom</type>\n117                  <scope>import</scope>\n118              </dependency>\n119          </dependencies>\n120      </dependencyManagement>\n121  \n122      <dependencies>\n123  \n124          <!-- First declare the APIs we depend on and need for compilation. \n125              All of them are provided by JBoss EAP -->\n126  \n127          <!-- Import the CDI API, we use provided scope as the API is included \n128              in JBoss EAP -->\n129          <dependency>\n130              <groupId>javax.enterprise</groupId>\n131              <artifactId>cdi-api</artifactId>\n132              <scope>provided</scope>\n133          </dependency>\n134          \n135          <dependency>\n136              <groupId>javax.inject</groupId>\n137              <artifactId>javax.inject</artifactId>\n138              <scope>provided</scope>\n139          </dependency>\n140          \n141          <dependency>\n142              <groupId>javax.validation</groupId>\n143              <artifactId>validation-api</artifactId>\n144              <scope>provided</scope>\n145          </dependency>\n146         \n147          <!-- Import the Common Annotations API (JSR-250), we use provided \n148              scope as the API is included in JBoss EAP -->\n149          <dependency>\n150              <groupId>org.jboss.spec.javax.annotation</groupId>\n151              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n152              <scope>provided</scope>\n153          </dependency>\n154  \n155          <!-- Import the JAX-RS API, we use provided scope as the API is included \n156              in JBoss EAP -->\n157          <dependency>\n158              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n159              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n160              <scope>provided</scope>\n161          </dependency>\n162  \n163          <!-- Import the JPA API, we use provided scope as the API is included \n164              in JBoss EAP -->\n165          <dependency>\n166              <groupId>org.hibernate.javax.persistence</groupId>\n167              <artifactId>hibernate-jpa-2.1-api</artifactId>\n168              <scope>provided</scope>\n169          </dependency>\n170  \n171          <!-- Import the EJB API, we use provided scope as the API is included \n172              in JBoss EAP -->\n173          <dependency>\n174              <groupId>org.jboss.spec.javax.ejb</groupId>\n175              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n176              <scope>provided</scope>\n177          </dependency>\n178  \n179          <!-- Import the Servlet API, we use provided scope as the API is \n180              included in JBoss EAP -->\n181          <dependency>\n182              <groupId>org.jboss.spec.javax.servlet</groupId>\n183              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n184              <scope>provided</scope>\n185          </dependency>\n186  \n187          <!-- JSR-303 (Bean Validation) Implementation -->\n188          <!-- Provides portable constraints such as @Email -->\n189          <!-- Hibernate Validator is shipped in JBoss EAP -->\n190          <dependency>\n191              <groupId>org.hibernate</groupId>\n192              <artifactId>hibernate-validator</artifactId>\n193              <scope>provided</scope>\n194              <exclusions>\n195                  <exclusion>\n196                      <groupId>org.slf4j</groupId>\n197                      <artifactId>slf4j-api</artifactId>\n198                  </exclusion>\n199              </exclusions>\n200          </dependency>\n201  \n202  \n203          <!-- Now we declare any tools needed -->\n204  \n205          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n206              for typesafe criteria queries -->\n207          <dependency>\n208              <groupId>org.hibernate</groupId>\n209              <artifactId>hibernate-jpamodelgen</artifactId>\n210              <scope>provided</scope>\n211          </dependency>\n212  \n213          <!-- Needed for running tests (you may also use TestNG) -->\n214          <dependency>\n215              <groupId>junit</groupId>\n216              <artifactId>junit</artifactId>\n217              <scope>test</scope>\n218          </dependency>\n219  \n220          <!-- Optional, but highly recommended -->\n221          <!-- Arquillian allows you to test enterprise code such as EJBs and \n222              Transactional(JTA) JPA from JUnit/TestNG -->\n223          <dependency>\n224              <groupId>org.jboss.arquillian.junit</groupId>\n225              <artifactId>arquillian-junit-container</artifactId>\n226              <scope>test</scope>\n227          </dependency>\n228  \n229          <dependency>\n230              <groupId>org.jboss.arquillian.protocol</groupId>\n231              <artifactId>arquillian-protocol-servlet</artifactId>\n232              <scope>test</scope>\n233          </dependency>\n234          \n235          <dependency>\n236              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n237              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n238              <type>pom</type>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n243              fine tuning the content of the JSON responses -->\n244          <dependency>\n245              <groupId>org.jboss.resteasy</groupId>\n246              <artifactId>resteasy-jackson2-provider</artifactId>\n247              <scope>provided</scope>\n248          </dependency>\n249          <dependency>\n250              <groupId>org.jboss.resteasy</groupId>\n251              <artifactId>resteasy-jaxrs</artifactId>\n252              <scope>provided</scope>\n253          </dependency>\n254  \n255      </dependencies>\n256  \n257      <build>\n258          <!-- Maven will append the version to the finalName (which is the\n259         name given to the generated war, and hence the context root) -->\n260          <finalName>ROOT</finalName>\n261          <pluginManagement>\n262  \n263              <plugins>\n264                  <!-- Compiler plugin enforces Java 1.8 compatibility and activates\n265                annotation processors -->\n266                  <plugin>\n267                      <artifactId>maven-compiler-plugin</artifactId>"
        lineNumber: 166
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
      - uri: file:///opt/input/source/backend-v2/pom.xml
        message: "Configure Quarkus 'hibernate-orm` and jakarta persistence. \n Add the `quarkus-hibernate-orm` section and one for your preferred jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!-- Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!-- JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```"
        codeSnip: " 78              <id>jboss-earlyaccess-plugin-repository</id>\n 79              <url>http://maven.repository.redhat.com/earlyaccess/all/</url>\n 80              <releases>\n 81                  <enabled>true</enabled>\n 82              </releases>\n 83              <snapshots>\n 84                  <enabled>false</enabled>\n 85              </snapshots>\n 86          </pluginRepository>\n 87      </pluginRepositories>\n 88  \n 89      <properties>\n 90          <!-- Explicitly declaring the source encoding eliminates the following \n 91              message: -->\n 92          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 93              resources, i.e. build is platform dependent! -->\n 94          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 95          <!-- Timestamp format for the maven.build.timestamp property -->\n 96          <!-- You can reference property in pom.xml or filtered resources \n 97              (must enable third-party plugin if using Maven < 2.1) -->\n 98          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 99          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n100              variable -->\n101          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n102          <version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap>\n103          <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>\n104          <version.surefire.plugin>2.10</version.surefire.plugin>\n105          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n106          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n107          <docker.image.name>ceposta/%a:%l</docker.image.name>\n108          <ffj4.version>1.6.5</ffj4.version>\n109          <version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian>\n110          <version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container>\n111      </properties>\n112  \n113      <dependencyManagement>\n114          <dependencies>\n115              <dependency>\n116                  <groupId>org.jboss.arquillian</groupId>\n117                  <artifactId>arquillian-bom</artifactId>\n118                  <version>${version.org.jboss.arquillian}</version>\n119                  <type>pom</type>\n120                  <scope>import</scope>\n121              </dependency>\n122              <dependency>\n123                  <groupId>org.jboss.bom</groupId>\n124                  <artifactId>jboss-eap-javaee7-with-tools</artifactId>\n125                  <version>${version.jboss.bom.eap}</version>\n126                  <type>pom</type>\n127                  <scope>import</scope>\n128              </dependency>\n129  \n130          </dependencies>\n131      </dependencyManagement>\n132  \n133      <dependencies>\n134  \n135          <!-- First declare the APIs we depend on and need for compilation. \n136              All of them are provided by JBoss EAP -->\n137  \n138          <!-- Import the CDI API, we use provided scope as the API is included \n139              in JBoss EAP -->\n140          <dependency>\n141              <groupId>javax.enterprise</groupId>\n142              <artifactId>cdi-api</artifactId>\n143              <scope>provided</scope>\n144          </dependency>\n145          \n146          <dependency>\n147              <groupId>javax.inject</groupId>\n148              <artifactId>javax.inject</artifactId>\n149              <scope>provided</scope>\n150          </dependency>\n151          \n152          <dependency>\n153              <groupId>javax.validation</groupId>\n154              <artifactId>validation-api</artifactId>\n155              <scope>provided</scope>\n156          </dependency>\n157         \n158          <!-- Import the Common Annotations API (JSR-250), we use provided \n159              scope as the API is included in JBoss EAP -->\n160          <dependency>\n161              <groupId>org.jboss.spec.javax.annotation</groupId>\n162              <artifactId>jboss-annotations-api_1.2_spec</artifactId>\n163              <scope>provided</scope>\n164          </dependency>\n165  \n166          <!-- Import the JAX-RS API, we use provided scope as the API is included \n167              in JBoss EAP -->\n168          <dependency>\n169              <groupId>org.jboss.spec.javax.ws.rs</groupId>\n170              <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>\n171              <scope>provided</scope>\n172          </dependency>\n173  \n174          <!-- Import the JPA API, we use provided scope as the API is included \n175              in JBoss EAP -->\n176          <dependency>\n177              <groupId>org.hibernate.javax.persistence</groupId>\n178              <artifactId>hibernate-jpa-2.1-api</artifactId>\n179              <scope>provided</scope>\n180          </dependency>\n181  \n182          <!-- Import the EJB API, we use provided scope as the API is included \n183              in JBoss EAP -->\n184          <dependency>\n185              <groupId>org.jboss.spec.javax.ejb</groupId>\n186              <artifactId>jboss-ejb-api_3.2_spec</artifactId>\n187              <scope>provided</scope>\n188          </dependency>\n189  \n190          <!-- Import the Servlet API, we use provided scope as the API is \n191              included in JBoss EAP -->\n192          <dependency>\n193              <groupId>org.jboss.spec.javax.servlet</groupId>\n194              <artifactId>jboss-servlet-api_3.1_spec</artifactId>\n195              <scope>provided</scope>\n196          </dependency>\n197  \n198          <dependency>\n199              <groupId>org.ff4j</groupId>\n200              <artifactId>ff4j-core</artifactId>\n201              <version>${ffj4.version}</version>\n202          </dependency>\n203          <dependency>\n204              <groupId>org.ff4j</groupId>\n205              <artifactId>ff4j-web</artifactId>\n206              <version>${ffj4.version}</version>\n207          </dependency>\n208  \n209          <!-- JSR-303 (Bean Validation) Implementation -->\n210          <!-- Provides portable constraints such as @Email -->\n211          <!-- Hibernate Validator is shipped in JBoss EAP -->\n212          <dependency>\n213              <groupId>org.hibernate</groupId>\n214              <artifactId>hibernate-validator</artifactId>\n215              <scope>provided</scope>\n216              <exclusions>\n217                  <exclusion>\n218                      <groupId>org.slf4j</groupId>\n219                      <artifactId>slf4j-api</artifactId>\n220                  </exclusion>\n221              </exclusions>\n222          </dependency>\n223  \n224  \n225          <!-- Now we declare any tools needed -->\n226  \n227          <!-- Annotation processor to generate the JPA 2.0 metamodel classes \n228              for typesafe criteria queries -->\n229          <dependency>\n230              <groupId>org.hibernate</groupId>\n231              <artifactId>hibernate-jpamodelgen</artifactId>\n232              <scope>provided</scope>\n233          </dependency>\n234  \n235          <!-- Needed for running tests (you may also use TestNG) -->\n236          <dependency>\n237              <groupId>junit</groupId>\n238              <artifactId>junit</artifactId>\n239              <scope>test</scope>\n240          </dependency>\n241  \n242          <!-- For service virtualization/mocking-->\n243          <dependency>\n244              <groupId>io.specto</groupId>\n245              <artifactId>hoverfly-java</artifactId>\n246              <version>0.8.0</version>\n247              <scope>test</scope>\n248          </dependency>\n249  \n250          <!-- Optional, but highly recommended -->\n251          <!-- Arquillian allows you to test enterprise code such as EJBs and \n252              Transactional(JTA) JPA from JUnit/TestNG -->\n253          <dependency>\n254              <groupId>org.jboss.arquillian.junit</groupId>\n255              <artifactId>arquillian-junit-container</artifactId>\n256              <scope>test</scope>\n257          </dependency>\n258  \n259          <dependency>\n260              <groupId>org.jboss.arquillian.protocol</groupId>\n261              <artifactId>arquillian-protocol-servlet</artifactId>\n262              <scope>test</scope>\n263          </dependency>\n264          \n265          <dependency>\n266              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n267              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n268              <type>pom</type>\n269              <scope>test</scope>\n270          </dependency>\n271  \n272          <!-- RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs, which we use for\n273              fine tuning the content of the JSON responses -->\n274          <dependency>\n275              <groupId>org.jboss.resteasy</groupId>\n276              <artifactId>resteasy-jackson2-provider</artifactId>\n277              <scope>provided</scope>\n278              <exclusions>"
        lineNumber: 177
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
      - uri: file:///opt/input/source/monolith/pom.xml
        message: "Configure Quarkus 'hibernate-orm` and jakarta persistence. \n Add the `quarkus-hibernate-orm` section and one for your preferred jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!-- Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!-- JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```"
        codeSnip: "  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  3      <modelVersion>4.0.0</modelVersion>\n  4      <groupId>org.jboss.examples.eap</groupId>\n  5      <artifactId>ticket-monster</artifactId>\n  6      <version>3.0.0-SNAPSHOT</version>\n  7      <packaging>jar</packaging>\n  8      <name>ticket-monster</name>\n  9      <description>A starter HTML5 + REST webapp project for use on JBoss EAP.</description>\n 10  \n 11      <properties>\n 12          <!-- Explicitly declaring the source encoding eliminates the following \n 13              message: -->\n 14          <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered \n 15              resources, i.e. build is platform dependent! -->\n 16          <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 17          <!-- Timestamp format for the maven.build.timestamp property -->\n 18          <!-- You can reference property in pom.xml or filtered resources \n 19              (must enable third-party plugin if using Maven < 2.1) -->\n 20          <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>\n 21          <!-- Specify the JBoss EAP directory to be the JBOSS_HOME environment\n 22              variable -->\n 23          <jboss.home>${env.JBOSS_HOME}</jboss.home>\n 24          <maven.home>${env.MAVEN_HOME}</maven.home>\n 25          <!-- the version for the Server -->\n 26          <version.server>30.0.0.Final</version.server>\n 27          <!-- the versions for BOMs, Packs and Plugins -->\n 28          <version.bom.ee>${version.server}</version.bom.ee>\n 29          <version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin>\n 30          <version.surefire.plugin>2.10</version.surefire.plugin>\n 31          <buildhelper.plugin.version>1.7</buildhelper.plugin.version>\n 32          <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 33          <docker.image.name>%g/%a:%l</docker.image.name>\n 34  \n 35          <compiler-plugin.version>3.10.1</compiler-plugin.version>\n 36  \n 37          <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\n 38          <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\n 39          <quarkus.platform.version>3.5.1</quarkus.platform.version>\n 40  \n 41          <surefire-plugin.version>3.0.0</surefire-plugin.version>\n 42  \n 43      </properties>\n 44  \n 45      <dependencyManagement>\n 46          <dependencies>\n 47              <dependency>\n 48                  <groupId>${quarkus.platform.group-id}</groupId>\n 49                  <artifactId>${quarkus.platform.artifact-id}</artifactId>\n 50                  <version>${quarkus.platform.version}</version>\n 51                  <type>pom</type>\n 52                  <scope>import</scope>\n 53              </dependency>\n 54          </dependencies>\n 55      </dependencyManagement>\n 56  \n 57      <dependencies>\n 58  \n 59          <dependency>\n 60              <groupId>io.quarkus</groupId>\n 61              <artifactId>quarkus-arc</artifactId>\n 62          </dependency>\n 63  \n 64          <dependency>\n 65              <groupId>jakarta.validation</groupId>\n 66              <artifactId>jakarta.validation-api</artifactId>\n 67              <scope>provided</scope>\n 68          </dependency>\n 69  \n 70          <dependency>\n 71              <groupId>jakarta.annotation</groupId>\n 72              <artifactId>jakarta.annotation-api</artifactId>\n 73              <scope>provided</scope>\n 74          </dependency>\n 75  \n 76          <dependency>\n 77              <groupId>io.quarkus</groupId>\n 78              <artifactId>quarkus-resteasy-reactive</artifactId>\n 79          </dependency>\n 80  \n 81          <dependency>\n 82              <groupId>io.quarkus</groupId>\n 83              <artifactId>quarkus-hibernate-orm</artifactId>\n 84          </dependency>\n 85          <dependency>\n 86              <groupId>io.quarkus</groupId>\n 87              <artifactId>quarkus-jdbc-mysql</artifactId>\n 88          </dependency>\n 89          <dependency>\n 90              <groupId>io.quarkus</groupId>\n 91              <artifactId>quarkus-hibernate-validator</artifactId>\n 92          </dependency>\n 93  \n 94          <dependency>\n 95              <groupId>io.quarkus</groupId>\n 96              <artifactId>quarkus-undertow</artifactId>\n 97          </dependency>\n 98  \n 99          <!-- Now we declare any tools needed -->\n100          <dependency>\n101              <groupId>org.hibernate.orm</groupId>\n102              <artifactId>hibernate-jpamodelgen</artifactId>\n103              <scope>provided</scope>\n104          </dependency>\n105  \n106          <!-- Needed for running tests (you may also use TestNG) -->\n107          <dependency>\n108              <groupId>io.quarkus</groupId>\n109              <artifactId>quarkus-junit5</artifactId>\n110          </dependency>\n111  \n112          <dependency>\n113              <groupId>org.jboss.shrinkwrap.resolver</groupId>\n114              <artifactId>shrinkwrap-resolver-depchain</artifactId>\n115              <version>3.2.1</version>\n116              <type>pom</type>\n117              <scope>test</scope>\n118          </dependency>\n119  \n120          <dependency>\n121              <groupId>io.quarkus</groupId>\n122              <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n123          </dependency>\n124  \n125      </dependencies>\n126  \n127      <build>\n128          <!-- Maven will append the version to the finalName (which is the\n129         name given to the generated war, and hence the context root) -->\n130          <finalName>${project.artifactId}</finalName>\n131          <pluginManagement>\n132  \n133              <plugins>\n134                  <!-- Compiler plugin enforces Java 1.8 compatibility and activates\n135                annotation processors -->\n136                  <plugin>\n137                      <artifactId>maven-compiler-plugin</artifactId>\n138                      <version>${compiler-plugin.version}</version>\n139                      <configuration>\n140                          <compilerArgs>\n141                              <arg>-parameters</arg>\n142                          </compilerArgs>\n143                      </configuration>\n144                  </plugin>\n145  \n146  \n147                  <plugin>\n148                      <groupId>${quarkus.platform.group-id}</groupId>\n149                      <artifactId>quarkus-maven-plugin</artifactId>\n150                      <version>${quarkus.platform.version}</version>\n151                      <extensions>true</extensions>\n152                      <executions>\n153                          <execution>\n154                              <goals>\n155                                  <goal>build</goal>\n156                                  <goal>generate-code</goal>\n157                                  <goal>generate-code-tests</goal>\n158                              </goals>\n159                          </execution>\n160                      </executions>\n161                  </plugin>\n162  \n163                  <plugin>\n164                      <artifactId>maven-surefire-plugin</artifactId>\n165                      <version>${surefire-plugin.version}</version>\n166                      <configuration>\n167                          <systemPropertyVariables>\n168                              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n169                              <maven.home>${maven.home}</maven.home>\n170                          </systemPropertyVariables>\n171                      </configuration>\n172                  </plugin>\n173  \n174                  <plugin>\n175                      <artifactId>maven-failsafe-plugin</artifactId>\n176                      <version>${surefire-plugin.version}</version>\n177                      <executions>\n178                          <execution>\n179                              <goals>\n180                                  <goal>integration-test</goal>\n181                                  <goal>verify</goal>\n182                              </goals>\n183                              <configuration>\n184                                  <systemPropertyVariables>\n185                                      <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n186                                      <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n187                                      <maven.home>${maven.home}</maven.home>\n188                                  </systemPropertyVariables>\n189                              </configuration>\n190                          </execution>\n191                      </executions>\n192                  </plugin>\n193  \n194              </plugins>\n195          </pluginManagement>\n196  \n197          <plugins>\n198              <plugin>\n199                  <groupId>${quarkus.platform.group-id}</groupId>\n200                  <artifactId>quarkus-maven-plugin</artifactId>\n201              </plugin>\n202          </plugins>"
        lineNumber: 101
        variables:
          data: groupId
          innerText: org.hibernate.orm
          matchingXML: org.hibernate.orm
      links:
      - url: https://quarkus.io/guides/hibernate-orm
        title: Using hibernate-orm and jakarta persistence
      effort: 1
    javaee-pom-to-quarkus-00080:
      description: Use Quarkus junit artifact
      category: mandatory
      labels:
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: "Use Quarkus junit artifact: \n\n ```\n <!-- Quarkus junit specific dependency -->\n <dependency>\n <groupId>io.quarkus</groupId>\n <artifactId>quarkus-junit5</artifactId>\n <scope>test</scope>\n </dependency>\n ```"
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: junit.junit
          version: "4.11"
      links:
      - url: https://quarkus.io/guides/getting-started-testing
        title: Quarkus - Testing your application
      - url: https://access.redhat.com/documentation/en-us/red_hat_build_of_quarkus/1.3/html/getting_started_with_quarkus/proc-quarkus-junit-testing_quarkus-getting-started
        title: Testing your Quarkus application with JUnit
      effort: 1
    persistence-to-quarkus-00000:
      description: Move persistence config to a properties file
      category: optional
      labels:
      - konveyor.io/source=jakarta-ee
      - konveyor.io/source=java-ee
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/src/main/webapp/WEB-INF/ticket-monster-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/src/test/resources/test-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v1/target/test-classes/test-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/main/webapp/WEB-INF/ticket-monster-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/src/test/resources/test-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/backend-v2/target/test-classes/test-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/monolith/src/main/resources/META-INF/resources/WEB-INF/ticket-monster-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      - uri: file:///opt/input/source/monolith/target/classes/META-INF/resources/WEB-INF/ticket-monster-ds.xml
        message: "It is recommended to move persistence related configuration from an XML file to a properties one.\n This allows centralization of the configuration in Quarkus. Check the link for more information.\n \n \n Datasource and persistence configurations in XML can be substituted with a single centralized properties file. Here is an example of a translation:\n \n The following datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\">\n <!-- The datasource is bound into JNDI at this location. We reference\n this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n </security>\n </datasource>\n </datasources>\n ```\n along with the following persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource for tests, so as to not overwrite\n production data. This is an unmanaged data source, backed by H2, an in memory\n database. Production applications should use a managed datasource. -->\n <!-- The datasource is deployed as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
      links:
      - url: https://quarkus.io/guides/hibernate-orm#persistence-xml
        title: Using Hibernate ORM and Jakarta persistence
      effort: 1
    springboot-actuator-to-quarkus-0100:
      description: Replace the Spring Boot Actuator dependency with Quarkus Smallrye Health extension
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: "Replace the Spring Boot Actuator dependency with Quarkus Smallrye Health extension. \n It has to be replaced by `io.quarkus:quarkus-smallrye-health` artifact."
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.boot.spring-boot-starter-actuator
          version: 1.5.6.RELEASE
      links:
      - url: https://quarkus.io/guides/smallrye-health
        title: Quarkus - Smallrye Health
      effort: 5
    springboot-di-to-quarkus-00000:
      description: Replace the SpringBoot Dependency Injection artifact with Quarkus 'spring-di' extension
      category: potential
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: |-
          Replace the SpringBoot Dependency Injection artifact with Quarkus `spring-di` extension

           Spring DI is in spring-beans artifact brought transitively by any `org.springframework.boot:spring-boot-*` dependency
           Add Quarkus dependency `io.quarkus:quarkus-spring-di`
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.spring-beans
          version: 4.3.10.RELEASE
      links:
      - url: https://quarkus.io/guides/spring-di
        title: Quarkus DI Guide
      effort: 1
    springboot-jpa-to-quarkus-00000:
      description: Replace the SpringBoot Data JPA artifact with Quarkus 'spring-data-jpa' extension
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: "Replace the SpringBoot JPA artifact with Quarkus `spring-data-jpa` extension\n\n Spring Data JPA is in spring-data-jpa artifact brought transitively by any `org.springframework.data:spring-data-*` dependency \n Add Quarkus dependency `io.quarkus:quarkus-spring-data-jpa`"
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.data.spring-data-jpa
          version: 1.11.6.RELEASE
      links:
      - url: https://quarkus.io/guides/spring-data-jpa
        title: Quarkus JPA Guide
      effort: 1
    springboot-plugins-to-quarkus-0000:
      description: Replace the spring-boot-maven-plugin dependency
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/orders-service/pom.xml
        message: |-
          Replace the `spring-boot-maven-plugin` dependency.
           The `spring-boot-maven-plugin` dependency needs to be replaced with `quarkus-maven-plugin`, so that the application is built with Quarkus, both for running on the JVM and in native mode.
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  3           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  4           xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  5    <artifactId>orders-service</artifactId>\n  6    <groupId>org.ticketmonster.orders</groupId>\n  7    <version>1.0.0-SNAPSHOT</version>\n  8    <modelVersion>4.0.0</modelVersion>\n  9  \n 10    <properties>\n 11      <spring-boot.version>1.5.6.RELEASE</spring-boot.version>\n 12      <docker-maven-plugin.version>0.20.1</docker-maven-plugin.version>\n 13      <mysql-server.version>5.7</mysql-server.version>\n 14      <mysql.user>ticket</mysql.user>\n 15      <mysql.password>monster</mysql.password>\n 16      <mysql.port>3306</mysql.port>\n 17      <mysql.init.timeout>60000</mysql.init.timeout>\n 18      <skipITs>true</skipITs>\n 19      <fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version>\n 20      <docker.image.name>ceposta/%a:%l</docker.image.name>\n 21    </properties>\n 22  \n 23    <dependencyManagement>\n 24      <dependencies>\n 25        <dependency>\n 26          <!-- Import dependency management from Spring Boot -->\n 27          <groupId>org.springframework.boot</groupId>\n 28          <artifactId>spring-boot-dependencies</artifactId>\n 29          <version>${spring-boot.version}</version>\n 30          <type>pom</type>\n 31          <scope>import</scope>\n 32        </dependency>\n 33      </dependencies>\n 34    </dependencyManagement>\n 35  \n 36  \n 37    <dependencies>\n 38      <dependency>\n 39        <groupId>org.springframework.boot</groupId>\n 40        <artifactId>spring-boot-starter-web</artifactId>\n 41      </dependency>\n 42      <dependency>\n 43        <groupId>org.springframework.boot</groupId>\n 44        <artifactId>spring-boot-starter-actuator</artifactId>\n 45      </dependency>\n 46      <dependency>\n 47        <groupId>org.springframework.boot</groupId>\n 48        <artifactId>spring-boot-starter-data-jpa</artifactId>\n 49      </dependency>\n 50      <dependency>\n 51        <groupId>org.teiid.spring</groupId>\n 52        <artifactId>teiid-spring-boot-starter</artifactId>\n 53        <version>1.0.0-SNAPSHOT</version>\n 54      </dependency>\n 55  \n 56  \n 57  \n 58      <!-- Testing -->\n 59      <dependency>\n 60        <groupId>io.rest-assured</groupId>\n 61        <artifactId>rest-assured</artifactId>\n 62        <version>3.0.3</version>\n 63        <scope>test</scope>\n 64      </dependency>\n 65      <dependency>\n 66        <groupId>io.rest-assured</groupId>\n 67        <artifactId>json-schema-validator</artifactId>\n 68        <version>3.0.3</version>\n 69        <scope>test</scope>\n 70      </dependency>\n 71      <dependency>\n 72        <groupId>io.specto</groupId>\n 73        <artifactId>hoverfly-java</artifactId>\n 74        <version>0.8.0</version>\n 75        <scope>test</scope>\n 76      </dependency>\n 77      <dependency>\n 78        <groupId>org.springframework.boot</groupId>\n 79        <artifactId>spring-boot-starter-test</artifactId>\n 80        <scope>test</scope>\n 81      </dependency>\n 82      <dependency>\n 83        <groupId>com.h2database</groupId>\n 84        <artifactId>h2</artifactId>\n 85        <scope>test</scope>\n 86      </dependency>\n 87  \n 88      <dependency>\n 89        <groupId>au.com.dius</groupId>\n 90        <artifactId>pact-jvm-provider-junit_2.11</artifactId>\n 91        <version>3.5.0</version>\n 92      </dependency>\n 93    </dependencies>\n 94  \n 95    <build>\n 96      <plugins>\n 97        <plugin>\n 98          <groupId>org.springframework.boot</groupId>\n 99          <artifactId>spring-boot-maven-plugin</artifactId>\n100          <version>${spring-boot.version}</version>\n101          <executions>\n102            <execution>\n103              <goals>\n104                <goal>repackage</goal>\n105              </goals>\n106            </execution>\n107          </executions>\n108          <configuration>\n109            <classifier>exec</classifier>\n110          </configuration>\n111        </plugin>\n112        <plugin>\n113          <artifactId>maven-compiler-plugin</artifactId>\n114          <version>2.3.1</version>\n115          <configuration>\n116            <source>1.8</source>\n117            <target>1.8</target>\n118          </configuration>\n119        </plugin>\n120      </plugins>\n121    </build>\n122  \n123    <profiles>\n124      <profile>\n125        <id>default</id>\n126        <activation>\n127          <activeByDefault>true</activeByDefault>\n128        </activation>\n129        <dependencies>\n130          <dependency>\n131            <groupId>com.h2database</groupId>\n132            <artifactId>h2</artifactId>\n133          </dependency>\n134        </dependencies>\n135      </profile>\n136      <profile>\n137        <id>mysql</id>\n138        <properties>\n139          <spring.profiles.active>mysql</spring.profiles.active>\n140          <skipITs>false</skipITs>\n141        </properties>\n142        <dependencies>\n143          <dependency>\n144            <groupId>mysql</groupId>\n145            <artifactId>mysql-connector-java</artifactId>\n146            <version>5.1.44</version>\n147          </dependency>\n148        </dependencies>\n149        <build>\n150          <plugins>\n151            <plugin>\n152              <groupId>org.springframework.boot</groupId>\n153              <artifactId>spring-boot-maven-plugin</artifactId>\n154              <executions>\n155                <execution>\n156                  <goals>\n157                    <goal>repackage</goal>\n158                  </goals>\n159                </execution>\n160              </executions>\n161              <configuration>\n162                <profiles>\n163                  <profile>mysql</profile>\n164                </profiles>\n165              </configuration>\n166            </plugin>\n167            <plugin>\n168              <groupId>io.fabric8</groupId>\n169              <artifactId>docker-maven-plugin</artifactId>\n170              <version>${docker-maven-plugin.version}</version>\n171              <configuration>\n172                <images>\n173                  <image>\n174                    <name>tm-orders/mysql-test-database</name>\n175                    <run>\n176                      <env>\n177                        <MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD>\n178                        <MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE>\n179                        <MYSQL_USER>${mysql.user}</MYSQL_USER>\n180                        <MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD>\n181                      </env>\n182                      <ports>\n183                        <port>${mysql.port}:3306</port>\n184                      </ports>\n185                      <log>\n186                        <prefix>mysql</prefix>\n187                        <enabled>true</enabled>\n188                        <color>yellow</color>\n189                      </log>\n190                      <wait>\n191                        <log>MySQL init process done. Ready for start up.</log>\n192                        <time>${mysql.init.timeout}</time>\n193                      </wait>\n194                    </run>\n195                    <build>\n196                      <from>mysql/mysql-server:${mysql-server.version}</from>\n197                      <assembly>\n198                        <inline>"
        lineNumber: 97
        variables:
          data: plugin
          innerText: "\n        org.springframework.boot\n        spring-boot-maven-plugin\n        ${spring-boot.version}\n        \n          \n            \n              repackage\n            \n          \n        \n        \n          exec\n        \n      "
          matchingXML: <groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration>
      links:
      - url: https://quarkus.io/guides/maven-tooling#build-tool-maven
        title: Building Quarkus with maven
      effort: 1
    springboot-properties-to-quarkus-00000:
      description: Replace the SpringBoot artifact with Quarkus 'spring-boot-properties' extension
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: |-
          Replace the SpringBoot artifact with Quarkus `spring-boot-properties` extension

           Spring Configuration Properties is in spring-boot artifact brought transitively by any `org.springframework.boot:spring-boot-*` dependency
           Add Quarkus dependency `io.quarkus:quarkus-spring-boot-properties`
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.boot.spring-boot
          version: 1.5.6.RELEASE
      links:
      - url: https://quarkus.io/guides/spring-boot-properties
        title: Quarkus Spring Configuration Properties Guide
      effort: 1
    springboot-properties-to-quarkus-00002:
      description: Replace Spring datasource property key/value pairs with Quarkus properties
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: |-
          Spring datasource property key/value pairs have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus datasource properties.
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      links:
      - url: https://quarkus.io/guides/datasource
        title: Quarkus Datasources Guide
      effort: 1
    springboot-properties-to-quarkus-00003:
      description: Replace Spring log level property with Quarkus property
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/resources/application.properties
        message: |-
          Spring log level property configuration have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus log level properties.
        codeSnip: "  1  spring.jpa.hibernate.ddl-auto=none\n  2  spring.teiid.model.package=org.ticketmonster.orders.domain\n  3  \n  4  management.security.enabled=false\n  5  server.port=8080\n  6  \n  7  #logging.level.org.springframework=DEBUG\n  8  logging.level.org.teiid.spring=DEBUG\n"
        lineNumber: 7
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/src/test/resources/application.properties
        message: |-
          Spring log level property configuration have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus log level properties.
        codeSnip: "  1  spring.teiid.model.package=org.ticketmonster.orders.domain\n  2  endpoints.mappings.sensitive=false\n  3  #logging.level.org.springframework=DEBUG\n  4  logging.level.org.teiid.spring=DEBUG\n  5  \n  6  spring.jpa.hibernate.ddl-auto=none\n"
        lineNumber: 3
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/target/classes/application.properties
        message: |-
          Spring log level property configuration have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus log level properties.
        codeSnip: "  1  spring.jpa.hibernate.ddl-auto=none\n  2  spring.teiid.model.package=org.ticketmonster.orders.domain\n  3  \n  4  management.security.enabled=false\n  5  server.port=8080\n  6  \n  7  #logging.level.org.springframework=DEBUG\n  8  logging.level.org.teiid.spring=DEBUG\n"
        lineNumber: 7
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/target/test-classes/application.properties
        message: |-
          Spring log level property configuration have been detected in the application property file.

           View advice in the Quarkus datasource guide to convert these to Quarkus log level properties.
        codeSnip: "  1  spring.teiid.model.package=org.ticketmonster.orders.domain\n  2  endpoints.mappings.sensitive=false\n  3  #logging.level.org.springframework=DEBUG\n  4  logging.level.org.teiid.spring=DEBUG\n  5  \n  6  spring.jpa.hibernate.ddl-auto=none\n"
        lineNumber: 3
        variables:
          matchingText: logging.level.org.springframework
      links:
      - url: https://quarkus.io/guides/logging#runtime-configuration
        title: Quarkus Configuring Logging Guide
      effort: 1
    springboot-web-to-quarkus-00000:
      description: Replace the Spring Web artifact with Quarkus 'spring-web' extension
      category: mandatory
      labels:
      - konveyor.io/source=springboot
      - konveyor.io/target=quarkus
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: "Replace the Spring Web artifact with Quarkus `spring-web` extension\n\n Spring Web is a spring-web artifact brought transitively by any `org.springframework:spring-web*` dependency \n Add Quarkus dependency `io.quarkus:quarkus-spring-web` \n \n Starting with Quarkus version 2.5, the underlying JAX-RS engine must be chosen. For performance reasons,\n the `quarkus-resteasy-reactive-jackson` dependency should be used."
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.spring-web
          version: 4.3.10.RELEASE
      links:
      - url: https://github.com/quarkusio/quarkus/wiki/Migration-Guide-2.5#spring-web
        title: Quarkus Migration Guide 2.5
      - url: https://quarkus.io/guides/spring-web
        title: Quarkus Spring Web Guide
      effort: 1
  errors:
    cdi-to-quarkus-00040: connection to the language server is closed, language server is not running
    ee-to-quarkus-00000: connection to the language server is closed, language server is not running
    ee-to-quarkus-00010: connection to the language server is closed, language server is not running
    ee-to-quarkus-00020: connection to the language server is closed, language server is not running
    jakarta-cdi-to-quarkus-00040: connection to the language server is closed, language server is not running
    jakarta-cdi-to-quarkus-00050: connection to the language server is closed, language server is not running
    jakarta-jaxrs-to-quarkus-00020: connection to the language server is closed, language server is not running
    jaxrs-to-quarkus-00020: connection to the language server is closed, language server is not running
    jms-to-reactive-quarkus-00010: connection to the language server is closed, language server is not running
    jms-to-reactive-quarkus-00020: connection to the language server is closed, language server is not running
    jms-to-reactive-quarkus-00030: connection to the language server is closed, language server is not running
    jms-to-reactive-quarkus-00040: connection to the language server is closed, language server is not running
    jms-to-reactive-quarkus-00050: connection to the language server is closed, language server is not running
    persistence-to-quarkus-00011: connection to the language server is closed, language server is not running
    remote-ejb-to-quarkus-00000: connection to the language server is closed, language server is not running
    springboot-annotations-to-quarkus-00000: connection to the language server is closed, language server is not running
    springboot-di-to-quarkus-00002: connection to the language server is closed, language server is not running
    springboot-integration-to-quarkus-00020: connection to the language server is closed, language server is not running
    springboot-jmx-to-quarkus-00001: connection to the language server is closed, language server is not running
    springboot-scheduled-to-quarkus-00000: connection to the language server is closed, language server is not running
    springboot-webmvc-to-quarkus-00000: connection to the language server is closed, language server is not running
  unmatched:
  - jakarta-cdi-to-quarkus-00000
  - jakarta-cdi-to-quarkus-00020
  - jakarta-faces-to-quarkus-00000
  - jakarta-faces-to-quarkus-00010
  - javaee-faces-to-quarkus-00000
  - jaxrs-to-quarkus-00000
  - jaxrs-to-quarkus-00010
  - jms-to-reactive-quarkus-00000
  - springboot-actuator-to-quarkus-0200
  - springboot-cache-to-quarkus-00000
  - springboot-cloud-config-client-to-quarkus-00000
  - springboot-devtools-to-quarkus-0000
  - springboot-di-to-quarkus-00001
  - springboot-generic-catchall-00100
  - springboot-integration-to-quarkus-00010
  - springboot-jmx-to-quarkus-00000
  - springboot-metrics-to-quarkus-0100
  - springboot-metrics-to-quarkus-0200
  - springboot-metrics-to-quarkus-0300
  - springboot-parent-pom-to-quarkus-00000
  - springboot-properties-to-quarkus-00001
  - springboot-properties-to-quarkus-00004
  - springboot-properties-to-quarkus-00005
  - springboot-properties-to-quarkus-00006
  - springboot-security-to-quarkus-00000
  - springboot-shell-to-quarkus-00000
  - springboot-web-to-quarkus-00010
  - springboot-webmvc-to-quarkus-01000
- name: rhr/springboot
  description: Verify the version of the Spring Boot framework is compatible with those supported by Red Hat Runtimes
  skipped:
  - springboot-associated-00001
  - springboot-associated-00002
  - springboot-associated-00003
  - springboot-associated-00004
  - springboot-associated-00005
  - springboot-associated-00006
  - springboot-associated-00007
  - springboot-associated-00008
  - springboot-associated-00009
  - springboot-associated-00010
  - springboot-associated-00011
  - springboot-associated-00012
  - springboot-associated-00013
  - springboot-associated-00014
  - springboot-associated-00015
  - springboot-rhr-00001
  - springboot-rhr-00002
- name: technology-usage
  description: This ruleset provides analysis of logging libraries.
  tags:
  - Application Properties File
  - Application properties file detected
  - Bean Validation
  - Bean=EJB XML
  - CDI
  - Configuration Management=Application Properties File
  - Configuration Management=Spring Boot Auto-configuration
  - Configuration Management=Spring Boot Component Scan
  - Configuration Management=Spring Boot Configuration
  - Configuration Management=Spring Properties
  - Connect=EJB XML
  - Connect=RMI
  - Connect=Servlet
  - Database Driver=MySQL Driver
  - EJB Timer
  - Embedded MySQL Driver
  - Embedded Spring Data JPA
  - Embedded framework - Spring DI
  - Embedded framework - Spring MVC
  - Embedded framework - Spring Web
  - Embedded library - Spring Boot Actuator
  - Embedded=Application Properties File
  - Embedded=MySQL Driver
  - Embedded=Properties
  - Embedded=Spring Boot Auto-configuration
  - Embedded=Spring Boot Component Scan
  - Embedded=Spring Boot Configuration
  - Embedded=Spring DI
  - Embedded=Spring Data JPA
  - Embedded=Spring Properties
  - Embedded=Spring Web
  - Execute=CDI
  - Execute=EJB Timer
  - Execute=Spring DI
  - HTTP=Servlet
  - Inversion of Control=CDI
  - Inversion of Control=Spring DI
  - Java EE=Bean Validation
  - Java EE=CDI
  - Java EE=EJB Timer
  - Java EE=EJB XML
  - Java EE=JPA XML
  - Java EE=JPA entities
  - Java EE=JPA named queries
  - Java EE=Persistence units
  - Java EE=RMI
  - Java EE=Servlet
  - Java Servlet
  - MySQL Driver
  - Other=Properties
  - Other=RMI
  - Persistence=JPA XML
  - Persistence=JPA entities
  - Persistence=JPA named queries
  - Persistence=Persistence units
  - Persistence=Spring Data JPA
  - Processing=EJB Timer
  - Servlet
  - Spring Boot Actuator
  - Spring Boot Auto-configuration
  - Spring Boot Component Scan
  - Spring Boot Configuration
  - Spring DI
  - Spring Data JPA
  - Spring MVC
  - Spring Properties
  - Spring Web
  - Spring configuration properties annotation detected
  - Spring datasource properties detected
  - Spring logging properties detected
  - Store=Bean Validation
  - Store=JPA XML
  - Store=JPA entities
  - Store=JPA named queries
  - Store=MySQL Driver
  - Store=Persistence units
  - Store=Spring Data JPA
  - Sustain=Application Properties File
  - Sustain=Properties
  - Sustain=Spring Boot Auto-configuration
  - Sustain=Spring Boot Component Scan
  - Sustain=Spring Boot Configuration
  - Sustain=Spring Properties
  - Validation=Bean Validation
  - View=Spring Web
  - Web=Spring Web
  insights:
    3rd-party-spring-03001:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Spring Boot Auto-configuration
      - tag=Spring Boot Component Scan
      - tag=Spring Boot Configuration
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/Application.java
        message: ""
        codeSnip: "16   */\n17  package org.ticketmonster.orders;\n18  \n19  import org.springframework.boot.SpringApplication;\n20  import org.springframework.boot.autoconfigure.SpringBootApplication;\n21  \n22  /**\n23   * Created by ceposta \n24   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n25   */\n26  @SpringBootApplication\n27  public class Application {\n28  \n29      public static void main(String[] args) {\n30          SpringApplication.run(Application.class, args);\n31      }\n32  \n33      // enable h2 UI\n34  //    @Bean\n35  //    ServletRegistrationBean h2servletRegistration(){\n36  //        ServletRegistrationBean registrationBean = new ServletRegistrationBean( new WebServlet());"
        lineNumber: 26
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/Application.java
          kind: Class
          name: SpringBootApplication
          package: org.ticketmonster.orders
    configuration-management-0200:
      description: Application properties file detected
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Application Properties File
      - tag=Application properties file detected
      incidents:
      - uri: file:///opt/input/source/monolith/src/main/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/src/test/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/target/classes/application.properties
        message: ""
      - uri: file:///opt/input/source/monolith/target/test-classes/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/main/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/src/test/resources/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/classes/application.properties
        message: ""
      - uri: file:///opt/input/source/orders-service/target/test-classes/application.properties
        message: ""
    configuration-management-0300:
      description: Spring datasource properties detected
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Spring Properties
      - tag=Spring datasource properties detected
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/src/main/resources/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-kube.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://mysql-backend:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://mysql-orders:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 1
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 2
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 3
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 4
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 6
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 7
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 8
        variables:
          matchingText: spring.datasource
      - uri: file:///opt/input/source/orders-service/target/classes/application-mysql.properties
        message: ""
        codeSnip: "  1  spring.datasource.legacyDS.url=jdbc:mysql://localhost:3306/ticketmonster?useSSL=false\n  2  spring.datasource.legacyDS.username=ticket\n  3  spring.datasource.legacyDS.password=monster\n  4  spring.datasource.legacyDS.driverClassName=com.mysql.jdbc.Driver\n  5  \n  6  spring.datasource.ordersDS.url=jdbc:mysql://localhost:3306/orders?useSSL=false\n  7  spring.datasource.ordersDS.username=ticket\n  8  spring.datasource.ordersDS.password=monster\n  9  spring.datasource.ordersDS.driverClassName=com.mysql.jdbc.Driver\n 10  \n 11  spring.jpa.hibernate.ddl-auto=none\n 12  spring.jpa.properties.hibernate.dialect=org.teiid.dialect.TeiidDialect\n 13  #spring.jpa.database-platform=org.teiid.dialect.TeiidDialect\n 14  \n 15  \n 16  spring.teiid.model.package=org.ticketmonster.orders.domain\n"
        lineNumber: 9
        variables:
          matchingText: spring.datasource
    configuration-management-0400:
      description: Spring logging properties detected
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Spring Properties
      - tag=Spring logging properties detected
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/resources/application.properties
        message: ""
        codeSnip: "  1  spring.jpa.hibernate.ddl-auto=none\n  2  spring.teiid.model.package=org.ticketmonster.orders.domain\n  3  \n  4  management.security.enabled=false\n  5  server.port=8080\n  6  \n  7  #logging.level.org.springframework=DEBUG\n  8  logging.level.org.teiid.spring=DEBUG\n"
        lineNumber: 7
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/src/test/resources/application.properties
        message: ""
        codeSnip: "  1  spring.teiid.model.package=org.ticketmonster.orders.domain\n  2  endpoints.mappings.sensitive=false\n  3  #logging.level.org.springframework=DEBUG\n  4  logging.level.org.teiid.spring=DEBUG\n  5  \n  6  spring.jpa.hibernate.ddl-auto=none\n"
        lineNumber: 3
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/target/classes/application.properties
        message: ""
        codeSnip: "  1  spring.jpa.hibernate.ddl-auto=none\n  2  spring.teiid.model.package=org.ticketmonster.orders.domain\n  3  \n  4  management.security.enabled=false\n  5  server.port=8080\n  6  \n  7  #logging.level.org.springframework=DEBUG\n  8  logging.level.org.teiid.spring=DEBUG\n"
        lineNumber: 7
        variables:
          matchingText: logging.level.org.springframework
      - uri: file:///opt/input/source/orders-service/target/test-classes/application.properties
        message: ""
        codeSnip: "  1  spring.teiid.model.package=org.ticketmonster.orders.domain\n  2  endpoints.mappings.sensitive=false\n  3  #logging.level.org.springframework=DEBUG\n  4  logging.level.org.teiid.spring=DEBUG\n  5  \n  6  spring.jpa.hibernate.ddl-auto=none\n"
        lineNumber: 3
        variables:
          matchingText: logging.level.org.springframework
    configuration-management-0500:
      description: Spring configuration properties annotation detected
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Spring Properties
      - tag=Spring configuration properties annotation detected
      incidents:
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/config/TeiidDataSources.java
        message: ""
        codeSnip: "24  import org.springframework.context.annotation.Configuration;\n25  import org.springframework.context.annotation.Profile;\n26  import org.springframework.jdbc.core.JdbcTemplate;\n27  \n28  import javax.sql.DataSource;\n29  \n30  @Configuration\n31  @Profile({\"mysql\", \"kube\"})\n32  public class TeiidDataSources {\n33  \n34      @ConfigurationProperties(prefix = \"spring.datasource.legacyDS\")\n35      @Bean\n36      public DataSource legacyDS() {\n37          return DataSourceBuilder.create().build();\n38      }\n39      \n40      @ConfigurationProperties(prefix = \"spring.datasource.ordersDS\")\n41      @Bean\n42      public DataSource ordersDS() {\n43          return DataSourceBuilder.create().build();\n44      }"
        lineNumber: 34
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/config/TeiidDataSources.java
          kind: Method
          name: ConfigurationProperties
          package: org.ticketmonster.orders.config
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/config/TeiidDataSources.java
        message: ""
        codeSnip: "30  @Configuration\n31  @Profile({\"mysql\", \"kube\"})\n32  public class TeiidDataSources {\n33  \n34      @ConfigurationProperties(prefix = \"spring.datasource.legacyDS\")\n35      @Bean\n36      public DataSource legacyDS() {\n37          return DataSourceBuilder.create().build();\n38      }\n39      \n40      @ConfigurationProperties(prefix = \"spring.datasource.ordersDS\")\n41      @Bean\n42      public DataSource ordersDS() {\n43          return DataSourceBuilder.create().build();\n44      }\n45  \n46      @Bean\n47      @Autowired\n48      public JdbcTemplate teiidJdbcTemplate(@Qualifier(\"dataSource\") DataSource dataSource) {\n49          JdbcTemplate tc = new JdbcTemplate(dataSource);\n50          return tc;"
        lineNumber: 40
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/config/TeiidDataSources.java
          kind: Method
          name: ConfigurationProperties
          package: org.ticketmonster.orders.config
    configuration-management-technology-usage-0200:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Configuration Management=Application Properties File
      - tag=Embedded=Application Properties File
      - tag=Sustain=Application Properties File
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Application Properties File
    configuration-management-technology-usage-0300:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Configuration Management=Spring Properties
      - tag=Embedded=Spring Properties
      - tag=Sustain=Spring Properties
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Properties
    database-01500:
      description: Embedded MySQL Driver
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded MySQL Driver
      - tag=MySQL Driver
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/wf-standalone/module/mysql-connector-java-5.1.38.jar
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/wf-standalone/module/mysql-connector-java-5.1.38.jar
        message: ""
      - uri: file:///opt/input/source/monolith/src/main/wf-standalone/module/mysql-connector-java-5.1.38.jar
        message: ""
    database-03000:
      description: Embedded Spring Data JPA
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded Spring Data JPA
      - tag=Spring Data JPA
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.data.spring-data-jpa
          version: 1.11.6.RELEASE
    ejb-01000:
      description: EJB Timer
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=EJB Timer
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 3  import java.util.ArrayList;\n 4  import java.util.Collection;\n 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;"
        lineNumber: 13
        variables:
          classes: Timeout
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timeout
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 4  import java.util.Collection;\n 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;"
        lineNumber: 14
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;"
        lineNumber: 15
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerConfig
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;\n26  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;"
        lineNumber: 16
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "44      @Inject \n45      private ShowService showService;\n46      \n47      @Inject\n48      private BookingService bookingService;\n49      \n50      @Inject @BotMessage\n51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {"
        lineNumber: 54
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Field
          name: timerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "46      \n47      @Inject\n48      private BookingService bookingService;\n49      \n50      @Inject @BotMessage\n51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")"
        lineNumber: 56
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      "
        lineNumber: 61
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Constructor
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random"
        lineNumber: 64
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: stop
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random\n75          Show show = selectAtRandom(showService.getAll(new MultivaluedHashMap<String, String>()));\n76  \n77          // Select a performance at random\n78          Performance performance = selectAtRandom(show.getPerformances());\n79          \n80          String requestor = selectAtRandom(BOOKERS);\n81  \n82          BookingRequest bookingRequest = new BookingRequest(performance, requestor);"
        lineNumber: 72
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random\n75          Show show = selectAtRandom(showService.getAll(new MultivaluedHashMap<String, String>()));\n76  \n77          // Select a performance at random\n78          Performance performance = selectAtRandom(show.getPerformances());\n79          \n80          String requestor = selectAtRandom(BOOKERS);\n81  \n82          BookingRequest bookingRequest = new BookingRequest(performance, requestor);\n83  "
        lineNumber: 73
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import javax.ws.rs.core.MultivaluedHashMap;\n13  import javax.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n18  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;"
        lineNumber: 8
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: "38      @Inject\n39      private BookingService bookingService;\n40  \n41      @Inject\n42      private Logger logger;\n43  \n44      @Inject\n45      @BotMessage\n46      private Event<String> event;\n47  \n48      private Timer timer;\n49  \n50      public BotService() {\n51          log = new CircularBuffer<String>(MAX_LOG_SIZE);\n52      }\n53  \n54      public void start() {\n55          synchronized (bot) {\n56              if (timer == null) {\n57                  logger.info(\"Starting bot\");\n58                  timer = bot.start();"
        lineNumber: 48
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Field
          name: timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 3  import java.util.ArrayList;\n 4  import java.util.Collection;\n 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;"
        lineNumber: 13
        variables:
          classes: Timeout
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timeout
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 4  import java.util.Collection;\n 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;"
        lineNumber: 14
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 5  import java.util.Date;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;"
        lineNumber: 15
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerConfig
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;\n26  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;"
        lineNumber: 16
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "44      @Inject \n45      private ShowService showService;\n46      \n47      @Inject\n48      private BookingService bookingService;\n49      \n50      @Inject @BotMessage\n51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {"
        lineNumber: 54
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Field
          name: timerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "46      \n47      @Inject\n48      private BookingService bookingService;\n49      \n50      @Inject @BotMessage\n51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")"
        lineNumber: 56
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "51      Event<String> event;\n52      \n53      @Resource\n54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      "
        lineNumber: 61
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Constructor
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "54      private TimerService timerService;\n55      \n56      public Timer start() {\n57          String startMessage = new StringBuilder(\"==========================\\n\")\n58                  .append(\"Bot started at \").append(new Date().toString()).append(\"\\n\")\n59                  .toString();\n60          event.fire(startMessage);\n61          return timerService.createIntervalTimer(0, DURATION, new TimerConfig(null, false));\n62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random"
        lineNumber: 64
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: stop
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "62      }\n63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random\n75          Show show = selectAtRandom(showService.getAll(new MultivaluedHashMap<String, String>()));\n76  \n77          // Select a performance at random\n78          Performance performance = selectAtRandom(show.getPerformances());\n79          \n80          String requestor = selectAtRandom(BOOKERS);\n81  \n82          BookingRequest bookingRequest = new BookingRequest(performance, requestor);"
        lineNumber: 72
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "63      \n64      public void stop(Timer timer) {\n65          String stopMessage = new StringBuilder(\"==========================\\n\")\n66                  .append(\"Bot stopped at \").append(new Date().toString()).append(\"\\n\")\n67                  .toString();\n68          event.fire(stopMessage);\n69          timer.cancel();\n70      }\n71      \n72      @Timeout\n73      public void book(Timer timer) {\n74          // Select a show at random\n75          Show show = selectAtRandom(showService.getAll(new MultivaluedHashMap<String, String>()));\n76  \n77          // Select a performance at random\n78          Performance performance = selectAtRandom(show.getPerformances());\n79          \n80          String requestor = selectAtRandom(BOOKERS);\n81  \n82          BookingRequest bookingRequest = new BookingRequest(performance, requestor);\n83  "
        lineNumber: 73
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import javax.ws.rs.core.MultivaluedHashMap;\n13  import javax.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n18  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;"
        lineNumber: 8
        variables:
          classes: Timer
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: "38      @Inject\n39      private BookingService bookingService;\n40  \n41      @Inject\n42      private Logger logger;\n43  \n44      @Inject\n45      @BotMessage\n46      private Event<String> event;\n47  \n48      private Timer timer;\n49  \n50      public BotService() {\n51          log = new CircularBuffer<String>(MAX_LOG_SIZE);\n52      }\n53  \n54      public void start() {\n55          synchronized (bot) {\n56              if (timer == null) {\n57                  logger.info(\"Starting bot\");\n58                  timer = bot.start();"
        lineNumber: 48
        variables:
          classes: ""
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Field
          name: timer
          package: org.jboss.examples.ticketmonster.service
    embedded-framework-08200:
      description: Embedded framework - Spring DI
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring DI
      - tag=Spring DI
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.spring-beans
          version: 4.3.10.RELEASE
    embedded-framework-08400:
      description: Embedded framework - Spring Web
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring Web
      - tag=Spring Web
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.spring-web
          version: 4.3.10.RELEASE
    javaee-technology-usage-00020-jakarta:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=CDI
      incidents:
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.inject.Inject;\n 4  import jakarta.persistence.EntityManager;\n 5  import jakarta.persistence.PersistenceContext;\n 6  import jakarta.persistence.TypedQuery;\n 7  import jakarta.persistence.criteria.CriteriaBuilder;\n 8  import jakarta.persistence.criteria.CriteriaQuery;\n 9  import jakarta.persistence.criteria.Predicate;\n10  import jakarta.persistence.criteria.Root;\n11  import jakarta.ws.rs.GET;\n12  import jakarta.ws.rs.Path;\n13  import jakarta.ws.rs.PathParam;"
        lineNumber: 3
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.enterprise.event.Event;\n 5  import jakarta.inject.Inject;\n 6  import jakarta.transaction.Transactional;\n 7  import jakarta.validation.ConstraintViolation;\n 8  import jakarta.validation.ConstraintViolationException;\n 9  import jakarta.ws.rs.Consumes;\n10  import jakarta.ws.rs.DELETE;\n11  import jakarta.ws.rs.POST;\n12  import jakarta.ws.rs.Path;\n13  import jakarta.ws.rs.PathParam;\n14  import jakarta.ws.rs.core.MediaType;\n15  import jakarta.ws.rs.core.MultivaluedHashMap;"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.inject.Inject;\n 4  import jakarta.ws.rs.GET;\n 5  import jakarta.ws.rs.PUT;\n 6  import jakarta.ws.rs.Path;\n 7  import jakarta.ws.rs.Produces;\n 8  import jakarta.ws.rs.core.MediaType;\n 9  import jakarta.ws.rs.core.Response;\n10  import org.jboss.examples.ticketmonster.service.BotService;\n11  \n12  import java.util.List;\n13  "
        lineNumber: 3
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.enterprise.context.RequestScoped;\n 5  import jakarta.inject.Inject;\n 6  import jakarta.persistence.EntityManager;\n 7  import jakarta.persistence.NoResultException;\n 8  import jakarta.persistence.OptimisticLockException;\n 9  import jakarta.persistence.PersistenceContext;\n10  import jakarta.persistence.TypedQuery;\n11  import jakarta.ws.rs.Consumes;\n12  import jakarta.ws.rs.DELETE;\n13  import jakarta.ws.rs.GET;\n14  import jakarta.ws.rs.POST;\n15  import jakarta.ws.rs.PUT;"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.inject.Inject;\n 4  import jakarta.persistence.EntityManager;\n 5  import jakarta.persistence.PersistenceContext;\n 6  import jakarta.ws.rs.GET;\n 7  import jakarta.ws.rs.Path;\n 8  import jakarta.ws.rs.PathParam;\n 9  import jakarta.ws.rs.Produces;\n10  import org.jboss.examples.ticketmonster.model.MediaItem;\n11  import org.jboss.examples.ticketmonster.service.MediaManager;\n12  \n13  import java.io.File;"
        lineNumber: 3
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.Query;\n 7  import jakarta.persistence.TypedQuery;\n 8  import jakarta.ws.rs.GET;\n 9  import jakarta.ws.rs.Path;\n10  import jakarta.ws.rs.Produces;\n11  import jakarta.ws.rs.core.MediaType;\n12  import org.jboss.examples.ticketmonster.model.Show;\n13  \n14  import java.util.ArrayList;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.persistence.criteria.CriteriaBuilder;\n11  import jakarta.persistence.criteria.CriteriaQuery;\n12  import jakarta.persistence.criteria.Predicate;\n13  import jakarta.persistence.criteria.Root;\n14  import jakarta.ws.rs.Consumes;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import jakarta.enterprise.context.ApplicationScoped;\n 4  import jakarta.inject.Inject;\n 5  import jakarta.persistence.EntityManager;\n 6  import jakarta.persistence.NoResultException;\n 7  import jakarta.persistence.OptimisticLockException;\n 8  import jakarta.persistence.PersistenceContext;\n 9  import jakarta.persistence.TypedQuery;\n10  import jakarta.ws.rs.Consumes;\n11  import jakarta.ws.rs.DELETE;\n12  import jakarta.ws.rs.GET;\n13  import jakarta.ws.rs.POST;\n14  import jakarta.ws.rs.PUT;"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import jakarta.annotation.Resource;\n12  import jakarta.ejb.Timeout;\n13  import jakarta.ejb.Timer;\n14  import jakarta.ejb.TimerConfig;\n15  import jakarta.ejb.TimerService;\n16  import jakarta.enterprise.context.ApplicationScoped;\n17  import jakarta.enterprise.event.Event;\n18  import jakarta.inject.Inject;\n19  import jakarta.ws.rs.core.MultivaluedHashMap;\n20  import jakarta.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;\n26  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n27  \n28  @ApplicationScoped"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import jakarta.ejb.Asynchronous;\n 7  import jakarta.inject.Singleton;\n 8  import jakarta.ejb.Timer;\n 9  import jakarta.enterprise.event.Event;\n10  import jakarta.enterprise.event.Observes;\n11  import jakarta.inject.Inject;\n12  import jakarta.ws.rs.core.MultivaluedHashMap;\n13  import jakarta.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: jakarta.inject.Singleton
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import jakarta.ejb.Asynchronous;\n 7  import jakarta.inject.Singleton;\n 8  import jakarta.ejb.Timer;\n 9  import jakarta.enterprise.event.Event;\n10  import jakarta.enterprise.event.Observes;\n11  import jakarta.inject.Inject;\n12  import jakarta.ws.rs.core.MultivaluedHashMap;\n13  import jakarta.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n18  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n19  \n20  /**\n21   * A Bot service that acts as a Facade for the Bot, providing methods to control the Bot state as well as to obtain the current"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  \n 5  import jakarta.enterprise.context.ApplicationScoped;\n 6  import jakarta.inject.Inject;\n 7  import jakarta.persistence.EntityManager;\n 8  import jakarta.persistence.LockModeType;\n 9  import jakarta.persistence.NoResultException;\n10  \n11  import org.jboss.examples.ticketmonster.model.Performance;\n12  import org.jboss.examples.ticketmonster.model.Seat;\n13  import org.jboss.examples.ticketmonster.model.SeatAllocationException;\n14  import org.jboss.examples.ticketmonster.model.Section;\n15  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n16  import org.jboss.examples.ticketmonster.service.AllocatedSeats;"
        lineNumber: 6
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: jakarta.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import jakarta.enterprise.inject.Produces;\n 6  import jakarta.enterprise.inject.spi.InjectionPoint;\n 7  import jakarta.persistence.EntityManager;\n 8  import jakarta.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: jakarta.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import jakarta.enterprise.inject.Produces;\n 6  import jakarta.enterprise.inject.spi.InjectionPoint;\n 7  import jakarta.persistence.EntityManager;\n 8  import jakarta.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>\n16   * "
        lineNumber: 6
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: jakarta.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.Documented;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.Target;\n 6  \n 7  import jakarta.inject.Qualifier;\n 8  \n 9  import static java.lang.annotation.ElementType.FIELD;\n10  import static java.lang.annotation.ElementType.METHOD;\n11  import static java.lang.annotation.ElementType.PARAMETER;\n12  import static java.lang.annotation.ElementType.TYPE;\n13  import static java.lang.annotation.RetentionPolicy.RUNTIME;\n14  \n15  @Qualifier\n16  @Target({ TYPE, METHOD, PARAMETER, FIELD })\n17  @Retention(RUNTIME)"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: jakarta.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import jakarta.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as cancelled.\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Cancelled {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: jakarta.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import jakarta.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as new (created).\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Created {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: jakarta.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
    javaee-technology-usage-00020-javax:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=CDI
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.HashMap;\n 4  import java.util.List;\n 5  import java.util.Map;\n 6  \n 7  import javax.inject.Inject;\n 8  import javax.persistence.EntityManager;\n 9  import javax.persistence.TypedQuery;\n10  import javax.persistence.criteria.CriteriaBuilder;\n11  import javax.persistence.criteria.CriteriaQuery;\n12  import javax.persistence.criteria.Predicate;\n13  import javax.persistence.criteria.Root;\n14  import javax.ws.rs.GET;\n15  import javax.ws.rs.Path;\n16  import javax.ws.rs.PathParam;\n17  import javax.ws.rs.Produces;"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: " 3  import java.util.ArrayList;\n 4  import java.util.Collections;\n 5  import java.util.HashMap;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import java.util.Set;\n 9  import java.util.TreeMap;\n10  \n11  import javax.ejb.Stateless;\n12  import javax.enterprise.event.Event;\n13  import javax.inject.Inject;\n14  import javax.validation.ConstraintViolation;\n15  import javax.validation.ConstraintViolationException;\n16  import javax.ws.rs.Consumes;\n17  import javax.ws.rs.DELETE;\n18  import javax.ws.rs.POST;\n19  import javax.ws.rs.Path;\n20  import javax.ws.rs.PathParam;\n21  import javax.ws.rs.core.MediaType;\n22  import javax.ws.rs.core.MultivaluedHashMap;\n23  import javax.ws.rs.core.Response;"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.List;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.ws.rs.GET;\n 7  import javax.ws.rs.PUT;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.Produces;\n10  import javax.ws.rs.core.MediaType;\n11  import javax.ws.rs.core.Response;\n12  \n13  import org.jboss.examples.ticketmonster.service.BotService;\n14  \n15  /**"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.io.File;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.ws.rs.GET;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.PathParam;\n10  import javax.ws.rs.Produces;\n11  \n12  import org.jboss.examples.ticketmonster.model.MediaItem;\n13  import org.jboss.examples.ticketmonster.service.MediaManager;\n14  \n15  @Path(\"/media\")"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.*;\n 4  \n 5  import javax.ejb.Stateless;\n 6  import javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.Query;\n 9  import javax.persistence.TypedQuery;\n10  import javax.ws.rs.GET;\n11  import javax.ws.rs.Path;\n12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n14  \n15  import org.jboss.examples.ticketmonster.model.Show;\n16  "
        lineNumber: 6
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;\n26  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n27  \n28  @Stateless"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import javax.ws.rs.core.MultivaluedHashMap;\n13  import javax.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n18  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n19  \n20  /**\n21   * A Bot service that acts as a Facade for the Bot, providing methods to control the Bot state as well as to obtain the current"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.persistence.LockModeType;\n 8  import javax.persistence.NoResultException;\n 9  \n10  import org.jboss.examples.ticketmonster.model.Performance;\n11  import org.jboss.examples.ticketmonster.model.Seat;\n12  import org.jboss.examples.ticketmonster.model.SeatAllocationException;\n13  import org.jboss.examples.ticketmonster.model.Section;\n14  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n15  import org.jboss.examples.ticketmonster.service.AllocatedSeats;"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import javax.enterprise.inject.Produces;\n 6  import javax.enterprise.inject.spi.InjectionPoint;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import javax.enterprise.inject.Produces;\n 6  import javax.enterprise.inject.spi.InjectionPoint;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>\n16   * "
        lineNumber: 6
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.Documented;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.Target;\n 6  \n 7  import javax.inject.Qualifier;\n 8  \n 9  import static java.lang.annotation.ElementType.FIELD;\n10  import static java.lang.annotation.ElementType.METHOD;\n11  import static java.lang.annotation.ElementType.PARAMETER;\n12  import static java.lang.annotation.ElementType.TYPE;\n13  import static java.lang.annotation.RetentionPolicy.RUNTIME;\n14  \n15  @Qualifier\n16  @Target({ TYPE, METHOD, PARAMETER, FIELD })\n17  @Retention(RUNTIME)"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import javax.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as cancelled.\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Cancelled {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import javax.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as new (created).\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Created {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.HashMap;\n 4  import java.util.List;\n 5  import java.util.Map;\n 6  \n 7  import javax.inject.Inject;\n 8  import javax.persistence.EntityManager;\n 9  import javax.persistence.TypedQuery;\n10  import javax.persistence.criteria.CriteriaBuilder;\n11  import javax.persistence.criteria.CriteriaQuery;\n12  import javax.persistence.criteria.Predicate;\n13  import javax.persistence.criteria.Root;\n14  import javax.ws.rs.GET;\n15  import javax.ws.rs.Path;\n16  import javax.ws.rs.PathParam;\n17  import javax.ws.rs.Produces;"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: " 5  import org.jboss.examples.ticketmonster.orders.OrdersRequestDTO;\n 6  import org.jboss.examples.ticketmonster.service.AllocatedSeats;\n 7  import org.jboss.examples.ticketmonster.service.SeatAllocationService;\n 8  import org.jboss.examples.ticketmonster.util.qualifier.Cancelled;\n 9  import org.jboss.examples.ticketmonster.util.qualifier.Created;\n10  import org.jboss.resteasy.client.jaxrs.ResteasyClient;\n11  import org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder;\n12  \n13  import javax.ejb.Stateless;\n14  import javax.enterprise.event.Event;\n15  import javax.inject.Inject;\n16  import javax.validation.ConstraintViolation;\n17  import javax.validation.ConstraintViolationException;\n18  import javax.ws.rs.*;\n19  import javax.ws.rs.client.Client;\n20  import javax.ws.rs.client.ClientBuilder;\n21  import javax.ws.rs.client.Entity;\n22  import javax.ws.rs.core.MediaType;\n23  import javax.ws.rs.core.MultivaluedHashMap;\n24  import javax.ws.rs.core.Response;\n25  import java.util.*;"
        lineNumber: 15
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.List;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.ws.rs.GET;\n 7  import javax.ws.rs.PUT;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.Produces;\n10  import javax.ws.rs.core.MediaType;\n11  import javax.ws.rs.core.Response;\n12  \n13  import org.jboss.examples.ticketmonster.service.BotService;\n14  \n15  /**"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.io.File;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.ws.rs.GET;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.PathParam;\n10  import javax.ws.rs.Produces;\n11  \n12  import org.jboss.examples.ticketmonster.model.MediaItem;\n13  import org.jboss.examples.ticketmonster.service.MediaManager;\n14  \n15  @Path(\"/media\")"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.*;\n 4  \n 5  import javax.ejb.Stateless;\n 6  import javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.Query;\n 9  import javax.persistence.TypedQuery;\n10  import javax.ws.rs.GET;\n11  import javax.ws.rs.Path;\n12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.MediaType;\n14  \n15  import org.jboss.examples.ticketmonster.model.Show;\n16  "
        lineNumber: 6
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
        message: ""
        codeSnip: "13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n14   * See the License for the specific language governing permissions and\n15   * limitations under the License.\n16   */\n17  package org.jboss.examples.ticketmonster.rest;\n18  \n19  import org.ff4j.FF4j;\n20  import org.ff4j.core.Feature;\n21  \n22  import javax.ejb.Stateless;\n23  import javax.inject.Inject;\n24  import javax.ws.rs.GET;\n25  import javax.ws.rs.Path;\n26  import java.util.Map;\n27  \n28  /**\n29   * Created by ceposta \n30   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n31   */\n32  @Path(\"/ping\")\n33  @Stateless"
        lineNumber: 23
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: " 8  import java.util.Random;\n 9  import java.util.concurrent.TimeUnit;\n10  \n11  import javax.annotation.Resource;\n12  import javax.ejb.Stateless;\n13  import javax.ejb.Timeout;\n14  import javax.ejb.Timer;\n15  import javax.ejb.TimerConfig;\n16  import javax.ejb.TimerService;\n17  import javax.enterprise.event.Event;\n18  import javax.inject.Inject;\n19  import javax.ws.rs.core.MultivaluedHashMap;\n20  import javax.ws.rs.core.Response;\n21  \n22  import org.jboss.examples.ticketmonster.model.Performance;\n23  import org.jboss.examples.ticketmonster.model.Show;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.*;\n26  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n27  \n28  @Stateless"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  import java.util.logging.Logger;\n 5  \n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import javax.ws.rs.core.MultivaluedHashMap;\n13  import javax.ws.rs.core.MultivaluedMap;\n14  \n15  import org.jboss.examples.ticketmonster.model.Booking;\n16  import org.jboss.examples.ticketmonster.rest.BookingService;\n17  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n18  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n19  \n20  /**\n21   * A Bot service that acts as a Facade for the Bot, providing methods to control the Bot state as well as to obtain the current"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.List;\n 4  \n 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.persistence.LockModeType;\n 8  import javax.persistence.NoResultException;\n 9  \n10  import org.jboss.examples.ticketmonster.model.Performance;\n11  import org.jboss.examples.ticketmonster.model.Seat;\n12  import org.jboss.examples.ticketmonster.model.SeatAllocationException;\n13  import org.jboss.examples.ticketmonster.model.Section;\n14  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n15  import org.jboss.examples.ticketmonster.service.AllocatedSeats;"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
        message: ""
        codeSnip: "13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n14   * See the License for the specific language governing permissions and\n15   * limitations under the License.\n16   */\n17  package org.jboss.examples.ticketmonster.util;\n18  \n19  import org.ff4j.FF4j;\n20  import org.ff4j.web.FF4jProvider;\n21  \n22  import javax.enterprise.context.ApplicationScoped;\n23  import javax.enterprise.inject.Produces;\n24  \n25  /**\n26   * Created by ceposta \n27   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n28   */\n29  @ApplicationScoped\n30  public class FF4jFactory implements FF4jProvider{\n31  \n32      private static FF4j rc = new FF4j(\"ff4j.xml\");\n33  "
        lineNumber: 23
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import javax.enterprise.inject.Produces;\n 6  import javax.enterprise.inject.spi.InjectionPoint;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  \n 5  import javax.enterprise.inject.Produces;\n 6  import javax.enterprise.inject.spi.InjectionPoint;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.PersistenceContext;\n 9  \n10  /**\n11   * This class uses CDI to alias Java EE resources, such as the persistence context, to CDI beans\n12   * \n13   * <p>\n14   * Example injection on a managed bean field:\n15   * </p>\n16   * "
        lineNumber: 6
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.Documented;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.Target;\n 6  \n 7  import javax.inject.Qualifier;\n 8  \n 9  import static java.lang.annotation.ElementType.FIELD;\n10  import static java.lang.annotation.ElementType.METHOD;\n11  import static java.lang.annotation.ElementType.PARAMETER;\n12  import static java.lang.annotation.ElementType.TYPE;\n13  import static java.lang.annotation.RetentionPolicy.RUNTIME;\n14  \n15  @Qualifier\n16  @Target({ TYPE, METHOD, PARAMETER, FIELD })\n17  @Retention(RUNTIME)"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import javax.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as cancelled.\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Cancelled {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  \n 8  import javax.inject.Qualifier;\n 9  \n10  /**\n11   * {@link Qualifier} to mark a Booking as new (created).\n12   * \n13   * @author Christian Sadilek <csadilek@redhat.com>\n14   */\n15  @Qualifier\n16  @Target({ElementType.FIELD,ElementType.PARAMETER,ElementType.METHOD,ElementType.TYPE})\n17  @Retention(RetentionPolicy.RUNTIME)\n18  public @interface Created {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
    javaee-technology-usage-00021:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Execute=CDI
      - tag=Inversion of Control=CDI
      - tag=Java EE=CDI
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - CDI
    javaee-technology-usage-00110:
      description: Bean Validation
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Bean Validation
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: " 9  import java.util.HashSet;\n10  import java.util.Set;\n11  \n12  import javax.persistence.Entity;\n13  import javax.persistence.GeneratedValue;\n14  import javax.persistence.Id;\n15  import javax.persistence.JoinColumn;\n16  import javax.persistence.ManyToOne;\n17  import javax.persistence.OneToMany;\n18  import javax.validation.Valid;\n19  import javax.validation.constraints.NotNull;\n20  \n21  import org.hibernate.validator.constraints.Email;\n22  import org.hibernate.validator.constraints.NotEmpty;\n23  \n24  /**\n25   * <p>\n26   * A Booking represents a set of tickets purchased for a performance.\n27   * </p>\n28   * \n29   * <p>"
        lineNumber: 19
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Column;\n 8  import javax.persistence.Entity;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.Id;\n11  import javax.persistence.ManyToOne;\n12  import javax.validation.constraints.NotNull;\n13  import javax.validation.constraints.Size;\n14  \n15  /**\n16   * <p>\n17   * Represents an event, which may have multiple performances with different dates and venues.\n18   * </p>\n19   * \n20   * <p>\n21   * Event's principal members are it's relationship to {@link EventCategory} - specifying the type of event it is - and\n22   * {@link MediaItem} - providing the ability to add media (such as a picture) to the event for display. It also contains"
        lineNumber: 12
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Column;\n 8  import javax.persistence.Entity;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.Id;\n11  import javax.persistence.ManyToOne;\n12  import javax.validation.constraints.NotNull;\n13  import javax.validation.constraints.Size;\n14  \n15  /**\n16   * <p>\n17   * Represents an event, which may have multiple performances with different dates and venues.\n18   * </p>\n19   * \n20   * <p>\n21   * Event's principal members are it's relationship to {@link EventCategory} - specifying the type of event it is - and\n22   * {@link MediaItem} - providing the ability to add media (such as a picture) to the event for display. It also contains\n23   * meta-data about the event, such as it's name and a description."
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: " 6  import java.io.Serializable;\n 7  import java.util.Date;\n 8  \n 9  import javax.persistence.Entity;\n10  import javax.persistence.GeneratedValue;\n11  import javax.persistence.Id;\n12  import javax.persistence.ManyToOne;\n13  import javax.persistence.Table;\n14  import javax.persistence.Temporal;\n15  import javax.persistence.UniqueConstraint;\n16  import javax.validation.constraints.NotNull;\n17  \n18  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n19  \n20  /**\n21   * <p>\n22   * A performance represents a single instance of a show.\n23   * </p>\n24   * \n25   * <p>\n26   * The show and date form the natural id of this entity, and therefore must be unique. JPA requires us to use the class level"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import javax.persistence.Embeddable;\n 4  import javax.persistence.ManyToOne;\n 5  import javax.validation.constraints.Min;\n 6  \n 7  /**\n 8   * TODO\n 9   * @author Marius Bogoevici\n10   * @author Pete Muir\n11   */\n12  @Embeddable\n13  public class Seat {\n14  \n15      @Min(1)"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.persistence.Table;\n12  import javax.persistence.UniqueConstraint;\n13  import javax.validation.constraints.NotNull;\n14  \n15  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n16  import org.hibernate.validator.constraints.NotEmpty;\n17  \n18  /**\n19   * <p>\n20   * A section is a specific area within a venue layout. A venue layout may consist of multiple sections.\n21   * </p>\n22   * \n23   * <p>"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "10  \n11  import javax.persistence.Entity;\n12  import javax.persistence.GeneratedValue;\n13  import javax.persistence.Id;\n14  import javax.persistence.Lob;\n15  import javax.persistence.ManyToOne;\n16  import javax.persistence.PostLoad;\n17  import javax.persistence.Table;\n18  import javax.persistence.UniqueConstraint;\n19  import javax.persistence.Version;\n20  import javax.validation.constraints.NotNull;\n21  \n22  /**\n23   * <p>\n24   * Represents the state of ticket allocation in a section, for a specific performance.\n25   * </p>\n26   * \n27   * <p>\n28   * Optimistic locking ensures that two tickets will not be sold within the same row. Adding a member annotated with\n29   * <code>@Version</code> enables optimistic locking.\n30   * </p>"
        lineNumber: 20
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: " 9  import java.util.Set;\n10  \n11  import javax.persistence.Entity;\n12  import javax.persistence.GeneratedValue;\n13  import javax.persistence.Id;\n14  import javax.persistence.ManyToOne;\n15  import javax.persistence.OneToMany;\n16  import javax.persistence.OrderBy;\n17  import javax.persistence.Table;\n18  import javax.persistence.UniqueConstraint;\n19  import javax.validation.constraints.NotNull;\n20  \n21  /**\n22   * <p>\n23   * A show is an instance of an event taking place at a particular venue. A show can have multiple performances.\n24   * </p>\n25   * \n26   * <p>\n27   * A show contains a set of performances, and a set of ticket prices for each section of the venue for this show.\n28   * </p>\n29   * "
        lineNumber: 19
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.validation.constraints.NotNull;\n12  \n13  /**\n14   * <p>\n15   * A ticket represents a seat sold for a particular price.\n16   * </p>\n17   * \n18   * @author Shane Bryzak\n19   * @author Marius Bogoevici\n20   * @author Pete Muir\n21   */"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.persistence.Table;\n12  import javax.persistence.UniqueConstraint;\n13  import javax.validation.constraints.NotNull;\n14  \n15  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n16  \n17  /**\n18   * <p>\n19   * Contains price categories - each category represents the price for a ticket in a particular section at a particular venue for\n20   * a particular event, for a particular ticket category.\n21   * </p>\n22   * \n23   * <p>"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: " 9  import java.util.HashSet;\n10  import java.util.Set;\n11  \n12  import javax.persistence.Entity;\n13  import javax.persistence.GeneratedValue;\n14  import javax.persistence.Id;\n15  import javax.persistence.JoinColumn;\n16  import javax.persistence.ManyToOne;\n17  import javax.persistence.OneToMany;\n18  import javax.validation.Valid;\n19  import javax.validation.constraints.NotNull;\n20  \n21  import org.hibernate.validator.constraints.Email;\n22  import org.hibernate.validator.constraints.NotEmpty;\n23  \n24  /**\n25   * <p>\n26   * A Booking represents a set of tickets purchased for a performance.\n27   * </p>\n28   * \n29   * <p>"
        lineNumber: 19
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Column;\n 8  import javax.persistence.Entity;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.Id;\n11  import javax.persistence.ManyToOne;\n12  import javax.validation.constraints.NotNull;\n13  import javax.validation.constraints.Size;\n14  \n15  /**\n16   * <p>\n17   * Represents an event, which may have multiple performances with different dates and venues.\n18   * </p>\n19   * \n20   * <p>\n21   * Event's principal members are it's relationship to {@link EventCategory} - specifying the type of event it is - and\n22   * {@link MediaItem} - providing the ability to add media (such as a picture) to the event for display. It also contains"
        lineNumber: 12
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Column;\n 8  import javax.persistence.Entity;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.Id;\n11  import javax.persistence.ManyToOne;\n12  import javax.validation.constraints.NotNull;\n13  import javax.validation.constraints.Size;\n14  \n15  /**\n16   * <p>\n17   * Represents an event, which may have multiple performances with different dates and venues.\n18   * </p>\n19   * \n20   * <p>\n21   * Event's principal members are it's relationship to {@link EventCategory} - specifying the type of event it is - and\n22   * {@link MediaItem} - providing the ability to add media (such as a picture) to the event for display. It also contains\n23   * meta-data about the event, such as it's name and a description."
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: " 6  import java.io.Serializable;\n 7  import java.util.Date;\n 8  \n 9  import javax.persistence.Entity;\n10  import javax.persistence.GeneratedValue;\n11  import javax.persistence.Id;\n12  import javax.persistence.ManyToOne;\n13  import javax.persistence.Table;\n14  import javax.persistence.Temporal;\n15  import javax.persistence.UniqueConstraint;\n16  import javax.validation.constraints.NotNull;\n17  \n18  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n19  \n20  /**\n21   * <p>\n22   * A performance represents a single instance of a show.\n23   * </p>\n24   * \n25   * <p>\n26   * The show and date form the natural id of this entity, and therefore must be unique. JPA requires us to use the class level"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import javax.persistence.Embeddable;\n 4  import javax.persistence.ManyToOne;\n 5  import javax.validation.constraints.Min;\n 6  \n 7  /**\n 8   * TODO\n 9   * @author Marius Bogoevici\n10   * @author Pete Muir\n11   */\n12  @Embeddable\n13  public class Seat {\n14  \n15      @Min(1)"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.persistence.Table;\n12  import javax.persistence.UniqueConstraint;\n13  import javax.validation.constraints.NotNull;\n14  \n15  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n16  import org.hibernate.validator.constraints.NotEmpty;\n17  \n18  /**\n19   * <p>\n20   * A section is a specific area within a venue layout. A venue layout may consist of multiple sections.\n21   * </p>\n22   * \n23   * <p>"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "10  \n11  import javax.persistence.Entity;\n12  import javax.persistence.GeneratedValue;\n13  import javax.persistence.Id;\n14  import javax.persistence.Lob;\n15  import javax.persistence.ManyToOne;\n16  import javax.persistence.PostLoad;\n17  import javax.persistence.Table;\n18  import javax.persistence.UniqueConstraint;\n19  import javax.persistence.Version;\n20  import javax.validation.constraints.NotNull;\n21  \n22  /**\n23   * <p>\n24   * Represents the state of ticket allocation in a section, for a specific performance.\n25   * </p>\n26   * \n27   * <p>\n28   * Optimistic locking ensures that two tickets will not be sold within the same row. Adding a member annotated with\n29   * <code>@Version</code> enables optimistic locking.\n30   * </p>"
        lineNumber: 20
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: " 9  import java.util.Set;\n10  \n11  import javax.persistence.Entity;\n12  import javax.persistence.GeneratedValue;\n13  import javax.persistence.Id;\n14  import javax.persistence.ManyToOne;\n15  import javax.persistence.OneToMany;\n16  import javax.persistence.OrderBy;\n17  import javax.persistence.Table;\n18  import javax.persistence.UniqueConstraint;\n19  import javax.validation.constraints.NotNull;\n20  \n21  /**\n22   * <p>\n23   * A show is an instance of an event taking place at a particular venue. A show can have multiple performances.\n24   * </p>\n25   * \n26   * <p>\n27   * A show contains a set of performances, and a set of ticket prices for each section of the venue for this show.\n28   * </p>\n29   * "
        lineNumber: 19
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.validation.constraints.NotNull;\n12  \n13  /**\n14   * <p>\n15   * A ticket represents a seat sold for a particular price.\n16   * </p>\n17   * \n18   * @author Shane Bryzak\n19   * @author Marius Bogoevici\n20   * @author Pete Muir\n21   */"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: " 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.Entity;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.Id;\n10  import javax.persistence.ManyToOne;\n11  import javax.persistence.Table;\n12  import javax.persistence.UniqueConstraint;\n13  import javax.validation.constraints.NotNull;\n14  \n15  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n16  \n17  /**\n18   * <p>\n19   * Contains price categories - each category represents the price for a ticket in a particular section at a particular venue for\n20   * a particular event, for a particular ticket category.\n21   * </p>\n22   * \n23   * <p>"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
        message: ""
        codeSnip: " 6  import static javax.persistence.GenerationType.TABLE;\n 7  \n 8  import java.io.Serializable;\n 9  import java.util.Date;\n10  import java.sql.Timestamp;\n11  import java.util.HashSet;\n12  import java.util.Set;\n13  \n14  import javax.persistence.*;\n15  import javax.validation.Valid;\n16  import javax.validation.constraints.NotNull;\n17  \n18  import org.hibernate.validator.constraints.Email;\n19  import org.hibernate.validator.constraints.NotEmpty;\n20  import org.teiid.spring.annotations.InsertQuery;\n21  import org.teiid.spring.annotations.SelectQuery;\n22  import org.teiid.spring.annotations.UpdateQuery;\n23  \n24  /**\n25   * <p>\n26   * A Booking represents a set of tickets purchased for a performanceId."
        lineNumber: 16
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
        message: ""
        codeSnip: " 1  package org.ticketmonster.orders.domain;\n 2  \n 3  import javax.persistence.Column;\n 4  import javax.persistence.Embeddable;\n 5  import javax.persistence.ManyToOne;\n 6  import javax.validation.constraints.Min;\n 7  \n 8  /**\n 9   * @author Marius Bogoevici\n10   * @author Pete Muir\n11   */\n12  @Embeddable\n13  public class Seat {\n14  \n15      @Min(1)\n16      @Column(name = \"row_number\")"
        lineNumber: 6
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
        message: ""
        codeSnip: " 1  package org.ticketmonster.orders.domain;\n 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.*;\n 8  import javax.validation.constraints.NotNull;\n 9  \n10  import org.hibernate.validator.constraints.NotEmpty;\n11  import org.teiid.spring.annotations.SelectQuery;\n12  \n13  /**\n14   * <p>\n15   * A section is a specific area within a venueId layout. A venueId layout may consist of multiple sections.\n16   * </p>\n17   * \n18   * <p>"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
        message: ""
        codeSnip: " 7  \n 8  import static javax.persistence.GenerationType.IDENTITY;\n 9  import static javax.persistence.GenerationType.TABLE;\n10  \n11  import java.io.Serializable;\n12  import java.util.ArrayList;\n13  import java.util.Arrays;\n14  import java.util.List;\n15  \n16  import javax.persistence.*;\n17  import javax.validation.constraints.NotNull;\n18  \n19  /**\n20   * <p>\n21   * Represents the state of ticket allocation in a section, for a specific performanceId.\n22   * </p>\n23   * \n24   * <p>\n25   * Optimistic locking ensures that two tickets will not be sold within the same row. Adding a member annotated with\n26   * <code>@Version</code> enables optimistic locking.\n27   * </p>"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
        message: ""
        codeSnip: " 1  package org.ticketmonster.orders.domain;\n 2  \n 3  import org.teiid.spring.annotations.SelectQuery;\n 4  \n 5  import javax.persistence.*;\n 6  import javax.validation.constraints.NotNull;\n 7  import java.io.Serializable;\n 8  import java.util.HashSet;\n 9  import java.util.Set;\n10  \n11  import static javax.persistence.CascadeType.ALL;\n12  import static javax.persistence.FetchType.EAGER;\n13  import static javax.persistence.GenerationType.IDENTITY;\n14  \n15  /**\n16   * <p>"
        lineNumber: 6
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
        message: ""
        codeSnip: " 3  import org.teiid.spring.annotations.InsertQuery;\n 4  import org.teiid.spring.annotations.SelectQuery;\n 5  import org.teiid.spring.annotations.UpdateQuery;\n 6  \n 7  import static javax.persistence.GenerationType.IDENTITY;\n 8  import static javax.persistence.GenerationType.TABLE;\n 9  \n10  import java.io.Serializable;\n11  \n12  import javax.persistence.*;\n13  import javax.validation.constraints.NotNull;\n14  \n15  /**\n16   * <p>\n17   * A ticket represents a seat sold for a particular price.\n18   * </p>\n19   * \n20   * @author Shane Bryzak\n21   * @author Marius Bogoevici\n22   * @author Pete Muir\n23   */"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
        message: ""
        codeSnip: " 1  package org.ticketmonster.orders.domain;\n 2  \n 3  import static javax.persistence.GenerationType.IDENTITY;\n 4  \n 5  import java.io.Serializable;\n 6  \n 7  import javax.persistence.*;\n 8  import javax.validation.constraints.NotNull;\n 9  \n10  import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n11  import org.teiid.spring.annotations.SelectQuery;\n12  \n13  /**\n14   * <p>\n15   * Contains price categories - each category represents the price for a ticket in a particular section at a particular venue for\n16   * a particular event, for a particular ticket category.\n17   * </p>\n18   * "
        lineNumber: 8
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
    javaee-technology-usage-00120:
      description: Java Servlet
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java Servlet
      - tag=Servlet
      incidents:
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
        message: ""
        codeSnip: "11   * Unless required by applicable law or agreed to in writing, software\n12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n14   * See the License for the specific language governing permissions and\n15   * limitations under the License.\n16   */\n17  package org.jboss.examples.ticketmonster.servlet;\n18  \n19  import org.ff4j.web.embedded.ConsoleServlet;\n20  \n21  import javax.servlet.annotation.WebInitParam;\n22  import javax.servlet.annotation.WebServlet;\n23  \n24  /**\n25   * Created by ceposta \n26   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n27   */\n28  @WebServlet(value = \"/ff4j-console\", loadOnStartup = 1,\n29          initParams = @WebInitParam(name = \"ff4jProvider\", value = \"org.jboss.examples.ticketmonster.util.FF4jFactory\"))\n30  public class FF4jConsoleServlet extends ConsoleServlet{\n31  }"
        lineNumber: 21
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
          kind: Module
          name: javax.servlet.annotation.WebInitParam
          package: org.jboss.examples.ticketmonster.servlet
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
        message: ""
        codeSnip: "12   * distributed under the License is distributed on an \"AS IS\" BASIS,\n13   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n14   * See the License for the specific language governing permissions and\n15   * limitations under the License.\n16   */\n17  package org.jboss.examples.ticketmonster.servlet;\n18  \n19  import org.ff4j.web.embedded.ConsoleServlet;\n20  \n21  import javax.servlet.annotation.WebInitParam;\n22  import javax.servlet.annotation.WebServlet;\n23  \n24  /**\n25   * Created by ceposta \n26   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n27   */\n28  @WebServlet(value = \"/ff4j-console\", loadOnStartup = 1,\n29          initParams = @WebInitParam(name = \"ff4jProvider\", value = \"org.jboss.examples.ticketmonster.util.FF4jFactory\"))\n30  public class FF4jConsoleServlet extends ConsoleServlet{\n31  }\n"
        lineNumber: 22
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.examples.ticketmonster.servlet
    javaee-technology-usage-00210:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=Bean Validation
      - tag=Store=Bean Validation
      - tag=Validation=Bean Validation
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Bean Validation
    javaee-technology-usage-00230:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Connect=Servlet
      - tag=HTTP=Servlet
      - tag=Java EE=Servlet
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Servlet
    mvc-01220:
      description: Embedded framework - Spring MVC
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring MVC
      - tag=Spring MVC
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.spring-webmvc
          version: 4.3.10.RELEASE
    non-xml-technology-usage-02000:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Bean=EJB XML
      - tag=Connect=EJB XML
      - tag=Java EE=EJB XML
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - EJB XML
    non-xml-technology-usage-17000:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA XML
      - tag=Persistence=JPA XML
      - tag=Store=JPA XML
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - JPA XML
    non-xml-technology-usage-20000:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Properties
      - tag=Other=Properties
      - tag=Sustain=Properties
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Properties
    observability-0100:
      description: Embedded library - Spring Boot Actuator
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded library - Spring Boot Actuator
      - tag=Spring Boot Actuator
      incidents:
      - uri: file:///opt/input/source/pom.xml
        message: ""
        codeSnip: |2-
           1  <?xml version="1.0" encoding="UTF-8"?>
           2  <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
           3      <modelVersion>4.0.0</modelVersion>
           4      <groupId>org.jboss.examples.eap</groupId>
           5      <artifactId>ticket-monster-parent</artifactId>
           6      <version>3.0.0-SNAPSHOT</version>
           7      <modules>
           8          <module>monolith</module>
           9          <module>backend-v1</module>
          10          <module>backend-v2</module>
          11          <module>orders-service</module>
        lineNumber: 0
        variables:
          name: org.springframework.boot.spring-boot-starter-actuator
          version: 1.5.6.RELEASE
    technology-usage-3rd-party-spring-03001-0:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Configuration Management=Spring Boot Configuration
      - tag=Embedded=Spring Boot Configuration
      - tag=Sustain=Spring Boot Configuration
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Boot Configuration
    technology-usage-3rd-party-spring-03001-1:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Configuration Management=Spring Boot Auto-configuration
      - tag=Embedded=Spring Boot Auto-configuration
      - tag=Sustain=Spring Boot Auto-configuration
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Boot Auto-configuration
    technology-usage-3rd-party-spring-03001-2:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Configuration Management=Spring Boot Component Scan
      - tag=Embedded=Spring Boot Component Scan
      - tag=Sustain=Spring Boot Component Scan
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Boot Component Scan
    technology-usage-connect-01000:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Connect=RMI
      - tag=Java EE=RMI
      - tag=Other=RMI
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "119  \n120      /**\n121       * <p>\n122       *   A method for counting all entities of a given type\n123       * </p>\n124       *\n125       * @param uriInfo application and request context information (see {@see UriInfo} class information for more details)\n126       * @return\n127       */\n128      @GET\n129      @Path(\"/count\")\n130      @Produces(MediaType.APPLICATION_JSON)\n131      public Map<String, Long> getCount(@Context UriInfo uriInfo) {\n132          CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n133          CriteriaQuery<Long> criteriaQuery = criteriaBuilder.createQuery(Long.class);\n134          Root<T> root = criteriaQuery.from(entityClass);\n135          criteriaQuery.select(criteriaBuilder.count(root));\n136          Predicate[] predicates = extractPredicates(uriInfo.getQueryParameters(), criteriaBuilder, root);\n137          criteriaQuery.where(predicates);\n138          Map<String, Long> result = new HashMap<String, Long>();\n139          result.put(\"count\", entityManager.createQuery(criteriaQuery).getSingleResult());"
        lineNumber: 129
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "155      }\n156  \n157      /**\n158       * <p>\n159       *     A method for retrieving individual entity instances.\n160       * </p>\n161       * @param id entity id\n162       * @return\n163       */\n164      @GET\n165      @Path(\"/{id:[0-9][0-9]*}\")\n166      @Produces(MediaType.APPLICATION_JSON)\n167      public T getSingleInstance(@PathParam(\"id\") Long id) {\n168          final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n169          final CriteriaQuery<T> criteriaQuery = criteriaBuilder.createQuery(entityClass);\n170          Root<T> root = criteriaQuery.from(entityClass);\n171          Predicate condition = criteriaBuilder.equal(root.get(\"id\"), id);\n172          criteriaQuery.select(criteriaBuilder.createQuery(entityClass).getSelection()).where(condition);\n173          return entityManager.createQuery(criteriaQuery).getSingleResult();\n174      }\n175  }"
        lineNumber: 165
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: " 97        final List<BookingDTO> results = new ArrayList<BookingDTO>();\n 98        for (Booking searchResult : searchResults)\n 99        {\n100           BookingDTO dto = new BookingDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, BookingDTO dto)\n110     {\n111        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Booking entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.BookingDTO;\n25  import org.jboss.examples.ticketmonster.model.Booking;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/bookings\")\n32  public class BookingEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(BookingDTO dto)\n40     {\n41        Booking entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(BookingDTO dto)\n40     {\n41        Booking entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(BookingEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Booking entity = em.find(Booking.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "50        Booking entity = em.find(Booking.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Booking entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "36  \n37  /**\n38   * <p>\n39   *     A JAX-RS endpoint for handling {@link Booking}s. Inherits the GET\n40   *     methods from {@link BaseEntityService}, and implements additional REST methods.\n41   * </p>\n42   *\n43   * @author Marius Bogoevici\n44   * @author Pete Muir\n45   */\n46  @Path(\"/bookings\")\n47  /**\n48   * <p>\n49   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n50   * </p>\n51   */\n52  @Stateless\n53  public class BookingService extends BaseEntityService<Booking> {\n54  \n55      @Inject\n56      SeatAllocationService seatAllocationService;"
        lineNumber: 46
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "75      }\n76  \n77      /**\n78       * <p>\n79       * Delete a booking by id\n80       * </p>\n81       * @param id\n82       * @return\n83       */\n84      @DELETE\n85      @Path(\"/{id:[0-9][0-9]*}\")\n86      public Response deleteBooking(@PathParam(\"id\") Long id) {\n87          Booking booking = getEntityManager().find(Booking.class, id);\n88          if (booking == null) {\n89              return Response.status(Response.Status.NOT_FOUND).build();\n90          }\n91          getEntityManager().remove(booking);\n92          // Group together seats by section so that we can deallocate them in a group\n93          Map<Section, List<Seat>> seatsBySection = new TreeMap<Section, java.util.List<Seat>>(SectionComparator.instance());\n94          for (Ticket ticket : booking.getTickets()) {\n95              List<Seat> seats = seatsBySection.get(ticket.getSeat().getSection());"
        lineNumber: 85
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "12  \n13  import org.jboss.examples.ticketmonster.service.BotService;\n14  \n15  /**\n16   * A non-RESTful service for providing the current state of the Bot. This service also allows the bot to be started, stopped or\n17   * the existing bookings to be deleted.\n18   * \n19   * @author Vineet Reynolds\n20   * \n21   */\n22  @Path(\"/bot\")\n23  public class BotStatusService {\n24  \n25      @Inject\n26      private BotService botService;\n27  \n28      /**\n29       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n30       * \n31       * @return The JSON representation of the Bot's log\n32       */"
        lineNumber: 22
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "23  public class BotStatusService {\n24  \n25      @Inject\n26      private BotService botService;\n27  \n28      /**\n29       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n30       * \n31       * @return The JSON representation of the Bot's log\n32       */\n33      @Path(\"messages\")\n34      @GET\n35      @Produces(MediaType.APPLICATION_JSON)\n36      public List<String> getMessages() {\n37          return botService.fetchLog();\n38      }\n39  \n40      /**\n41       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n42       * the bot is active.\n43       * "
        lineNumber: 33
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "36      public List<String> getMessages() {\n37          return botService.fetchLog();\n38      }\n39  \n40      /**\n41       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n42       * the bot is active.\n43       * \n44       * @return The represntation of the Bot's current state.\n45       */\n46      @Path(\"status\")\n47      @GET\n48      @Produces(MediaType.APPLICATION_JSON)\n49      public Response getBotStatus() {\n50          BotState state = botService.isBotActive() ? BotState.RUNNING\n51              : BotState.NOT_RUNNING;\n52          return Response.ok(state).build();\n53      }\n54  \n55      /**\n56       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and"
        lineNumber: 46
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "52          return Response.ok(state).build();\n53      }\n54  \n55      /**\n56       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and\n57       * delete all existing bookings.\n58       * \n59       * @param updatedStatus The new state of the Bot. Only the state property is considered; any messages provided are ignored.\n60       * @return An empty HTTP 201 response.\n61       */\n62      @Path(\"status\")\n63      @PUT\n64      public Response updateBotStatus(BotState updatedState) {\n65          if (updatedState.equals(BotState.RUNNING)) {\n66              botService.start();\n67          } else if (updatedState.equals(BotState.NOT_RUNNING)) {\n68              botService.stop();\n69          } else if (updatedState.equals(BotState.RESET)) {\n70              botService.deleteAll();\n71          }\n72          return Response.noContent().build();"
        lineNumber: 62
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: " 97        final List<EventCategoryDTO> results = new ArrayList<EventCategoryDTO>();\n 98        for (EventCategory searchResult : searchResults)\n 99        {\n100           EventCategoryDTO dto = new EventCategoryDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, EventCategoryDTO dto)\n110     {\n111        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        EventCategory entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.EventCategoryDTO;\n25  import org.jboss.examples.ticketmonster.model.EventCategory;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/eventcategories\")\n32  public class EventCategoryEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventCategoryDTO dto)\n40     {\n41        EventCategory entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventCategoryDTO dto)\n40     {\n41        EventCategory entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(EventCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        EventCategory entity = em.find(EventCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "50        EventCategory entity = em.find(EventCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        EventCategory entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: " 97        final List<EventDTO> results = new ArrayList<EventDTO>();\n 98        for (Event searchResult : searchResults)\n 99        {\n100           EventDTO dto = new EventDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, EventDTO dto)\n110     {\n111        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Event entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.EventDTO;\n25  import org.jboss.examples.ticketmonster.model.Event;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/events\")\n32  public class EventEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventDTO dto)\n40     {\n41        Event entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventDTO dto)\n40     {\n41        Event entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(EventEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Event entity = em.find(Event.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "50        Event entity = em.find(Event.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Event entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
        codeSnip: "14  \n15  /**\n16   * <p>\n17   *     A JAX-RS endpoint for handling {@link Event}s. Inherits the actual\n18   *     methods from {@link BaseEntityService}, but implements additional search\n19   *     criteria.\n20   * </p>\n21   *\n22   * @author Marius Bogoevici\n23   */\n24  @Path(\"/events\")\n25  /**\n26   * <p>\n27   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n28   * </p>\n29   */\n30  @Stateless\n31  public class EventService extends BaseEntityService<Event> {\n32  \n33      public EventService() {\n34          super(Event.class);"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: " 97        final List<MediaItemDTO> results = new ArrayList<MediaItemDTO>();\n 98        for (MediaItem searchResult : searchResults)\n 99        {\n100           MediaItemDTO dto = new MediaItemDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, MediaItemDTO dto)\n110     {\n111        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        MediaItem entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.MediaItemDTO;\n25  import org.jboss.examples.ticketmonster.model.MediaItem;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/mediaitems\")\n32  public class MediaItemEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(MediaItemDTO dto)\n40     {\n41        MediaItem entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(MediaItemDTO dto)\n40     {\n41        MediaItem entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(MediaItemEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        MediaItem entity = em.find(MediaItem.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "50        MediaItem entity = em.find(MediaItem.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        MediaItem entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.ws.rs.GET;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.PathParam;\n10  import javax.ws.rs.Produces;\n11  \n12  import org.jboss.examples.ticketmonster.model.MediaItem;\n13  import org.jboss.examples.ticketmonster.service.MediaManager;\n14  \n15  @Path(\"/media\")\n16  /**\n17   * <p>\n18   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n19   * </p>\n20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      "
        lineNumber: 15
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "19   * </p>\n20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      \n26      @Inject EntityManager entityManager;\n27  \n28      @GET\n29      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n30      @Produces(\"*/*\")\n31      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n32          return mediaManager.getCachedFile(cachedFileName);\n33      }\n34  \n35      @GET\n36      @Path(\"/{id:\\\\d*}\")\n37      @Produces(\"*/*\")\n38      public File getMediaContent(@PathParam(\"id\") Long id) {\n39          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());"
        lineNumber: 29
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "26      @Inject EntityManager entityManager;\n27  \n28      @GET\n29      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n30      @Produces(\"*/*\")\n31      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n32          return mediaManager.getCachedFile(cachedFileName);\n33      }\n34  \n35      @GET\n36      @Path(\"/{id:\\\\d*}\")\n37      @Produces(\"*/*\")\n38      public File getMediaContent(@PathParam(\"id\") Long id) {\n39          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());\n40      }\n41  }\n"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: "14  \n15  import org.jboss.examples.ticketmonster.model.Show;\n16  \n17  /**\n18   * A read-only REST resource that provides a collection of metrics for shows occuring in the future. Updates to metrics via\n19   * POST/PUT etc. are not allowed, since they are not meant to be computed by consumers.\n20   * \n21   * @author Vineet Reynolds\n22   * \n23   */\n24  @Path(\"/metrics\")\n25  @Stateless\n26  public class MetricsService {\n27  \n28      @Inject\n29      private EntityManager entityManager;\n30  \n31      /**\n32       * Retrieves a collection of metrics for Shows. Each metric in the collection contains\n33       * <ul>\n34       * <li>the show id,</li>"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "117        final List<PerformanceDTO> results = new ArrayList<PerformanceDTO>();\n118        for (Performance searchResult : searchResults)\n119        {\n120           PerformanceDTO dto = new PerformanceDTO(searchResult);\n121           results.add(dto);\n122        }\n123        return results;\n124     }\n125  \n126     @PUT\n127     @Path(\"/{id:[0-9][0-9]*}\")\n128     @Consumes(\"application/json\")\n129     public Response update(@PathParam(\"id\") Long id, PerformanceDTO dto)\n130     {\n131        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n132        findByIdQuery.setParameter(\"entityId\", id);\n133        Performance entity;\n134        try\n135        {\n136           entity = findByIdQuery.getSingleResult();\n137        }"
        lineNumber: 127
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "29  import org.jboss.examples.ticketmonster.rest.dto.PerformanceDTO;\n30  import org.jboss.examples.ticketmonster.model.Booking;\n31  import org.jboss.examples.ticketmonster.model.Performance;\n32  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n33  import org.jboss.examples.ticketmonster.model.Show;\n34  \n35  /**\n36   * \n37   */\n38  @Stateless\n39  @Path(\"/performances\")\n40  public class PerformanceEndpoint\n41  {\n42     @PersistenceContext(unitName = \"primary\")\n43     private EntityManager em;\n44  \n45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);\n50        em.persist(entity);\n51        return Response.created(UriBuilder.fromResource(PerformanceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n52     }\n53  \n54     @DELETE\n55     @Path(\"/{id:[0-9][0-9]*}\")\n56     public Response deleteById(@PathParam(\"id\") Long id)\n57     {\n58        Performance entity = em.find(Performance.class, id);\n59        if (entity == null)\n60        {\n61           return Response.status(Status.NOT_FOUND).build();\n62        }\n63        Show show = entity.getShow();\n64        show.getPerformances().remove(entity);\n65        entity.setShow(null);"
        lineNumber: 55
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "70        }\n71        List<Booking> bookings = findBookingsByPerformance(entity);\n72        for(Booking booking: bookings) {\n73           this.em.remove(booking);\n74        }\n75        em.remove(entity);\n76        return Response.noContent().build();\n77     }\n78  \n79     @GET\n80     @Path(\"/{id:[0-9][0-9]*}\")\n81     @Produces(\"application/json\")\n82     public Response findById(@PathParam(\"id\") Long id)\n83     {\n84        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n85        findByIdQuery.setParameter(\"entityId\", id);\n86        Performance entity;\n87        try\n88        {\n89           entity = findByIdQuery.getSingleResult();\n90        }"
        lineNumber: 80
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
        message: ""
        codeSnip: "17  package org.jboss.examples.ticketmonster.rest;\n18  \n19  import javax.ejb.Stateless;\n20  import javax.ws.rs.GET;\n21  import javax.ws.rs.Path;\n22  \n23  /**\n24   * Created by ceposta \n25   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n26   */\n27  @Path(\"/ping\")\n28  @Stateless\n29  public class PingService {\n30  \n31      @GET\n32      public String ping(){\n33          return \"pong\";\n34      }\n35  }\n"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: " 97        final List<SectionAllocationDTO> results = new ArrayList<SectionAllocationDTO>();\n 98        for (SectionAllocation searchResult : searchResults)\n 99        {\n100           SectionAllocationDTO dto = new SectionAllocationDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, SectionAllocationDTO dto)\n110     {\n111        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        SectionAllocation entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.SectionAllocationDTO;\n25  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/sectionallocations\")\n32  public class SectionAllocationEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionAllocationDTO dto)\n40     {\n41        SectionAllocation entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionAllocationDTO dto)\n40     {\n41        SectionAllocation entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(SectionAllocationEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        SectionAllocation entity = em.find(SectionAllocation.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "50        SectionAllocation entity = em.find(SectionAllocation.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        SectionAllocation entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: " 97        final List<SectionDTO> results = new ArrayList<SectionDTO>();\n 98        for (Section searchResult : searchResults)\n 99        {\n100           SectionDTO dto = new SectionDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, SectionDTO dto)\n110     {\n111        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Section entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.SectionDTO;\n25  import org.jboss.examples.ticketmonster.model.Section;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/sections\")\n32  public class SectionEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionDTO dto)\n40     {\n41        Section entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionDTO dto)\n40     {\n41        Section entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(SectionEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Section entity = em.find(Section.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "50        Section entity = em.find(Section.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Section entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: " 97        final List<ShowDTO> results = new ArrayList<ShowDTO>();\n 98        for (Show searchResult : searchResults)\n 99        {\n100           ShowDTO dto = new ShowDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, ShowDTO dto)\n110     {\n111        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Show entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.ShowDTO;\n25  import org.jboss.examples.ticketmonster.model.Show;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/shows\")\n32  public class ShowEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(ShowDTO dto)\n40     {\n41        Show entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(ShowDTO dto)\n40     {\n41        Show entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(ShowEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Show entity = em.find(Show.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "50        Show entity = em.find(Show.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Show entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "13  import javax.ws.rs.PathParam;\n14  import javax.ws.rs.Produces;\n15  import javax.ws.rs.core.MediaType;\n16  import javax.ws.rs.core.MultivaluedMap;\n17  \n18  import org.jboss.examples.ticketmonster.model.Show;\n19  \n20  /**\n21   * @author Marius Bogoevici\n22   */\n23  @Path(\"/shows\")\n24  /**\n25   * <p>\n26   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n27   * </p>\n28   */\n29  @Stateless\n30  public class ShowService extends BaseEntityService<Show> {\n31  \n32      public ShowService() {\n33          super(Show.class);"
        lineNumber: 23
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "47          }\n48  \n49          if (queryParameters.containsKey(\"event\")) {\n50              String event = queryParameters.getFirst(\"event\");\n51              predicates.add(criteriaBuilder.equal(root.get(\"event\").get(\"id\"), event));\n52          }\n53          return predicates.toArray(new Predicate[]{});\n54      }\n55  \n56      @GET\n57      @Path(\"/performance/{performanceId:[0-9][0-9]*}\")\n58      @Produces(MediaType.APPLICATION_JSON)\n59      public Show getShowByPerformance(@PathParam(\"performanceId\") Long performanceId) {\n60          Query query = getEntityManager().createQuery(\"select s from Show s where exists(select p from Performance p where p.show = s and p.id = :performanceId)\");\n61          query.setParameter(\"performanceId\", performanceId);\n62          return (Show) query.getSingleResult();\n63      }\n64  }\n"
        lineNumber: 57
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketCategoryDTO> results = new ArrayList<TicketCategoryDTO>();\n 98        for (TicketCategory searchResult : searchResults)\n 99        {\n100           TicketCategoryDTO dto = new TicketCategoryDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketCategoryDTO dto)\n110     {\n111        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        TicketCategory entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketCategoryDTO;\n25  import org.jboss.examples.ticketmonster.model.TicketCategory;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/ticketcategories\")\n32  public class TicketCategoryEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketCategoryDTO dto)\n40     {\n41        TicketCategory entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketCategoryDTO dto)\n40     {\n41        TicketCategory entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        TicketCategory entity = em.find(TicketCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "50        TicketCategory entity = em.find(TicketCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        TicketCategory entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketDTO> results = new ArrayList<TicketDTO>();\n 98        for (Ticket searchResult : searchResults)\n 99        {\n100           TicketDTO dto = new TicketDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketDTO dto)\n110     {\n111        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Ticket entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketDTO;\n25  import org.jboss.examples.ticketmonster.model.Ticket;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/tickets\")\n32  public class TicketEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketDTO dto)\n40     {\n41        Ticket entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketDTO dto)\n40     {\n41        Ticket entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Ticket entity = em.find(Ticket.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "50        Ticket entity = em.find(Ticket.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Ticket entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketPriceDTO> results = new ArrayList<TicketPriceDTO>();\n 98        for (TicketPrice searchResult : searchResults)\n 99        {\n100           TicketPriceDTO dto = new TicketPriceDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketPriceDTO dto)\n110     {\n111        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        TicketPrice entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketPriceDTO;\n25  import org.jboss.examples.ticketmonster.model.TicketPrice;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/ticketprices\")\n32  public class TicketPriceEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketPriceDTO dto)\n40     {\n41        TicketPrice entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketPriceDTO dto)\n40     {\n41        TicketPrice entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketPriceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        TicketPrice entity = em.find(TicketPrice.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "50        TicketPrice entity = em.find(TicketPrice.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        TicketPrice entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: " 97        final List<VenueDTO> results = new ArrayList<VenueDTO>();\n 98        for (Venue searchResult : searchResults)\n 99        {\n100           VenueDTO dto = new VenueDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, VenueDTO dto)\n110     {\n111        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Venue entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.VenueDTO;\n25  import org.jboss.examples.ticketmonster.model.Venue;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/venues\")\n32  public class VenueEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(VenueDTO dto)\n40     {\n41        Venue entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(VenueDTO dto)\n40     {\n41        Venue entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(VenueEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Venue entity = em.find(Venue.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "50        Venue entity = em.find(Venue.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Venue entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
        codeSnip: " 6  import org.jboss.examples.ticketmonster.model.Venue;\n 7  \n 8  /**\n 9   * <p>\n10   *     A JAX-RS endpoint for handling {@link Venue}s. Inherits the actual\n11   *     methods from {@link BaseEntityService}.\n12   * </p>\n13   *\n14   * @author Marius Bogoevici\n15   */\n16  @Path(\"/venues\")\n17  /**\n18   * <p>\n19   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n20   * </p>\n21   */\n22  @Stateless\n23  public class VenueService extends BaseEntityService<Venue> {\n24  \n25      public VenueService() {\n26          super(Venue.class);"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "119  \n120      /**\n121       * <p>\n122       *   A method for counting all entities of a given type\n123       * </p>\n124       *\n125       * @param uriInfo application and request context information (see {@see UriInfo} class information for more details)\n126       * @return\n127       */\n128      @GET\n129      @Path(\"/count\")\n130      @Produces(MediaType.APPLICATION_JSON)\n131      public Map<String, Long> getCount(@Context UriInfo uriInfo) {\n132          CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n133          CriteriaQuery<Long> criteriaQuery = criteriaBuilder.createQuery(Long.class);\n134          Root<T> root = criteriaQuery.from(entityClass);\n135          criteriaQuery.select(criteriaBuilder.count(root));\n136          Predicate[] predicates = extractPredicates(uriInfo.getQueryParameters(), criteriaBuilder, root);\n137          criteriaQuery.where(predicates);\n138          Map<String, Long> result = new HashMap<String, Long>();\n139          result.put(\"count\", entityManager.createQuery(criteriaQuery).getSingleResult());"
        lineNumber: 129
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "155      }\n156  \n157      /**\n158       * <p>\n159       *     A method for retrieving individual entity instances.\n160       * </p>\n161       * @param id entity id\n162       * @return\n163       */\n164      @GET\n165      @Path(\"/{id:[0-9][0-9]*}\")\n166      @Produces(MediaType.APPLICATION_JSON)\n167      public T getSingleInstance(@PathParam(\"id\") Long id) {\n168          final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n169          final CriteriaQuery<T> criteriaQuery = criteriaBuilder.createQuery(entityClass);\n170          Root<T> root = criteriaQuery.from(entityClass);\n171          Predicate condition = criteriaBuilder.equal(root.get(\"id\"), id);\n172          criteriaQuery.select(criteriaBuilder.createQuery(entityClass).getSelection()).where(condition);\n173          return entityManager.createQuery(criteriaQuery).getSingleResult();\n174      }\n175  }"
        lineNumber: 165
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: " 97        final List<BookingDTO> results = new ArrayList<BookingDTO>();\n 98        for (Booking searchResult : searchResults)\n 99        {\n100           BookingDTO dto = new BookingDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, BookingDTO dto)\n110     {\n111        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Booking entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.BookingDTO;\n25  import org.jboss.examples.ticketmonster.model.Booking;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/bookings\")\n32  public class BookingEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(BookingDTO dto)\n40     {\n41        Booking entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(BookingDTO dto)\n40     {\n41        Booking entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(BookingEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Booking entity = em.find(Booking.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "50        Booking entity = em.find(Booking.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Booking entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "26  \n27  /**\n28   * <p>\n29   *     A JAX-RS endpoint for handling {@link Booking}s. Inherits the GET\n30   *     methods from {@link BaseEntityService}, and implements additional REST methods.\n31   * </p>\n32   *\n33   * @author Marius Bogoevici\n34   * @author Pete Muir\n35   */\n36  @Path(\"/bookings\")\n37  /**\n38   * <p>\n39   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n40   * </p>\n41   */\n42  @Stateless\n43  public class BookingService extends BaseEntityService<Booking> {\n44  \n45      @Inject\n46      SeatAllocationService seatAllocationService;"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "70      }\n71  \n72      /**\n73       * <p>\n74       * Delete a booking by id\n75       * </p>\n76       * @param id\n77       * @return\n78       */\n79      @DELETE\n80      @Path(\"/{id:[0-9][0-9]*}\")\n81      public Response deleteBooking(@PathParam(\"id\") Long id) {\n82          Booking booking = getEntityManager().find(Booking.class, id);\n83          if (booking == null) {\n84              return Response.status(Response.Status.NOT_FOUND).build();\n85          }\n86          getEntityManager().remove(booking);\n87          // Group together seats by section so that we can deallocate them in a group\n88          Map<Section, List<Seat>> seatsBySection = new TreeMap<Section, java.util.List<Seat>>(SectionComparator.instance());\n89          for (Ticket ticket : booking.getTickets()) {\n90              List<Seat> seats = seatsBySection.get(ticket.getSeat().getSection());"
        lineNumber: 80
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "12  \n13  import org.jboss.examples.ticketmonster.service.BotService;\n14  \n15  /**\n16   * A non-RESTful service for providing the current state of the Bot. This service also allows the bot to be started, stopped or\n17   * the existing bookings to be deleted.\n18   * \n19   * @author Vineet Reynolds\n20   * \n21   */\n22  @Path(\"/bot\")\n23  public class BotStatusService {\n24  \n25      @Inject\n26      private BotService botService;\n27  \n28      /**\n29       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n30       * \n31       * @return The JSON representation of the Bot's log\n32       */"
        lineNumber: 22
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "23  public class BotStatusService {\n24  \n25      @Inject\n26      private BotService botService;\n27  \n28      /**\n29       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n30       * \n31       * @return The JSON representation of the Bot's log\n32       */\n33      @Path(\"messages\")\n34      @GET\n35      @Produces(MediaType.APPLICATION_JSON)\n36      public List<String> getMessages() {\n37          return botService.fetchLog();\n38      }\n39  \n40      /**\n41       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n42       * the bot is active.\n43       * "
        lineNumber: 33
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "36      public List<String> getMessages() {\n37          return botService.fetchLog();\n38      }\n39  \n40      /**\n41       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n42       * the bot is active.\n43       * \n44       * @return The represntation of the Bot's current state.\n45       */\n46      @Path(\"status\")\n47      @GET\n48      @Produces(MediaType.APPLICATION_JSON)\n49      public Response getBotStatus() {\n50          BotState state = botService.isBotActive() ? BotState.RUNNING\n51              : BotState.NOT_RUNNING;\n52          return Response.ok(state).build();\n53      }\n54  \n55      /**\n56       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and"
        lineNumber: 46
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "52          return Response.ok(state).build();\n53      }\n54  \n55      /**\n56       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and\n57       * delete all existing bookings.\n58       * \n59       * @param updatedStatus The new state of the Bot. Only the state property is considered; any messages provided are ignored.\n60       * @return An empty HTTP 201 response.\n61       */\n62      @Path(\"status\")\n63      @PUT\n64      public Response updateBotStatus(BotState updatedState) {\n65          if (updatedState.equals(BotState.RUNNING)) {\n66              botService.start();\n67          } else if (updatedState.equals(BotState.NOT_RUNNING)) {\n68              botService.stop();\n69          } else if (updatedState.equals(BotState.RESET)) {\n70              botService.deleteAll();\n71          }\n72          return Response.noContent().build();"
        lineNumber: 62
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: " 97        final List<EventCategoryDTO> results = new ArrayList<EventCategoryDTO>();\n 98        for (EventCategory searchResult : searchResults)\n 99        {\n100           EventCategoryDTO dto = new EventCategoryDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, EventCategoryDTO dto)\n110     {\n111        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        EventCategory entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.EventCategoryDTO;\n25  import org.jboss.examples.ticketmonster.model.EventCategory;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/eventcategories\")\n32  public class EventCategoryEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventCategoryDTO dto)\n40     {\n41        EventCategory entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventCategoryDTO dto)\n40     {\n41        EventCategory entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(EventCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        EventCategory entity = em.find(EventCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "50        EventCategory entity = em.find(EventCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        EventCategory entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: " 97        final List<EventDTO> results = new ArrayList<EventDTO>();\n 98        for (Event searchResult : searchResults)\n 99        {\n100           EventDTO dto = new EventDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, EventDTO dto)\n110     {\n111        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Event entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.EventDTO;\n25  import org.jboss.examples.ticketmonster.model.Event;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/events\")\n32  public class EventEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventDTO dto)\n40     {\n41        Event entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(EventDTO dto)\n40     {\n41        Event entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(EventEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Event entity = em.find(Event.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "50        Event entity = em.find(Event.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Event entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
        codeSnip: "14  \n15  /**\n16   * <p>\n17   *     A JAX-RS endpoint for handling {@link Event}s. Inherits the actual\n18   *     methods from {@link BaseEntityService}, but implements additional search\n19   *     criteria.\n20   * </p>\n21   *\n22   * @author Marius Bogoevici\n23   */\n24  @Path(\"/events\")\n25  /**\n26   * <p>\n27   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n28   * </p>\n29   */\n30  @Stateless\n31  public class EventService extends BaseEntityService<Event> {\n32  \n33      public EventService() {\n34          super(Event.class);"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: " 97        final List<MediaItemDTO> results = new ArrayList<MediaItemDTO>();\n 98        for (MediaItem searchResult : searchResults)\n 99        {\n100           MediaItemDTO dto = new MediaItemDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, MediaItemDTO dto)\n110     {\n111        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        MediaItem entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.MediaItemDTO;\n25  import org.jboss.examples.ticketmonster.model.MediaItem;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/mediaitems\")\n32  public class MediaItemEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(MediaItemDTO dto)\n40     {\n41        MediaItem entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(MediaItemDTO dto)\n40     {\n41        MediaItem entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(MediaItemEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        MediaItem entity = em.find(MediaItem.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "50        MediaItem entity = em.find(MediaItem.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        MediaItem entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.ws.rs.GET;\n 8  import javax.ws.rs.Path;\n 9  import javax.ws.rs.PathParam;\n10  import javax.ws.rs.Produces;\n11  \n12  import org.jboss.examples.ticketmonster.model.MediaItem;\n13  import org.jboss.examples.ticketmonster.service.MediaManager;\n14  \n15  @Path(\"/media\")\n16  /**\n17   * <p>\n18   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n19   * </p>\n20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      "
        lineNumber: 15
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "19   * </p>\n20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      \n26      @Inject EntityManager entityManager;\n27  \n28      @GET\n29      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n30      @Produces(\"*/*\")\n31      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n32          return mediaManager.getCachedFile(cachedFileName);\n33      }\n34  \n35      @GET\n36      @Path(\"/{id:\\\\d*}\")\n37      @Produces(\"*/*\")\n38      public File getMediaContent(@PathParam(\"id\") Long id) {\n39          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());"
        lineNumber: 29
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "26      @Inject EntityManager entityManager;\n27  \n28      @GET\n29      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n30      @Produces(\"*/*\")\n31      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n32          return mediaManager.getCachedFile(cachedFileName);\n33      }\n34  \n35      @GET\n36      @Path(\"/{id:\\\\d*}\")\n37      @Produces(\"*/*\")\n38      public File getMediaContent(@PathParam(\"id\") Long id) {\n39          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());\n40      }\n41  }\n"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: "14  \n15  import org.jboss.examples.ticketmonster.model.Show;\n16  \n17  /**\n18   * A read-only REST resource that provides a collection of metrics for shows occuring in the future. Updates to metrics via\n19   * POST/PUT etc. are not allowed, since they are not meant to be computed by consumers.\n20   * \n21   * @author Vineet Reynolds\n22   * \n23   */\n24  @Path(\"/metrics\")\n25  @Stateless\n26  public class MetricsService {\n27  \n28      @Inject\n29      private EntityManager entityManager;\n30  \n31      /**\n32       * Retrieves a collection of metrics for Shows. Each metric in the collection contains\n33       * <ul>\n34       * <li>the show id,</li>"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "117        final List<PerformanceDTO> results = new ArrayList<PerformanceDTO>();\n118        for (Performance searchResult : searchResults)\n119        {\n120           PerformanceDTO dto = new PerformanceDTO(searchResult);\n121           results.add(dto);\n122        }\n123        return results;\n124     }\n125  \n126     @PUT\n127     @Path(\"/{id:[0-9][0-9]*}\")\n128     @Consumes(\"application/json\")\n129     public Response update(@PathParam(\"id\") Long id, PerformanceDTO dto)\n130     {\n131        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n132        findByIdQuery.setParameter(\"entityId\", id);\n133        Performance entity;\n134        try\n135        {\n136           entity = findByIdQuery.getSingleResult();\n137        }"
        lineNumber: 127
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "29  import org.jboss.examples.ticketmonster.rest.dto.PerformanceDTO;\n30  import org.jboss.examples.ticketmonster.model.Booking;\n31  import org.jboss.examples.ticketmonster.model.Performance;\n32  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n33  import org.jboss.examples.ticketmonster.model.Show;\n34  \n35  /**\n36   * \n37   */\n38  @Stateless\n39  @Path(\"/performances\")\n40  public class PerformanceEndpoint\n41  {\n42     @PersistenceContext(unitName = \"primary\")\n43     private EntityManager em;\n44  \n45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);\n50        em.persist(entity);\n51        return Response.created(UriBuilder.fromResource(PerformanceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n52     }\n53  \n54     @DELETE\n55     @Path(\"/{id:[0-9][0-9]*}\")\n56     public Response deleteById(@PathParam(\"id\") Long id)\n57     {\n58        Performance entity = em.find(Performance.class, id);\n59        if (entity == null)\n60        {\n61           return Response.status(Status.NOT_FOUND).build();\n62        }\n63        Show show = entity.getShow();\n64        show.getPerformances().remove(entity);\n65        entity.setShow(null);"
        lineNumber: 55
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "70        }\n71        List<Booking> bookings = findBookingsByPerformance(entity);\n72        for(Booking booking: bookings) {\n73           this.em.remove(booking);\n74        }\n75        em.remove(entity);\n76        return Response.noContent().build();\n77     }\n78  \n79     @GET\n80     @Path(\"/{id:[0-9][0-9]*}\")\n81     @Produces(\"application/json\")\n82     public Response findById(@PathParam(\"id\") Long id)\n83     {\n84        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n85        findByIdQuery.setParameter(\"entityId\", id);\n86        Performance entity;\n87        try\n88        {\n89           entity = findByIdQuery.getSingleResult();\n90        }"
        lineNumber: 80
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
        message: ""
        codeSnip: "22  import javax.ejb.Stateless;\n23  import javax.inject.Inject;\n24  import javax.ws.rs.GET;\n25  import javax.ws.rs.Path;\n26  import java.util.Map;\n27  \n28  /**\n29   * Created by ceposta \n30   * <a href=\"http://christianposta.com/blog>http://christianposta.com/blog</a>.\n31   */\n32  @Path(\"/ping\")\n33  @Stateless\n34  public class PingService {\n35      @Inject\n36      FF4j ff;\n37  \n38      @GET\n39      public String ping(){\n40          StringBuilder sb = new StringBuilder(\"pong: \");\n41  \n42          Map<String, Feature> features = ff.getFeatures();"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: " 97        final List<SectionAllocationDTO> results = new ArrayList<SectionAllocationDTO>();\n 98        for (SectionAllocation searchResult : searchResults)\n 99        {\n100           SectionAllocationDTO dto = new SectionAllocationDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, SectionAllocationDTO dto)\n110     {\n111        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        SectionAllocation entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.SectionAllocationDTO;\n25  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/sectionallocations\")\n32  public class SectionAllocationEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionAllocationDTO dto)\n40     {\n41        SectionAllocation entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionAllocationDTO dto)\n40     {\n41        SectionAllocation entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(SectionAllocationEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        SectionAllocation entity = em.find(SectionAllocation.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "50        SectionAllocation entity = em.find(SectionAllocation.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        SectionAllocation entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: " 97        final List<SectionDTO> results = new ArrayList<SectionDTO>();\n 98        for (Section searchResult : searchResults)\n 99        {\n100           SectionDTO dto = new SectionDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, SectionDTO dto)\n110     {\n111        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Section entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.SectionDTO;\n25  import org.jboss.examples.ticketmonster.model.Section;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/sections\")\n32  public class SectionEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionDTO dto)\n40     {\n41        Section entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(SectionDTO dto)\n40     {\n41        Section entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(SectionEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Section entity = em.find(Section.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "50        Section entity = em.find(Section.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Section entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: " 97        final List<ShowDTO> results = new ArrayList<ShowDTO>();\n 98        for (Show searchResult : searchResults)\n 99        {\n100           ShowDTO dto = new ShowDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, ShowDTO dto)\n110     {\n111        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Show entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.ShowDTO;\n25  import org.jboss.examples.ticketmonster.model.Show;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/shows\")\n32  public class ShowEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(ShowDTO dto)\n40     {\n41        Show entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(ShowDTO dto)\n40     {\n41        Show entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(ShowEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Show entity = em.find(Show.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "50        Show entity = em.find(Show.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Show entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "13  import javax.ws.rs.PathParam;\n14  import javax.ws.rs.Produces;\n15  import javax.ws.rs.core.MediaType;\n16  import javax.ws.rs.core.MultivaluedMap;\n17  \n18  import org.jboss.examples.ticketmonster.model.Show;\n19  \n20  /**\n21   * @author Marius Bogoevici\n22   */\n23  @Path(\"/shows\")\n24  /**\n25   * <p>\n26   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n27   * </p>\n28   */\n29  @Stateless\n30  public class ShowService extends BaseEntityService<Show> {\n31  \n32      public ShowService() {\n33          super(Show.class);"
        lineNumber: 23
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "47          }\n48  \n49          if (queryParameters.containsKey(\"event\")) {\n50              String event = queryParameters.getFirst(\"event\");\n51              predicates.add(criteriaBuilder.equal(root.get(\"event\").get(\"id\"), event));\n52          }\n53          return predicates.toArray(new Predicate[]{});\n54      }\n55  \n56      @GET\n57      @Path(\"/performance/{performanceId:[0-9][0-9]*}\")\n58      @Produces(MediaType.APPLICATION_JSON)\n59      public Show getShowByPerformance(@PathParam(\"performanceId\") Long performanceId) {\n60          Query query = getEntityManager().createQuery(\"select s from Show s where exists(select p from Performance p where p.show = s and p.id = :performanceId)\");\n61          query.setParameter(\"performanceId\", performanceId);\n62          return (Show) query.getSingleResult();\n63      }\n64  }\n"
        lineNumber: 57
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketCategoryDTO> results = new ArrayList<TicketCategoryDTO>();\n 98        for (TicketCategory searchResult : searchResults)\n 99        {\n100           TicketCategoryDTO dto = new TicketCategoryDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketCategoryDTO dto)\n110     {\n111        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        TicketCategory entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketCategoryDTO;\n25  import org.jboss.examples.ticketmonster.model.TicketCategory;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/ticketcategories\")\n32  public class TicketCategoryEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketCategoryDTO dto)\n40     {\n41        TicketCategory entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketCategoryDTO dto)\n40     {\n41        TicketCategory entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        TicketCategory entity = em.find(TicketCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "50        TicketCategory entity = em.find(TicketCategory.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        TicketCategory entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketDTO> results = new ArrayList<TicketDTO>();\n 98        for (Ticket searchResult : searchResults)\n 99        {\n100           TicketDTO dto = new TicketDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketDTO dto)\n110     {\n111        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Ticket entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketDTO;\n25  import org.jboss.examples.ticketmonster.model.Ticket;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/tickets\")\n32  public class TicketEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketDTO dto)\n40     {\n41        Ticket entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketDTO dto)\n40     {\n41        Ticket entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Ticket entity = em.find(Ticket.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "50        Ticket entity = em.find(Ticket.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Ticket entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: " 97        final List<TicketPriceDTO> results = new ArrayList<TicketPriceDTO>();\n 98        for (TicketPrice searchResult : searchResults)\n 99        {\n100           TicketPriceDTO dto = new TicketPriceDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, TicketPriceDTO dto)\n110     {\n111        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        TicketPrice entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.TicketPriceDTO;\n25  import org.jboss.examples.ticketmonster.model.TicketPrice;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"/ticketprices\")\n32  public class TicketPriceEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketPriceDTO dto)\n40     {\n41        TicketPrice entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(TicketPriceDTO dto)\n40     {\n41        TicketPrice entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(TicketPriceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        TicketPrice entity = em.find(TicketPrice.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "50        TicketPrice entity = em.find(TicketPrice.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        TicketPrice entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: " 97        final List<VenueDTO> results = new ArrayList<VenueDTO>();\n 98        for (Venue searchResult : searchResults)\n 99        {\n100           VenueDTO dto = new VenueDTO(searchResult);\n101           results.add(dto);\n102        }\n103        return results;\n104     }\n105  \n106     @PUT\n107     @Path(\"/{id:[0-9][0-9]*}\")\n108     @Consumes(\"application/json\")\n109     public Response update(@PathParam(\"id\") Long id, VenueDTO dto)\n110     {\n111        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n112        findByIdQuery.setParameter(\"entityId\", id);\n113        Venue entity;\n114        try\n115        {\n116           entity = findByIdQuery.getSingleResult();\n117        }"
        lineNumber: 107
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.Response.Status;\n23  import javax.ws.rs.core.UriBuilder;\n24  import org.jboss.examples.ticketmonster.rest.dto.VenueDTO;\n25  import org.jboss.examples.ticketmonster.model.Venue;\n26  \n27  /**\n28   * \n29   */\n30  @Stateless\n31  @Path(\"forge/venues\")\n32  public class VenueEndpoint\n33  {\n34     @PersistenceContext(unitName = \"primary\")\n35     private EntityManager em;\n36  \n37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(VenueDTO dto)\n40     {\n41        Venue entity = dto.fromDTO(null, em);"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "37     @POST\n38     @Consumes(\"application/json\")\n39     public Response create(VenueDTO dto)\n40     {\n41        Venue entity = dto.fromDTO(null, em);\n42        em.persist(entity);\n43        return Response.created(UriBuilder.fromResource(VenueEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n44     }\n45  \n46     @DELETE\n47     @Path(\"/{id:[0-9][0-9]*}\")\n48     public Response deleteById(@PathParam(\"id\") Long id)\n49     {\n50        Venue entity = em.find(Venue.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }"
        lineNumber: 47
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "50        Venue entity = em.find(Venue.class, id);\n51        if (entity == null)\n52        {\n53           return Response.status(Status.NOT_FOUND).build();\n54        }\n55        em.remove(entity);\n56        return Response.noContent().build();\n57     }\n58  \n59     @GET\n60     @Path(\"/{id:[0-9][0-9]*}\")\n61     @Produces(\"application/json\")\n62     public Response findById(@PathParam(\"id\") Long id)\n63     {\n64        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n65        findByIdQuery.setParameter(\"entityId\", id);\n66        Venue entity;\n67        try\n68        {\n69           entity = findByIdQuery.getSingleResult();\n70        }"
        lineNumber: 60
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
        codeSnip: " 6  import org.jboss.examples.ticketmonster.model.Venue;\n 7  \n 8  /**\n 9   * <p>\n10   *     A JAX-RS endpoint for handling {@link Venue}s. Inherits the actual\n11   *     methods from {@link BaseEntityService}.\n12   * </p>\n13   *\n14   * @author Marius Bogoevici\n15   */\n16  @Path(\"/venues\")\n17  /**\n18   * <p>\n19   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n20   * </p>\n21   */\n22  @Stateless\n23  public class VenueService extends BaseEntityService<Venue> {\n24  \n25      public VenueService() {\n26          super(Venue.class);"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "120  \n121      /**\n122       * <p>\n123       *   A method for counting all entities of a given type\n124       * </p>\n125       *\n126       * @param uriInfo application and request context information (see {@see UriInfo} class information for more details)\n127       * @return\n128       */\n129      @GET\n130      @Path(\"/count\")\n131      @Produces(MediaType.APPLICATION_JSON)\n132      public Map<String, Long> getCount(@Context UriInfo uriInfo) {\n133          CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n134          CriteriaQuery<Long> criteriaQuery = criteriaBuilder.createQuery(Long.class);\n135          Root<T> root = criteriaQuery.from(entityClass);\n136          criteriaQuery.select(criteriaBuilder.count(root));\n137          Predicate[] predicates = extractPredicates(uriInfo.getQueryParameters(), criteriaBuilder, root);\n138          criteriaQuery.where(predicates);\n139          Map<String, Long> result = new HashMap<String, Long>();\n140          result.put(\"count\", entityManager.createQuery(criteriaQuery).getSingleResult());"
        lineNumber: 130
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "156      }\n157  \n158      /**\n159       * <p>\n160       *     A method for retrieving individual entity instances.\n161       * </p>\n162       * @param id entity id\n163       * @return\n164       */\n165      @GET\n166      @Path(\"/{id:[0-9][0-9]*}\")\n167      @Produces(MediaType.APPLICATION_JSON)\n168      public T getSingleInstance(@PathParam(\"id\") Long id) {\n169          final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();\n170          final CriteriaQuery<T> criteriaQuery = criteriaBuilder.createQuery(entityClass);\n171          Root<T> root = criteriaQuery.from(entityClass);\n172          CriteriaQuery<T> select = criteriaQuery.select(criteriaQuery.getSelection());\n173          Predicate condition = criteriaBuilder.equal(root.get(\"id\"), id);\n174          select.where(condition);\n175          return entityManager.createQuery(criteriaQuery).getSingleResult();\n176      }"
        lineNumber: 166
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: " 98        final List<BookingDTO> results = new ArrayList<BookingDTO>();\n 99        for (Booking searchResult : searchResults)\n100        {\n101           BookingDTO dto = new BookingDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, BookingDTO dto)\n111     {\n112        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        Booking entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.Booking;\n23  import org.jboss.examples.ticketmonster.rest.dto.BookingDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"forge/bookings\")\n33  public class BookingEndpoint\n34  {\n35     @PersistenceContext\n36     private EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(BookingDTO dto)\n41     {\n42        Booking entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(BookingDTO dto)\n41     {\n42        Booking entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(BookingEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        Booking entity = em.find(Booking.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "51        Booking entity = em.find(Booking.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<Booking> findByIdQuery = em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        Booking entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "36  \n37  /**\n38   * <p>\n39   *     A JAX-RS endpoint for handling {@link Booking}s. Inherits the GET\n40   *     methods from {@link BaseEntityService}, and implements additional REST methods.\n41   * </p>\n42   *\n43   * @author Marius Bogoevici\n44   * @author Pete Muir\n45   */\n46  @Path(\"/bookings\")\n47  /**\n48   * <p>\n49   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n50   * </p>\n51   */\n52  @ApplicationScoped\n53  public class BookingService extends BaseEntityService<Booking> {\n54  \n55      @Inject\n56      SeatAllocationService seatAllocationService;"
        lineNumber: 46
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "76  \n77      /**\n78       * <p>\n79       * Delete a booking by id\n80       * </p>\n81       * @param id\n82       * @return\n83       */\n84      @DELETE\n85      @Transactional\n86      @Path(\"/{id:[0-9][0-9]*}\")\n87      public Response deleteBooking(@PathParam(\"id\") Long id) {\n88          Booking booking = getEntityManager().find(Booking.class, id);\n89          if (booking == null) {\n90              return Response.status(Response.Status.NOT_FOUND).build();\n91          }\n92          getEntityManager().remove(booking);\n93          // Group together seats by section so that we can deallocate them in a group\n94          Map<Section, List<Seat>> seatsBySection = new TreeMap<Section, java.util.List<Seat>>(SectionComparator.instance());\n95          for (Ticket ticket : booking.getTickets()) {\n96              List<Seat> seats = seatsBySection.get(ticket.getSeat().getSection());"
        lineNumber: 86
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "11  \n12  import java.util.List;\n13  \n14  /**\n15   * A non-RESTful service for providing the current state of the Bot. This service also allows the bot to be started, stopped or\n16   * the existing bookings to be deleted.\n17   * \n18   * @author Vineet Reynolds\n19   * \n20   */\n21  @Path(\"/bot\")\n22  public class BotStatusService {\n23  \n24      @Inject\n25      BotService botService;\n26  \n27      /**\n28       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n29       * \n30       * @return The JSON representation of the Bot's log\n31       */"
        lineNumber: 21
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "22  public class BotStatusService {\n23  \n24      @Inject\n25      BotService botService;\n26  \n27      /**\n28       * Produces a JSON representation of the bot's log, containing a maximum of 50 messages logged by the Bot.\n29       * \n30       * @return The JSON representation of the Bot's log\n31       */\n32      @Path(\"messages\")\n33      @GET\n34      @Produces(MediaType.APPLICATION_JSON)\n35      public List<String> getMessages() {\n36          return botService.fetchLog();\n37      }\n38  \n39      /**\n40       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n41       * the bot is active.\n42       * "
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "35      public List<String> getMessages() {\n36          return botService.fetchLog();\n37      }\n38  \n39      /**\n40       * Produces a representation of the bot's current state. This is a string - \"RUNNING\" or \"NOT_RUNNING\" depending on whether\n41       * the bot is active.\n42       * \n43       * @return The represntation of the Bot's current state.\n44       */\n45      @Path(\"status\")\n46      @GET\n47      @Produces(MediaType.APPLICATION_JSON)\n48      public Response getBotStatus() {\n49          BotState state = botService.isBotActive() ? BotState.RUNNING\n50              : BotState.NOT_RUNNING;\n51          return Response.ok(state).build();\n52      }\n53  \n54      /**\n55       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and"
        lineNumber: 45
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "51          return Response.ok(state).build();\n52      }\n53  \n54      /**\n55       * Updates the state of the Bot with the provided state. This may trigger the bot to start itself, stop itself, or stop and\n56       * delete all existing bookings.\n57       * \n58       * @param updatedStatus The new state of the Bot. Only the state property is considered; any messages provided are ignored.\n59       * @return An empty HTTP 201 response.\n60       */\n61      @Path(\"status\")\n62      @PUT\n63      public Response updateBotStatus(BotState updatedState) {\n64          if (updatedState.equals(BotState.RUNNING)) {\n65              botService.start();\n66          } else if (updatedState.equals(BotState.NOT_RUNNING)) {\n67              botService.stop();\n68          } else if (updatedState.equals(BotState.RESET)) {\n69              botService.deleteAll();\n70          }\n71          return Response.noContent().build();"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: " 98        final List<EventCategoryDTO> results = new ArrayList<EventCategoryDTO>();\n 99        for (EventCategory searchResult : searchResults)\n100        {\n101           EventCategoryDTO dto = new EventCategoryDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, EventCategoryDTO dto)\n111     {\n112        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        EventCategory entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.EventCategory;\n23  import org.jboss.examples.ticketmonster.rest.dto.EventCategoryDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/eventcategories\")\n33  public class EventCategoryEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(EventCategoryDTO dto)\n41     {\n42        EventCategory entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(EventCategoryDTO dto)\n41     {\n42        EventCategory entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(EventCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        EventCategory entity = em.find(EventCategory.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "51        EventCategory entity = em.find(EventCategory.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<EventCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        EventCategory entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: " 99        final List<EventDTO> results = new ArrayList<EventDTO>();\n100        for (Event searchResult : searchResults)\n101        {\n102           EventDTO dto = new EventDTO(searchResult);\n103           results.add(dto);\n104        }\n105        return results;\n106     }\n107  \n108     @PUT\n109     @Path(\"/{id:[0-9][0-9]*}\")\n110     @Consumes(\"application/json\")\n111     public Response update(@PathParam(\"id\") Long id, EventDTO dto)\n112     {\n113        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n114        findByIdQuery.setParameter(\"entityId\", id);\n115        Event entity;\n116        try\n117        {\n118           entity = findByIdQuery.getSingleResult();\n119        }"
        lineNumber: 109
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "23  import org.jboss.examples.ticketmonster.model.Event;\n24  import org.jboss.examples.ticketmonster.rest.dto.EventDTO;\n25  \n26  import java.util.ArrayList;\n27  import java.util.List;\n28  \n29  /**\n30   * \n31   */\n32  @ApplicationScoped\n33  @Path(\"forge/events\")\n34  public class EventEndpoint\n35  {\n36     @PersistenceContext\n37     EntityManager em;\n38  \n39     @POST\n40     @Consumes(\"application/json\")\n41     public Response create(EventDTO dto)\n42     {\n43        Event entity = dto.fromDTO(null, em);"
        lineNumber: 33
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "39     @POST\n40     @Consumes(\"application/json\")\n41     public Response create(EventDTO dto)\n42     {\n43        Event entity = dto.fromDTO(null, em);\n44        em.persist(entity);\n45        return Response.created(UriBuilder.fromResource(EventEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n46     }\n47  \n48     @DELETE\n49     @Path(\"/{id:[0-9][0-9]*}\")\n50     public Response deleteById(@PathParam(\"id\") Long id)\n51     {\n52        Event entity = em.find(Event.class, id);\n53        if (entity == null)\n54        {\n55           return Response.status(Status.NOT_FOUND).build();\n56        }\n57        em.remove(entity);\n58        return Response.noContent().build();\n59     }"
        lineNumber: 49
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "52        Event entity = em.find(Event.class, id);\n53        if (entity == null)\n54        {\n55           return Response.status(Status.NOT_FOUND).build();\n56        }\n57        em.remove(entity);\n58        return Response.noContent().build();\n59     }\n60  \n61     @GET\n62     @Path(\"/{id:[0-9][0-9]*}\")\n63     @Produces(\"application/json\")\n64     public Response findById(@PathParam(\"id\") Long id)\n65     {\n66        TypedQuery<Event> findByIdQuery = em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n67        findByIdQuery.setParameter(\"entityId\", id);\n68        Event entity;\n69        try\n70        {\n71           entity = findByIdQuery.getSingleResult();\n72        }"
        lineNumber: 62
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
        codeSnip: "13  \n14  /**\n15   * <p>\n16   *     A JAX-RS endpoint for handling {@link Event}s. Inherits the actual\n17   *     methods from {@link BaseEntityService}, but implements additional search\n18   *     criteria.\n19   * </p>\n20   *\n21   * @author Marius Bogoevici\n22   */\n23  @Path(\"/events\")\n24  /**\n25   * <p>\n26   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n27   * </p>\n28   */\n29  @ApplicationScoped\n30  public class EventService extends BaseEntityService<Event> {\n31  \n32      public EventService() {\n33          super(Event.class);"
        lineNumber: 23
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: " 98        final List<MediaItemDTO> results = new ArrayList<MediaItemDTO>();\n 99        for (MediaItem searchResult : searchResults)\n100        {\n101           MediaItemDTO dto = new MediaItemDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, MediaItemDTO dto)\n111     {\n112        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        MediaItem entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.MediaItem;\n23  import org.jboss.examples.ticketmonster.rest.dto.MediaItemDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/mediaitems\")\n33  public class MediaItemEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(MediaItemDTO dto)\n41     {\n42        MediaItem entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(MediaItemDTO dto)\n41     {\n42        MediaItem entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(MediaItemEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        MediaItem entity = em.find(MediaItem.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "51        MediaItem entity = em.find(MediaItem.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<MediaItem> findByIdQuery = em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        MediaItem entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 5  import jakarta.persistence.PersistenceContext;\n 6  import jakarta.ws.rs.GET;\n 7  import jakarta.ws.rs.Path;\n 8  import jakarta.ws.rs.PathParam;\n 9  import jakarta.ws.rs.Produces;\n10  import org.jboss.examples.ticketmonster.model.MediaItem;\n11  import org.jboss.examples.ticketmonster.service.MediaManager;\n12  \n13  import java.io.File;\n14  \n15  @Path(\"/media\")\n16  /**\n17   * <p>\n18   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n19   * </p>\n20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      "
        lineNumber: 15
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "20   */\n21  public class MediaService {\n22      \n23      @Inject\n24      private MediaManager mediaManager;\n25      \n26      @PersistenceContext\n27      EntityManager entityManager;\n28  \n29      @GET\n30      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n31      @Produces(\"*/*\")\n32      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n33          return mediaManager.getCachedFile(cachedFileName);\n34      }\n35  \n36      @GET\n37      @Path(\"/{id:\\\\d*}\")\n38      @Produces(\"*/*\")\n39      public File getMediaContent(@PathParam(\"id\") Long id) {\n40          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());"
        lineNumber: 30
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "27      EntityManager entityManager;\n28  \n29      @GET\n30      @Path(\"/cache/{cachedFileName:\\\\S*}\")\n31      @Produces(\"*/*\")\n32      public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n33          return mediaManager.getCachedFile(cachedFileName);\n34      }\n35  \n36      @GET\n37      @Path(\"/{id:\\\\d*}\")\n38      @Produces(\"*/*\")\n39      public File getMediaContent(@PathParam(\"id\") Long id) {\n40          return mediaManager.getCachedFile(mediaManager.getPath(entityManager.find(MediaItem.class, id)).getUrl());\n41      }\n42  }\n"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: "16  import java.util.List;\n17  import java.util.Map;\n18  \n19  /**\n20   * A read-only REST resource that provides a collection of metrics for shows occuring in the future. Updates to metrics via\n21   * POST/PUT etc. are not allowed, since they are not meant to be computed by consumers.\n22   * \n23   * @author Vineet Reynolds\n24   * \n25   */\n26  @Path(\"/metrics\")\n27  @ApplicationScoped\n28  public class MetricsService {\n29  \n30      @Inject\n31      private EntityManager entityManager;\n32  \n33      /**\n34       * Retrieves a collection of metrics for Shows. Each metric in the collection contains\n35       * <ul>\n36       * <li>the show id,</li>"
        lineNumber: 26
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "117        final List<PerformanceDTO> results = new ArrayList<PerformanceDTO>();\n118        for (Performance searchResult : searchResults)\n119        {\n120           PerformanceDTO dto = new PerformanceDTO(searchResult);\n121           results.add(dto);\n122        }\n123        return results;\n124     }\n125  \n126     @PUT\n127     @Path(\"/{id:[0-9][0-9]*}\")\n128     @Consumes(\"application/json\")\n129     public Response update(@PathParam(\"id\") Long id, PerformanceDTO dto)\n130     {\n131        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n132        findByIdQuery.setParameter(\"entityId\", id);\n133        Performance entity;\n134        try\n135        {\n136           entity = findByIdQuery.getSingleResult();\n137        }"
        lineNumber: 127
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "29  import org.jboss.examples.ticketmonster.model.Show;\n30  import org.jboss.examples.ticketmonster.rest.dto.PerformanceDTO;\n31  \n32  import java.util.ArrayList;\n33  import java.util.List;\n34  \n35  /**\n36   * \n37   */\n38  @ApplicationScoped\n39  @Path(\"/performances\")\n40  public class PerformanceEndpoint\n41  {\n42     @PersistenceContext\n43     EntityManager em;\n44  \n45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "45     @POST\n46     @Consumes(\"application/json\")\n47     public Response create(PerformanceDTO dto)\n48     {\n49        Performance entity = dto.fromDTO(null, em);\n50        em.persist(entity);\n51        return Response.created(UriBuilder.fromResource(PerformanceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n52     }\n53  \n54     @DELETE\n55     @Path(\"/{id:[0-9][0-9]*}\")\n56     public Response deleteById(@PathParam(\"id\") Long id)\n57     {\n58        Performance entity = em.find(Performance.class, id);\n59        if (entity == null)\n60        {\n61           return Response.status(Status.NOT_FOUND).build();\n62        }\n63        Show show = entity.getShow();\n64        show.getPerformances().remove(entity);\n65        entity.setShow(null);"
        lineNumber: 55
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "70        }\n71        List<Booking> bookings = findBookingsByPerformance(entity);\n72        for(Booking booking: bookings) {\n73           this.em.remove(booking);\n74        }\n75        em.remove(entity);\n76        return Response.noContent().build();\n77     }\n78  \n79     @GET\n80     @Path(\"/{id:[0-9][0-9]*}\")\n81     @Produces(\"application/json\")\n82     public Response findById(@PathParam(\"id\") Long id)\n83     {\n84        TypedQuery<Performance> findByIdQuery = em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n85        findByIdQuery.setParameter(\"entityId\", id);\n86        Performance entity;\n87        try\n88        {\n89           entity = findByIdQuery.getSingleResult();\n90        }"
        lineNumber: 80
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: " 98        final List<SectionAllocationDTO> results = new ArrayList<SectionAllocationDTO>();\n 99        for (SectionAllocation searchResult : searchResults)\n100        {\n101           SectionAllocationDTO dto = new SectionAllocationDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, SectionAllocationDTO dto)\n111     {\n112        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        SectionAllocation entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n23  import org.jboss.examples.ticketmonster.rest.dto.SectionAllocationDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/sectionallocations\")\n33  public class SectionAllocationEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(SectionAllocationDTO dto)\n41     {\n42        SectionAllocation entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(SectionAllocationDTO dto)\n41     {\n42        SectionAllocation entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(SectionAllocationEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        SectionAllocation entity = em.find(SectionAllocation.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "51        SectionAllocation entity = em.find(SectionAllocation.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<SectionAllocation> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        SectionAllocation entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: " 98        final List<SectionDTO> results = new ArrayList<SectionDTO>();\n 99        for (Section searchResult : searchResults)\n100        {\n101           SectionDTO dto = new SectionDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, SectionDTO dto)\n111     {\n112        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        Section entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.Section;\n23  import org.jboss.examples.ticketmonster.rest.dto.SectionDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/sections\")\n33  public class SectionEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(SectionDTO dto)\n41     {\n42        Section entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(SectionDTO dto)\n41     {\n42        Section entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(SectionEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        Section entity = em.find(Section.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "51        Section entity = em.find(Section.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<Section> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        Section entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: " 98        final List<ShowDTO> results = new ArrayList<ShowDTO>();\n 99        for (Show searchResult : searchResults)\n100        {\n101           ShowDTO dto = new ShowDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, ShowDTO dto)\n111     {\n112        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        Show entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.Show;\n23  import org.jboss.examples.ticketmonster.rest.dto.ShowDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"forge/shows\")\n33  public class ShowEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(ShowDTO dto)\n41     {\n42        Show entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(ShowDTO dto)\n41     {\n42        Show entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(ShowEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        Show entity = em.find(Show.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "51        Show entity = em.find(Show.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<Show> findByIdQuery = em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        Show entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "12  import jakarta.ws.rs.core.MediaType;\n13  import jakarta.ws.rs.core.MultivaluedMap;\n14  import org.jboss.examples.ticketmonster.model.Show;\n15  \n16  import java.util.ArrayList;\n17  import java.util.List;\n18  \n19  /**\n20   * @author Marius Bogoevici\n21   */\n22  @Path(\"/shows\")\n23  /**\n24   * <p>\n25   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n26   * </p>\n27   */\n28  @ApplicationScoped\n29  public class ShowService extends BaseEntityService<Show> {\n30  \n31      public ShowService() {\n32          super(Show.class);"
        lineNumber: 22
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "46          }\n47  \n48          if (queryParameters.containsKey(\"event\")) {\n49              String event = queryParameters.getFirst(\"event\");\n50              predicates.add(criteriaBuilder.equal(root.get(\"event\").get(\"id\"), event));\n51          }\n52          return predicates.toArray(new Predicate[]{});\n53      }\n54  \n55      @GET\n56      @Path(\"/performance/{performanceId:[0-9][0-9]*}\")\n57      @Produces(MediaType.APPLICATION_JSON)\n58      public Show getShowByPerformance(@PathParam(\"performanceId\") Long performanceId) {\n59          Query query = getEntityManager().createQuery(\"select s from Show s where exists(select p from Performance p where p.show = s and p.id = :performanceId)\");\n60          query.setParameter(\"performanceId\", performanceId);\n61          return (Show) query.getSingleResult();\n62      }\n63  }\n"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: " 98        final List<TicketCategoryDTO> results = new ArrayList<TicketCategoryDTO>();\n 99        for (TicketCategory searchResult : searchResults)\n100        {\n101           TicketCategoryDTO dto = new TicketCategoryDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, TicketCategoryDTO dto)\n111     {\n112        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        TicketCategory entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.TicketCategory;\n23  import org.jboss.examples.ticketmonster.rest.dto.TicketCategoryDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/ticketcategories\")\n33  public class TicketCategoryEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketCategoryDTO dto)\n41     {\n42        TicketCategory entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketCategoryDTO dto)\n41     {\n42        TicketCategory entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(TicketCategoryEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        TicketCategory entity = em.find(TicketCategory.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "51        TicketCategory entity = em.find(TicketCategory.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<TicketCategory> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        TicketCategory entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: " 98        final List<TicketDTO> results = new ArrayList<TicketDTO>();\n 99        for (Ticket searchResult : searchResults)\n100        {\n101           TicketDTO dto = new TicketDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, TicketDTO dto)\n111     {\n112        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        Ticket entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.Ticket;\n23  import org.jboss.examples.ticketmonster.rest.dto.TicketDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/tickets\")\n33  public class TicketEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketDTO dto)\n41     {\n42        Ticket entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketDTO dto)\n41     {\n42        Ticket entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(TicketEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        Ticket entity = em.find(Ticket.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "51        Ticket entity = em.find(Ticket.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<Ticket> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        Ticket entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: " 98        final List<TicketPriceDTO> results = new ArrayList<TicketPriceDTO>();\n 99        for (TicketPrice searchResult : searchResults)\n100        {\n101           TicketPriceDTO dto = new TicketPriceDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, TicketPriceDTO dto)\n111     {\n112        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        TicketPrice entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.TicketPrice;\n23  import org.jboss.examples.ticketmonster.rest.dto.TicketPriceDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"/ticketprices\")\n33  public class TicketPriceEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketPriceDTO dto)\n41     {\n42        TicketPrice entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(TicketPriceDTO dto)\n41     {\n42        TicketPrice entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(TicketPriceEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        TicketPrice entity = em.find(TicketPrice.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "51        TicketPrice entity = em.find(TicketPrice.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<TicketPrice> findByIdQuery = em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        TicketPrice entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: " 98        final List<VenueDTO> results = new ArrayList<VenueDTO>();\n 99        for (Venue searchResult : searchResults)\n100        {\n101           VenueDTO dto = new VenueDTO(searchResult);\n102           results.add(dto);\n103        }\n104        return results;\n105     }\n106  \n107     @PUT\n108     @Path(\"/{id:[0-9][0-9]*}\")\n109     @Consumes(\"application/json\")\n110     public Response update(@PathParam(\"id\") Long id, VenueDTO dto)\n111     {\n112        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n113        findByIdQuery.setParameter(\"entityId\", id);\n114        Venue entity;\n115        try\n116        {\n117           entity = findByIdQuery.getSingleResult();\n118        }"
        lineNumber: 108
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "22  import org.jboss.examples.ticketmonster.model.Venue;\n23  import org.jboss.examples.ticketmonster.rest.dto.VenueDTO;\n24  \n25  import java.util.ArrayList;\n26  import java.util.List;\n27  \n28  /**\n29   * \n30   */\n31  @ApplicationScoped\n32  @Path(\"forge/venues\")\n33  public class VenueEndpoint\n34  {\n35     @PersistenceContext\n36     EntityManager em;\n37  \n38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(VenueDTO dto)\n41     {\n42        Venue entity = dto.fromDTO(null, em);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: ApplicationScoped
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "38     @POST\n39     @Consumes(\"application/json\")\n40     public Response create(VenueDTO dto)\n41     {\n42        Venue entity = dto.fromDTO(null, em);\n43        em.persist(entity);\n44        return Response.created(UriBuilder.fromResource(VenueEndpoint.class).path(String.valueOf(entity.getId())).build()).build();\n45     }\n46  \n47     @DELETE\n48     @Path(\"/{id:[0-9][0-9]*}\")\n49     public Response deleteById(@PathParam(\"id\") Long id)\n50     {\n51        Venue entity = em.find(Venue.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "51        Venue entity = em.find(Venue.class, id);\n52        if (entity == null)\n53        {\n54           return Response.status(Status.NOT_FOUND).build();\n55        }\n56        em.remove(entity);\n57        return Response.noContent().build();\n58     }\n59  \n60     @GET\n61     @Path(\"/{id:[0-9][0-9]*}\")\n62     @Produces(\"application/json\")\n63     public Response findById(@PathParam(\"id\") Long id)\n64     {\n65        TypedQuery<Venue> findByIdQuery = em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n66        findByIdQuery.setParameter(\"entityId\", id);\n67        Venue entity;\n68        try\n69        {\n70           entity = findByIdQuery.getSingleResult();\n71        }"
        lineNumber: 61
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
        codeSnip: " 5  import org.jboss.examples.ticketmonster.model.Venue;\n 6  \n 7  /**\n 8   * <p>\n 9   *     A JAX-RS endpoint for handling {@link Venue}s. Inherits the actual\n10   *     methods from {@link BaseEntityService}.\n11   * </p>\n12   *\n13   * @author Marius Bogoevici\n14   */\n15  @Path(\"/venues\")\n16  /**\n17   * <p>\n18   *     This is a stateless service, we declare it as an EJB for transaction demarcation\n19   * </p>\n20   */\n21  @ApplicationScoped\n22  public class VenueService extends BaseEntityService<Venue> {\n23  \n24      public VenueService() {\n25          super(Venue.class);"
        lineNumber: 15
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
    technology-usage-database-01100:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA entities
      - tag=Persistence=JPA entities
      - tag=Store=JPA entities
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/MySQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"none\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13               xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14               xsi:schemaLocation=\"\n 15          http://java.sun.com/xml/ns/persistence\n 16          http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n 17      <persistence-unit name=\"primary\">\n 18          <!-- If you are running in a production environment, add a managed\n 19  data source, this example data source is just for development and testing! -->\n 20          <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21  can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22          <jta-data-source>java:jboss/datasources/PostgreSQLDS</jta-data-source>\n 23          <properties>\n 24              <!-- Properties for Hibernate -->\n 25              <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26              <property name=\"hibernate.show_sql\" value=\"false\" />\n 27          </properties>\n 28      </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.1\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- If you are running in a production environment, add a managed \n 19           data source, this example data source is just for development and testing! -->\n 20        <!-- The datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n 21           can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml -->\n 22        <jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source>\n 23        <properties>\n 24           <!-- Properties for Hibernate -->\n 25           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 26           <property name=\"hibernate.show_sql\" value=\"false\" />\n 27        </properties>\n 28     </persistence-unit>\n 29  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 13
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 15
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. \n  3      and/or its affiliates, and individual contributors by the @authors tag. See \n  4      the copyright.txt in the distribution for a full listing of individual contributors. \n  5      Licensed under the Apache License, Version 2.0 (the \"License\"); you may not \n  6      use this file except in compliance with the License. You may obtain a copy \n  7      of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required \n  8      by applicable law or agreed to in writing, software distributed under the \n  9      License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS \n 10      OF ANY KIND, either express or implied. See the License for the specific \n 11      language governing permissions and limitations under the License. -->\n 12  <persistence version=\"2.0\"\n 13     xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n 14     xsi:schemaLocation=\"\n 15          http://xmlns.jcp.org/xml/ns/persistence\n 16          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n 17     <persistence-unit name=\"primary\">\n 18        <!-- We use a different datasource for tests, so as to not overwrite \n 19           production data. This is an unmanaged data source, backed by H2, an in memory \n 20           database. Production applications should use a managed datasource. -->\n 21        <!-- The datasource is deployed as WEB-INF/test-ds.xml, \n 22           you can find it in the source at src/test/resources/test-ds.xml -->\n 23        <jta-data-source>java:jboss/datasources/TicketMonsterTestDS</jta-data-source>\n 24        <properties>\n 25           <!-- Properties for Hibernate -->\n 26           <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />\n 27           <property name=\"hibernate.show_sql\" value=\"false\" />\n 28        </properties>\n 29     </persistence-unit>\n 30  </persistence>\n"
        lineNumber: 16
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    technology-usage-database-01200:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA named queries
      - tag=Persistence=JPA named queries
      - tag=Store=JPA named queries
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: "27   * </p>\n28   * \n29   * <p>\n30   * Booking's principle members are a <em>set</em> of tickets, and the performance for which the tickets are booked. It also\n31   * contains meta-data about the booking, including a contact for the booking, a booking date and a cancellation code\n32   * </p>\n33   * \n34   * @author Marius Bogoevici\n35   */\n36  @SuppressWarnings(\"serial\")\n37  @Entity\n38  public class Booking implements Serializable {\n39  \n40      /* Declaration of fields */\n41  \n42      /**\n43       * The synthetic ID of the object.\n44       */\n45      @Id\n46      @GeneratedValue(strategy = IDENTITY)\n47      private Long id;"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: "25   * \n26   * @author Shane Bryzak\n27   * @author Marius Bogoevici\n28   * @author Pete Muir\n29   */\n30  /*\n31   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n32   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n33   */\n34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  public class Event implements Serializable {\n37  \n38      /* Declaration of fields */\n39  \n40      /**\n41       * The synthetic ID of the object.\n42       */\n43      @Id\n44      @GeneratedValue(strategy = IDENTITY)\n45      private Long id;"
        lineNumber: 35
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
        codeSnip: "21   * </p>\n22   * \n23   * @author Shane Bryzak\n24   * @author Pete Muir\n25   */\n26  /*\n27   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n28   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n29   */\n30  @SuppressWarnings(\"serial\")\n31  @Entity\n32  public class EventCategory implements Serializable {\n33  \n34      /* Declaration of fields */\n35      \n36      /**\n37       * The synthetic id of the object.\n38       */\n39      @Id\n40      @GeneratedValue(strategy = IDENTITY)\n41      private Long id;"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
        codeSnip: "24   * </p>\n25   * \n26   * @author Marius Bogoevici\n27   * @author Pete Muir\n28   */\n29  /*\n30   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n31   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n32   */\n33  @SuppressWarnings(\"serial\")\n34  @Entity\n35  public class MediaItem implements Serializable {\n36  \n37      /* Declaration of fields */\n38  \n39      /**\n40       * The synthetic id of the object.\n41       */\n42      @Id\n43      @GeneratedValue(strategy = IDENTITY)\n44      private Long id;"
        lineNumber: 34
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "28   * </p>\n29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */"
        lineNumber: 38
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object."
        lineNumber: 37
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "30   * </p>\n31   * \n32   * <p>\n33   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n34   * class level <code>@Table</code> constraint.\n35   * </p>\n36   * \n37   * @author Marius Bogoevici\n38   * @author Pete Muir\n39   */\n40  @Entity\n41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id"
        lineNumber: 40
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "31   * \n32   * <p>\n33   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n34   * class level <code>@Table</code> constraint.\n35   * </p>\n36   * \n37   * @author Marius Bogoevici\n38   * @author Pete Muir\n39   */\n40  @Entity\n41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id\n51      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 41
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "33   * </p>\n34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)\n54      private Long id;"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: "17   * \n18   * @author Shane Bryzak\n19   * @author Marius Bogoevici\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class Ticket implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
        codeSnip: "17   * </p>\n18   * \n19   * @author Shane Bryzak\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */\n47      @Id\n48      @GeneratedValue(strategy = IDENTITY)\n49      private Long id;"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
        codeSnip: "23   * </p>\n24   * \n25   * @author Shane Bryzak\n26   * @author Pete Muir\n27   */\n28  /*\n29   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n30   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n31   */\n32  @SuppressWarnings(\"serial\")\n33  @Entity\n34  public class Venue implements Serializable {\n35  \n36      /* Declaration of fields */\n37  \n38      /**\n39       * The synthetic id of the object.\n40       */\n41      @Id\n42      @GeneratedValue(strategy = IDENTITY)\n43      private Long id;"
        lineNumber: 33
        variables:
          file: file:///opt/input/source/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: "27   * </p>\n28   * \n29   * <p>\n30   * Booking's principle members are a <em>set</em> of tickets, and the performance for which the tickets are booked. It also\n31   * contains meta-data about the booking, including a contact for the booking, a booking date and a cancellation code\n32   * </p>\n33   * \n34   * @author Marius Bogoevici\n35   */\n36  @SuppressWarnings(\"serial\")\n37  @Entity\n38  public class Booking implements Serializable {\n39  \n40      /* Declaration of fields */\n41  \n42      /**\n43       * The synthetic ID of the object.\n44       */\n45      @Id\n46      @GeneratedValue(strategy = IDENTITY)\n47      private Long id;"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: "25   * \n26   * @author Shane Bryzak\n27   * @author Marius Bogoevici\n28   * @author Pete Muir\n29   */\n30  /*\n31   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n32   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n33   */\n34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  public class Event implements Serializable {\n37  \n38      /* Declaration of fields */\n39  \n40      /**\n41       * The synthetic ID of the object.\n42       */\n43      @Id\n44      @GeneratedValue(strategy = IDENTITY)\n45      private Long id;"
        lineNumber: 35
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
        codeSnip: "21   * </p>\n22   * \n23   * @author Shane Bryzak\n24   * @author Pete Muir\n25   */\n26  /*\n27   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n28   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n29   */\n30  @SuppressWarnings(\"serial\")\n31  @Entity\n32  public class EventCategory implements Serializable {\n33  \n34      /* Declaration of fields */\n35      \n36      /**\n37       * The synthetic id of the object.\n38       */\n39      @Id\n40      @GeneratedValue(strategy = IDENTITY)\n41      private Long id;"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
        codeSnip: "24   * </p>\n25   * \n26   * @author Marius Bogoevici\n27   * @author Pete Muir\n28   */\n29  /*\n30   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n31   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n32   */\n33  @SuppressWarnings(\"serial\")\n34  @Entity\n35  public class MediaItem implements Serializable {\n36  \n37      /* Declaration of fields */\n38  \n39      /**\n40       * The synthetic id of the object.\n41       */\n42      @Id\n43      @GeneratedValue(strategy = IDENTITY)\n44      private Long id;"
        lineNumber: 34
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "28   * </p>\n29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */"
        lineNumber: 38
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object."
        lineNumber: 37
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "30   * </p>\n31   * \n32   * <p>\n33   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n34   * class level <code>@Table</code> constraint.\n35   * </p>\n36   * \n37   * @author Marius Bogoevici\n38   * @author Pete Muir\n39   */\n40  @Entity\n41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id"
        lineNumber: 40
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "31   * \n32   * <p>\n33   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n34   * class level <code>@Table</code> constraint.\n35   * </p>\n36   * \n37   * @author Marius Bogoevici\n38   * @author Pete Muir\n39   */\n40  @Entity\n41  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n42  public class SectionAllocation implements Serializable {\n43      public static final int EXPIRATION_TIME = 60 * 1000;\n44  \n45      /* Declaration of fields */\n46  \n47      /**\n48       * The synthetic id of the object.\n49       */\n50      @Id\n51      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 41
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "33   * </p>\n34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)\n54      private Long id;"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: "17   * \n18   * @author Shane Bryzak\n19   * @author Marius Bogoevici\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class Ticket implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
        codeSnip: "17   * </p>\n18   * \n19   * @author Shane Bryzak\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */\n47      @Id\n48      @GeneratedValue(strategy = IDENTITY)\n49      private Long id;"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
        codeSnip: "23   * </p>\n24   * \n25   * @author Shane Bryzak\n26   * @author Pete Muir\n27   */\n28  /*\n29   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n30   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n31   */\n32  @SuppressWarnings(\"serial\")\n33  @Entity\n34  public class Venue implements Serializable {\n35  \n36      /* Declaration of fields */\n37  \n38      /**\n39       * The synthetic id of the object.\n40       */\n41      @Id\n42      @GeneratedValue(strategy = IDENTITY)\n43      private Long id;"
        lineNumber: 33
        variables:
          file: file:///opt/input/source/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Allocation.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import jakarta.persistence.Entity;\n 4  import jakarta.persistence.GeneratedValue;\n 5  import jakarta.persistence.GenerationType;\n 6  import jakarta.persistence.Id;\n 7  import jakarta.persistence.ManyToOne;\n 8  \n 9  @Entity\n10  public class Allocation {\n11  \n12      @Id\n13      @GeneratedValue(strategy = GenerationType.IDENTITY)\n14      private long id;\n15  \n16      @ManyToOne\n17      private SectionAllocation sectionAllocation;\n18  \n19      private long row;"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Allocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * <p>\n29   * Booking's principle members are a <em>set</em> of tickets, and the performance for which the tickets are booked. It also\n30   * contains meta-data about the booking, including a contact for the booking, a booking date and a cancellation code\n31   * </p>\n32   * \n33   * @author Marius Bogoevici\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  public class Booking implements Serializable {\n38  \n39      /* Declaration of fields */\n40  \n41      /**\n42       * The synthetic ID of the object.\n43       */\n44      @Id\n45      @GeneratedValue(strategy = IDENTITY)\n46      private Long id;"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: "26   * \n27   * @author Shane Bryzak\n28   * @author Marius Bogoevici\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  public class Event implements Serializable {\n38  \n39      /* Declaration of fields */\n40  \n41      /**\n42       * The synthetic ID of the object.\n43       */\n44      @Id\n45      @GeneratedValue(strategy = IDENTITY)\n46      private Long id;"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
        codeSnip: "21   * </p>\n22   * \n23   * @author Shane Bryzak\n24   * @author Pete Muir\n25   */\n26  /*\n27   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n28   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n29   */\n30  @SuppressWarnings(\"serial\")\n31  @Entity\n32  public class EventCategory implements Serializable {\n33  \n34      /* Declaration of fields */\n35      \n36      /**\n37       * The synthetic id of the object.\n38       */\n39      @Id\n40      @GeneratedValue(strategy = IDENTITY)\n41      private Long id;"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
        codeSnip: "24   * </p>\n25   * \n26   * @author Marius Bogoevici\n27   * @author Pete Muir\n28   */\n29  /*\n30   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n31   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n32   */\n33  @SuppressWarnings(\"serial\")\n34  @Entity\n35  public class MediaItem implements Serializable {\n36  \n37      /* Declaration of fields */\n38  \n39      /**\n40       * The synthetic id of the object.\n41       */\n42      @Id\n43      @GeneratedValue(strategy = IDENTITY)\n44      private Long id;"
        lineNumber: 34
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "28   * </p>\n29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */"
        lineNumber: 38
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: "29   * \n30   * @author Marius Bogoevici\n31   * @author Pete Muir\n32   */\n33  /*\n34   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n35   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n36   */\n37  @SuppressWarnings(\"serial\")\n38  @Entity\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"date\", \"show_id\" }))\n40  // TODO Document use of @JsonIgnoreProperties\n41  @JsonIgnoreProperties(\"show\")\n42  public class Performance implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object.\n48       */\n49      @Id"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: "27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  @Table(uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n38  /*\n39   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n40   */\n41  @JsonIgnoreProperties(\"venue\")\n42  public class Section implements Serializable {\n43  \n44      /* Declaration of fields */\n45  \n46      /**\n47       * The synthetic id of the object."
        lineNumber: 37
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "34   * </p>\n35   * \n36   * <p>\n37   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n38   * class level <code>@Table</code> constraint.\n39   * </p>\n40   * \n41   * @author Marius Bogoevici\n42   * @author Pete Muir\n43   */\n44  @Entity\n45  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n46  public class SectionAllocation implements Serializable {\n47      public static final int EXPIRATION_TIME = 60 * 1000;\n48  \n49      /* Declaration of fields */\n50  \n51      /**\n52       * The synthetic id of the object.\n53       */\n54      @Id"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "35   * \n36   * <p>\n37   * The performance and section form the natural id of this entity, and therefore must be unique. JPA requires us to use the\n38   * class level <code>@Table</code> constraint.\n39   * </p>\n40   * \n41   * @author Marius Bogoevici\n42   * @author Pete Muir\n43   */\n44  @Entity\n45  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n46  public class SectionAllocation implements Serializable {\n47      public static final int EXPIRATION_TIME = 60 * 1000;\n48  \n49      /* Declaration of fields */\n50  \n51      /**\n52       * The synthetic id of the object.\n53       */\n54      @Id\n55      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 45
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "33   * </p>\n34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "34   * \n35   * @author Shane Bryzak\n36   * @author Pete Muir\n37   */\n38  /*\n39   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n40   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n41   */\n42  @SuppressWarnings(\"serial\")\n43  @Entity\n44  @Table(name=\"Appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n45  public class Show implements Serializable {\n46  \n47      /* Declaration of fields */\n48  \n49      /**\n50       * The synthetic id of the object.\n51       */\n52      @Id\n53      @GeneratedValue(strategy = IDENTITY)\n54      private Long id;"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: "17   * \n18   * @author Shane Bryzak\n19   * @author Marius Bogoevici\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class Ticket implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
        codeSnip: "17   * </p>\n18   * \n19   * @author Shane Bryzak\n20   * @author Pete Muir\n21   */\n22  /*\n23   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n24   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n25   */\n26  @SuppressWarnings(\"serial\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "26   * </p>\n27   * \n28   * @author Shane Bryzak\n29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */"
        lineNumber: 36
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: "29   * @author Pete Muir\n30   */\n31  /*\n32   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n33   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n34   */\n35  @SuppressWarnings(\"serial\")\n36  @Entity\n37  // TODO Document @JsonIgnoreProperties\n38  @JsonIgnoreProperties(\"show\")\n39  @Table(uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n40  public class TicketPrice implements Serializable {\n41  \n42      /* Declaration of fields */\n43  \n44      /**\n45       * The synthetic id of the object.\n46       */\n47      @Id\n48      @GeneratedValue(strategy = IDENTITY)\n49      private Long id;"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
        codeSnip: "22   * </p>\n23   * \n24   * @author Shane Bryzak\n25   * @author Pete Muir\n26   */\n27  /*\n28   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n29   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n30   */\n31  @SuppressWarnings(\"serial\")\n32  @Entity\n33  public class Venue implements Serializable {\n34  \n35      /* Declaration of fields */\n36  \n37      /**\n38       * The synthetic id of the object.\n39       */\n40      @Id\n41      @GeneratedValue(strategy = IDENTITY)\n42      private Long id;"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Class
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
        message: ""
        codeSnip: "27   * </p>\n28   * \n29   * <p>\n30   * Booking's principle members are a <em>set</em> of tickets, and the performanceId for which the tickets are booked. It also\n31   * contains meta-data about the booking, including a contact for the booking, a booking date and a cancellation code\n32   * </p>\n33   * \n34   * @author Marius Bogoevici\n35   */\n36  @SuppressWarnings(\"serial\")\n37  @Table(name=\"all_bookings\")\n38  @SelectQuery(\"SELECT b.id, b.cancellationCode AS cancellation_code, b.contactEmail AS contact_email, b.createdOn AS created_on, b.performance_id, e.name as performance_name \" +\n39          \"FROM legacyDS.Booking b \" +\n40          \"JOIN legacyDS.Performance p ON b.performance_id=p.id \" +\n41          \"JOIN legacyDS.Appearance s ON p.show_id = s.id \" +\n42          \"JOIN legacyDS.Event e ON s.event_id=e.id \" +\n43          \"UNION ALL \" +\n44          \"SELECT id, cancellation_code, contact_email, created_on, performance_id, performance_name \" +\n45          \"FROM ordersDS.booking;\")\n46  @InsertQuery(\"FOR EACH ROW \\n\"+\n47          \"BEGIN ATOMIC \\n\" +"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
        message: ""
        codeSnip: "40          \"JOIN legacyDS.Performance p ON b.performance_id=p.id \" +\n41          \"JOIN legacyDS.Appearance s ON p.show_id = s.id \" +\n42          \"JOIN legacyDS.Event e ON s.event_id=e.id \" +\n43          \"UNION ALL \" +\n44          \"SELECT id, cancellation_code, contact_email, created_on, performance_id, performance_name \" +\n45          \"FROM ordersDS.booking;\")\n46  @InsertQuery(\"FOR EACH ROW \\n\"+\n47          \"BEGIN ATOMIC \\n\" +\n48          \"INSERT INTO ordersDS.booking (id, performance_id, performance_name, cancellation_code, created_on, contact_email ) values (NEW.id, NEW.performance_id, NEW.performance_name, NEW.cancellation_code, NEW.created_on, NEW.contact_email);\\n\" +\n49          \"END\")\n50  @Entity\n51  public class Booking implements Serializable {\n52  \n53      /* Declaration of fields */\n54  \n55      @TableGenerator(name = \"booking\",\n56      table = \"id_generator\",\n57      pkColumnName = \"idKey\",\n58      valueColumnName = \"idvalue\",\n59      pkColumnValue = \"booking\",\n60      allocationSize = 1)"
        lineNumber: 50
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java
        message: ""
        codeSnip: "13   * See the License for the specific language governing permissions and\n14   * limitations under the License.\n15   */\n16  package org.ticketmonster.orders.domain;\n17  \n18  import org.teiid.spring.annotations.SelectQuery;\n19  \n20  import javax.persistence.Entity;\n21  import javax.persistence.Id;\n22  \n23  @Entity\n24  @SelectQuery(\"SELECT IDKEY, IDVALUE FROM ordersDS.id_generator\")\n25  public class IdGenerator {\n26  \t@Id\n27  \tprivate String idkey;\n28  \tprivate Long idvalue;\n29  \t\n30  \tpublic String getIdkey() {\n31  \t\treturn idkey;\n32  \t}\n33  \tpublic void setIdkey(String idkey) {"
        lineNumber: 23
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java
          kind: Class
          name: Entity
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
        message: ""
        codeSnip: "22   * \n23   * @author Shane Bryzak\n24   * @author Pete Muir\n25   */\n26  /*\n27   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n28   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n29   */\n30  @SuppressWarnings(\"serial\")\n31  @SelectQuery(\"SELECT s.id, s.description, s.name, s.numberOfRows AS number_of_rows, s.rowCapacity AS row_capacity, venue_id, v.name AS venue_name FROM legacyDS.Section s JOIN legacyDS.Venue v ON s.venue_id=v.id;\")\n32  @Entity\n33  @Table(name = \"section\", uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n34  /*\n35   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n36   */\n37  public class Section implements Serializable {\n38  \n39      /* Declaration of fields */\n40  \n41      /**\n42       * The synthetic id of the object."
        lineNumber: 32
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
        message: ""
        codeSnip: "23   * @author Shane Bryzak\n24   * @author Pete Muir\n25   */\n26  /*\n27   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n28   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n29   */\n30  @SuppressWarnings(\"serial\")\n31  @SelectQuery(\"SELECT s.id, s.description, s.name, s.numberOfRows AS number_of_rows, s.rowCapacity AS row_capacity, venue_id, v.name AS venue_name FROM legacyDS.Section s JOIN legacyDS.Venue v ON s.venue_id=v.id;\")\n32  @Entity\n33  @Table(name = \"section\", uniqueConstraints=@UniqueConstraint(columnNames={\"name\", \"venue_id\"}))\n34  /*\n35   * We indicate that some properties of the class shouldn't be marshalled in JSON format\n36   */\n37  public class Section implements Serializable {\n38  \n39      /* Declaration of fields */\n40  \n41      /**\n42       * The synthetic id of the object.\n43       */"
        lineNumber: 33
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
        message: ""
        codeSnip: "40          \"JOIN legacyDS.Appearance s ON p.show_id=s.id \" +\n41          \"JOIN legacyDS.Event e ON s.event_id=e.id;\")\n42  @InsertQuery(\"FOR EACH ROW \\n\"+\n43          \"BEGIN ATOMIC \\n\" +\n44          \"INSERT INTO legacyDS.SectionAllocation (id, allocated, occupiedCount, version, performance_id, section_id) values (NEW.id, NEW.allocated, NEW.occupied_count, NEW.version, NEW.performance_id, NEW.section_id);\\n\" +\n45          \"END\")\n46  @UpdateQuery(\"FOR EACH ROW \\n\" +\n47          \"BEGIN ATOMIC \\n \" +\n48          \"UPDATE legacyDS.SectionAllocation SET version=NEW.version, allocated=NEW.allocated, occupiedCount=NEW.occupied_count WHERE id=OLD.id;\" +\n49          \"END\")\n50  @Entity\n51  @Table(name=\"section_allocation\", uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n52  public class SectionAllocation implements Serializable {\n53      @Transient\n54      private static final int EXPIRATION_TIME = 60 * 1000;\n55  \n56      /* Declaration of fields */\n57  \n58      @TableGenerator(name = \"section_allocation\",\n59              table = \"id_generator\",\n60              pkColumnName = \"idKey\","
        lineNumber: 50
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Class
          name: SelectQuery
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
        message: ""
        codeSnip: "41          \"JOIN legacyDS.Event e ON s.event_id=e.id;\")\n42  @InsertQuery(\"FOR EACH ROW \\n\"+\n43          \"BEGIN ATOMIC \\n\" +\n44          \"INSERT INTO legacyDS.SectionAllocation (id, allocated, occupiedCount, version, performance_id, section_id) values (NEW.id, NEW.allocated, NEW.occupied_count, NEW.version, NEW.performance_id, NEW.section_id);\\n\" +\n45          \"END\")\n46  @UpdateQuery(\"FOR EACH ROW \\n\" +\n47          \"BEGIN ATOMIC \\n \" +\n48          \"UPDATE legacyDS.SectionAllocation SET version=NEW.version, allocated=NEW.allocated, occupiedCount=NEW.occupied_count WHERE id=OLD.id;\" +\n49          \"END\")\n50  @Entity\n51  @Table(name=\"section_allocation\", uniqueConstraints = @UniqueConstraint(columnNames = { \"performance_id\", \"section_id\" }))\n52  public class SectionAllocation implements Serializable {\n53      @Transient\n54      private static final int EXPIRATION_TIME = 60 * 1000;\n55  \n56      /* Declaration of fields */\n57  \n58      @TableGenerator(name = \"section_allocation\",\n59              table = \"id_generator\",\n60              pkColumnName = \"idKey\",\n61              valueColumnName = \"idvalue\","
        lineNumber: 51
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Class
          name: SelectQuery
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
        message: ""
        codeSnip: "34   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n35   */\n36  // todo note that this \"show\" is not the exact same show that we have in the backend\n37  // because it doesn't really represent a collection of performances; in this model, we don't\n38  // care about performances\n39  @SuppressWarnings(\"serial\")\n40  @SelectQuery(\"SELECT a.id, a.event_id, e.name AS event_name, a.venue_id, v.name AS venue_name \" +\n41          \"FROM legacyDS.Appearance a \" +\n42          \"JOIN legacyDS.Event e ON a.event_id=e.id \" +\n43          \"JOIN legacyDS.Venue v ON a.venue_id=v.id;\")\n44  @Entity\n45  @Table(name=\"appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n46  public class Show implements Serializable {\n47  \n48      /* Declaration of fields */\n49  \n50      /**\n51       * The synthetic id of the object.\n52       */\n53      @Id\n54      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
        message: ""
        codeSnip: "35   */\n36  // todo note that this \"show\" is not the exact same show that we have in the backend\n37  // because it doesn't really represent a collection of performances; in this model, we don't\n38  // care about performances\n39  @SuppressWarnings(\"serial\")\n40  @SelectQuery(\"SELECT a.id, a.event_id, e.name AS event_name, a.venue_id, v.name AS venue_name \" +\n41          \"FROM legacyDS.Appearance a \" +\n42          \"JOIN legacyDS.Event e ON a.event_id=e.id \" +\n43          \"JOIN legacyDS.Venue v ON a.venue_id=v.id;\")\n44  @Entity\n45  @Table(name=\"appearance\", uniqueConstraints = @UniqueConstraint(columnNames = { \"event_id\", \"venue_id\" }))\n46  public class Show implements Serializable {\n47  \n48      /* Declaration of fields */\n49  \n50      /**\n51       * The synthetic id of the object.\n52       */\n53      @Id\n54      @GeneratedValue(strategy = IDENTITY)\n55      private Long id;"
        lineNumber: 45
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
        message: ""
        codeSnip: "32          \"BEGIN ATOMIC \\n\" +\n33          \"INSERT INTO ordersDS.ticket (id, price, number,  row_number, section_id, ticket_category_id) values (NEW.id, CAST(NEW.price as float),  NEW.number,  NEW.row_number, NEW.section_id, NEW.ticket_category_id);\\n\" +\n34          \"END\")\n35  @UpdateQuery(\"FOR EACH ROW\\n\" +\n36          \"BEGIN\\n\" +\n37          \"  IF(changing.booking_id) \\n\" +\n38          \"  BEGIN\\n\" +\n39          \"      UPDATE ordersDS.ticket set booking_id=NEW.booking_id where id = old.id;\\n\" +\n40          \"  END\\n\" +\n41          \"END\")\n42  @Entity\n43  @Table(name = \"ticket\")\n44  public class Ticket implements Serializable {\n45  \n46      /* Declaration of fields */\n47  \n48      @TableGenerator(name = \"ticket\",\n49              table = \"id_generator\",\n50              pkColumnName = \"idKey\",\n51              valueColumnName = \"idvalue\",\n52              pkColumnValue = \"ticket\","
        lineNumber: 42
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
        message: ""
        codeSnip: "33          \"INSERT INTO ordersDS.ticket (id, price, number,  row_number, section_id, ticket_category_id) values (NEW.id, CAST(NEW.price as float),  NEW.number,  NEW.row_number, NEW.section_id, NEW.ticket_category_id);\\n\" +\n34          \"END\")\n35  @UpdateQuery(\"FOR EACH ROW\\n\" +\n36          \"BEGIN\\n\" +\n37          \"  IF(changing.booking_id) \\n\" +\n38          \"  BEGIN\\n\" +\n39          \"      UPDATE ordersDS.ticket set booking_id=NEW.booking_id where id = old.id;\\n\" +\n40          \"  END\\n\" +\n41          \"END\")\n42  @Entity\n43  @Table(name = \"ticket\")\n44  public class Ticket implements Serializable {\n45  \n46      /* Declaration of fields */\n47  \n48      @TableGenerator(name = \"ticket\",\n49              table = \"id_generator\",\n50              pkColumnName = \"idKey\",\n51              valueColumnName = \"idvalue\",\n52              pkColumnValue = \"ticket\",\n53              allocationSize = 1)"
        lineNumber: 43
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
        message: ""
        codeSnip: "16   * \n17   * @author Shane Bryzak\n18   * @author Pete Muir\n19   */\n20  /*\n21   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n22   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n23   */\n24  @SuppressWarnings(\"serial\")\n25  @SelectQuery(\"SELECT id, description FROM legacyDS.TicketCategory\")\n26  @Table(name = \"ticket_category\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 26
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
        message: ""
        codeSnip: "17   * @author Shane Bryzak\n18   * @author Pete Muir\n19   */\n20  /*\n21   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n22   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n23   */\n24  @SuppressWarnings(\"serial\")\n25  @SelectQuery(\"SELECT id, description FROM legacyDS.TicketCategory\")\n26  @Table(name = \"ticket_category\")\n27  @Entity\n28  public class TicketCategory implements Serializable {\n29  \n30      /* Declaration of fields */\n31  \n32      /**\n33       * The synthetic id of the object.\n34       */\n35      @Id\n36      @GeneratedValue(strategy = IDENTITY)\n37      private Long id;"
        lineNumber: 27
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
        message: ""
        codeSnip: "25   * @author Pete Muir\n26   */\n27  /*\n28   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n29   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n30   */\n31  \n32  // TODO ceposta: let's change this to be TicketPriceGuideEntry or something... it's not really the ticket price, that get\n33  // determined at checkout time what the actual ticket price is (ie, discounts, taxes, coupons, etc)\n34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  @JsonIgnoreProperties(\"show\")\n37  @Table(name = \"ticket_price_guide\", uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n38  @SelectQuery(\"SELECT id, CAST(price AS double), section_id, show_id, ticketCategory_id AS ticketcategory_id FROM legacyDS.TicketPrice\")\n39  public class TicketPriceGuide implements Serializable {\n40  \n41      /* Declaration of fields */\n42  \n43      /**\n44       * The synthetic id of the object.\n45       */"
        lineNumber: 35
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
      - uri: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
        message: ""
        codeSnip: "27  /*\n28   * We suppress the warning about not specifying a serialVersionUID, as we are still developing this app, and want the JVM to\n29   * generate the serialVersionUID for us. When we put this app into production, we'll generate and embed the serialVersionUID\n30   */\n31  \n32  // TODO ceposta: let's change this to be TicketPriceGuideEntry or something... it's not really the ticket price, that get\n33  // determined at checkout time what the actual ticket price is (ie, discounts, taxes, coupons, etc)\n34  @SuppressWarnings(\"serial\")\n35  @Entity\n36  @JsonIgnoreProperties(\"show\")\n37  @Table(name = \"ticket_price_guide\", uniqueConstraints = @UniqueConstraint(columnNames = { \"section_id\", \"show_id\", \"ticketcategory_id\" }))\n38  @SelectQuery(\"SELECT id, CAST(price AS double), section_id, show_id, ticketCategory_id AS ticketcategory_id FROM legacyDS.TicketPrice\")\n39  public class TicketPriceGuide implements Serializable {\n40  \n41      /* Declaration of fields */\n42  \n43      /**\n44       * The synthetic id of the object.\n45       */\n46      @Id\n47      @GeneratedValue(strategy = IDENTITY)"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Class
          name: SuppressWarnings
          package: org.ticketmonster.orders.domain
    technology-usage-database-01300:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=Persistence units
      - tag=Persistence=Persistence units
      - tag=Store=Persistence units
      incidents:
      - uri: file:///opt/input/source/backend-v1/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/main/resources/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v1/src/test/resources/META-INF/test-persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v1/target/classes/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v1/target/test-classes/META-INF/test-persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/resources-mysql/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/resources-postgresql/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/main/resources/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/src/test/resources/META-INF/test-persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/target/classes/META-INF/persistence.xml
        message: ""
      - uri: file:///opt/input/source/backend-v2/target/test-classes/META-INF/test-persistence.xml
        message: ""
    technology-usage-database-01500:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Database Driver=MySQL Driver
      - tag=Embedded=MySQL Driver
      - tag=Store=MySQL Driver
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - MySQL Driver
    technology-usage-database-03100:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Spring Data JPA
      - tag=Persistence=Spring Data JPA
      - tag=Store=Spring Data JPA
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Data JPA
    technology-usage-ejb-01400:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Execute=EJB Timer
      - tag=Java EE=EJB Timer
      - tag=Processing=EJB Timer
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - EJB Timer
    technology-usage-embedded-framework-08200:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Spring DI
      - tag=Execute=Spring DI
      - tag=Inversion of Control=Spring DI
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring DI
    technology-usage-embedded-framework-08400:
      description: ""
      labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Spring Web
      - tag=View=Spring Web
      - tag=Web=Spring Web
      incidents:
      - uri: ""
        message: ""
        variables:
          tags:
          - Spring Web
  errors:
    javase-01000: exit status 1
    javase-01100: exit status 1
  unmatched:
  - 3rd-party-01000
  - 3rd-party-02000
  - 3rd-party-03000
  - 3rd-party-04000
  - 3rd-party-05000
  - 3rd-party-06000
  - 3rd-party-07000
  - 3rd-party-08000
  - 3rd-party-09000
  - 3rd-party-10000
  - 3rd-party-11000
  - 3rd-party-12000
  - 3rd-party-13000
  - 3rd-party-14000
  - 3rd-party-15000
  - 3rd-party-16000
  - 3rd-party-17000
  - 3rd-party-18000
  - 3rd-party-19000
  - 3rd-party-spring-03002
  - apm-00000
  - apm-00001
  - apm-00002
  - apm-00003
  - clustering-00000
  - clustering-00001
  - configuration-management-0100
  - configuration-management-technology-usage-0100
  - connect-01400
  - connect-01500
  - connect-01600
  - connect-01700
  - connect-01800
  - connect-01900
  - connect-02000
  - connect-02100
  - connect-02200
  - connect-02300
  - connect-02400
  - connect-02500
  - connect-02600
  - connect-02700
  - connect-02800
  - connect-02900
  - database-01400
  - database-01400
  - database-01600
  - database-01700
  - database-01800
  - database-01805
  - database-01900
  - database-02000
  - database-02100
  - database-02200
  - database-02300
  - database-02400
  - database-02500
  - database-02600
  - database-02700
  - database-02800
  - database-02900
  - database-03100
  - embedded-cache-libraries-01000
  - embedded-cache-libraries-02000
  - embedded-cache-libraries-03000
  - embedded-cache-libraries-04000
  - embedded-cache-libraries-05000
  - embedded-cache-libraries-06000
  - embedded-cache-libraries-07000
  - embedded-cache-libraries-08000
  - embedded-cache-libraries-09000
  - embedded-cache-libraries-10000
  - embedded-cache-libraries-11000
  - embedded-cache-libraries-12000
  - embedded-cache-libraries-13000
  - embedded-cache-libraries-14000
  - embedded-cache-libraries-15000
  - embedded-cache-libraries-16000
  - embedded-framework-01000
  - embedded-framework-01010
  - embedded-framework-01100
  - embedded-framework-01200
  - embedded-framework-01300
  - embedded-framework-01400
  - embedded-framework-01500
  - embedded-framework-01600
  - embedded-framework-01700
  - embedded-framework-02000
  - embedded-framework-02200
  - embedded-framework-02300
  - embedded-framework-02400
  - embedded-framework-03000
  - embedded-framework-03100
  - embedded-framework-03200
  - embedded-framework-03300
  - embedded-framework-03400
  - embedded-framework-04700
  - embedded-framework-05000
  - embedded-framework-05100
  - embedded-framework-05300
  - embedded-framework-05400
  - embedded-framework-05500
  - embedded-framework-05600
  - embedded-framework-05700
  - embedded-framework-05800
  - embedded-framework-05900
  - embedded-framework-06000
  - embedded-framework-06100
  - embedded-framework-06200
  - embedded-framework-06300
  - embedded-framework-06400
  - embedded-framework-06500
  - embedded-framework-06600
  - embedded-framework-06700
  - embedded-framework-06800
  - embedded-framework-06900
  - embedded-framework-07000
  - embedded-framework-07100
  - embedded-framework-07200
  - embedded-framework-07300
  - embedded-framework-07400
  - embedded-framework-07500
  - embedded-framework-07600
  - embedded-framework-07700
  - embedded-framework-07800
  - embedded-framework-07900
  - embedded-framework-08000
  - embedded-framework-08100
  - embedded-framework-08300
  - embedded-framework-08500
  - embedded-framework-08600
  - embedded-framework-08700
  - embedded-framework-08800
  - embedded-framework-08900
  - embedded-framework-09000
  - embedded-framework-09100
  - embedded-framework-09300
  - embedded-framework-embedded-framework-02700
  - embedded-framework-embedded-framework-02800
  - embedded-framework-embedded-framework-02900
  - embedded-framework-embedded-framework-03000
  - embedded-framework-embedded-framework-03100
  - embedded-framework-embedded-framework-03200
  - embedded-framework-embedded-framework-03300
  - embedded-framework-embedded-framework-03400
  - embedded-framework-embedded-framework-03500
  - embedded-framework-embedded-framework-03600
  - embedded-framework-embedded-framework-03700
  - embedded-framework-embedded-framework-03800
  - embedded-framework-embedded-framework-03900
  - embedded-framework-embedded-framework-04000
  - embedded-framework-embedded-framework-04100
  - embedded-framework-embedded-framework-04200
  - embedded-framework-embedded-framework-04300
  - embedded-framework-embedded-framework-04400
  - embedded-framework-embedded-framework-04500
  - embedded-framework-embedded-framework-04600
  - embedded-framework-embedded-framework-09200
  - embedded-framework-embedded-framework-09300
  - integration-00001
  - integration-00002
  - integration-00003
  - integration-00004
  - integration-00005
  - integration-00006
  - integration-00007
  - integration-00008
  - integration-00009
  - integration-00010
  - integration-00011
  - integration-00012
  - integration-00013
  - integration-00014
  - integration-00015
  - integration-00016
  - integration-00017
  - javaee-technology-usage-00010
  - javaee-technology-usage-00011
  - javaee-technology-usage-00012
  - javaee-technology-usage-00013
  - javaee-technology-usage-00030
  - javaee-technology-usage-00031
  - javaee-technology-usage-00040
  - javaee-technology-usage-00050
  - javaee-technology-usage-00060
  - javaee-technology-usage-00070
  - javaee-technology-usage-00080
  - javaee-technology-usage-00090
  - javaee-technology-usage-00100
  - javaee-technology-usage-00130
  - javaee-technology-usage-00140
  - javaee-technology-usage-00150
  - javaee-technology-usage-00160
  - javaee-technology-usage-00170
  - javaee-technology-usage-00180
  - javaee-technology-usage-00190
  - javaee-technology-usage-00200
  - javaee-technology-usage-00220
  - javaee-technology-usage-00902
  - javaee-technology-usage-00903
  - javaee-technology-usage-00905
  - javaee-technology-usage-00906
  - javaee-technology-usage-00910
  - javaee-technology-usage-00911
  - javaee-technology-usage-00912
  - javaee-technology-usage-00913
  - javaee-technology-usage-00914
  - javaee-technology-usage-00915
  - javaee-technology-usage-00916
  - javaee-technology-usage-00917
  - javaee-technology-usage-00918
  - javaee-technology-usage-00926
  - javaee-technology-usage-00927
  - javaee-technology-usage-00928
  - javaee-technology-usage-00930
  - javaee-technology-usage-00931
  - javaee-technology-usage-00932
  - javaee-technology-usage-00950
  - javaee-technology-usage-00951
  - javaee-technology-usage-00952
  - javaee-technology-usage-00953
  - javaee-technology-usage-00954
  - javaee-technology-usage-00955
  - javaee-technology-usage-00956
  - javaee-technology-usage-00957
  - javaee-technology-usage-00958
  - javase-technology-usage-01000
  - jta-00020
  - jta-00030
  - jta-00040
  - jta-00050
  - jta-00060
  - jta-00070
  - jta-00080
  - jta-00090
  - jta-00100
  - jta-00110
  - jta-00120
  - jta-00130
  - jta-00140
  - jta-00150
  - jta-00160
  - jta-00170
  - jta-00180
  - jta-00190
  - jta-00200
  - jta-00210
  - logging-usage-00010
  - logging-usage-00020
  - logging-usage-00030
  - logging-usage-00040
  - logging-usage-00050
  - logging-usage-00080
  - logging-usage-00090
  - logging-usage-00100
  - logging-usage-00110
  - logging-usage-00120
  - logging-usage-00130
  - logging-usage-00140
  - logging-usage-00150
  - logging-usage-00160
  - logging-usage-00170
  - logging-usage-00180
  - logging-usage-00190
  - logging-usage-00200
  - logging-usage-00210
  - logging-usage-00220
  - logging-usage-00230
  - logging-usage-00240
  - logging-usage-00250
  - logging-usage-00260
  - logging-usage-00270
  - logging-usage-00280
  - logging-usage-00290
  - mvc-01000
  - mvc-01100
  - mvc-01200
  - mvc-01210
  - mvc-01300
  - mvc-01400
  - mvc-01500
  - mvc-01600
  - mvc-01700
  - mvc-01800
  - mvc-01900
  - mvc-02000
  - mvc-02100
  - mvc-02200
  - mvc-02300
  - mvc-02400
  - mvc-02500
  - mvc-02600
  - mvc-02700
  - mvc-02800
  - mvc-02900
  - mvc-03000
  - mvc-03100
  - mvc-03200
  - mvc-03300
  - mvc-03400
  - mvc-03500
  - mvc-03600
  - mvc-03700
  - mvc-03800
  - mvc-03900
  - mvc-04000
  - mvc-04100
  - mvc-04200
  - mvc-04300
  - mvc-04400
  - mvc-04500
  - mvc-04600
  - mvc-04700
  - mvc-04800
  - mvc-04900
  - mvc-05000
  - mvc-05100
  - mvc-05200
  - mvc-05300
  - mvc-05400
  - mvc-05500
  - mvc-05600
  - mvc-05700
  - mvc-05800
  - mvc-05900
  - mvc-06000
  - non-xml-technology-usage-05000
  - non-xml-technology-usage-06000
  - non-xml-technology-usage-12000
  - non-xml-technology-usage-13000
  - non-xml-technology-usage-14000
  - non-xml-technology-usage-18000
  - non-xml-technology-usage-19000
  - non-xml-technology-usage-21000
  - non-xml-technology-usage-22000
  - non-xml-technology-usage-23000
  - non-xml-technology-usage-24000
  - non-xml-technology-usage-25000
  - non-xml-technology-usage-26000
  - non-xml-technology-usage-27000
  - observability-0200
  - observability-technology-usage-0100
  - observability-technology-usage-0200
  - security-01100
  - security-01200
  - security-01300
  - security-01400
  - security-01500
  - security-01600
  - security-01700
  - security-01800
  - security-01900
  - security-02000
  - security-02100
  - security-02200
  - security-02300
  - security-02400
  - security-02500
  - security-02600
  - security-02700
  - security-02800
  - security-02900
  - security-03000
  - security-03100
  - security-03200
  - security-03300
  - security-03400
  - security-03500
  - security-03600
  - spring-catchall-00001
  - technology-usage-3rd-party-01000
  - technology-usage-3rd-party-02000
  - technology-usage-3rd-party-03000
  - technology-usage-3rd-party-04000
  - technology-usage-3rd-party-05000
  - technology-usage-3rd-party-06000
  - technology-usage-3rd-party-08000
  - technology-usage-3rd-party-09000
  - technology-usage-3rd-party-10000
  - technology-usage-3rd-party-11000
  - technology-usage-3rd-party-12000
  - technology-usage-3rd-party-13000
  - technology-usage-3rd-party-14000
  - technology-usage-3rd-party-15000
  - technology-usage-3rd-party-16000
  - technology-usage-3rd-party-17000
  - technology-usage-3rd-party-18000
  - technology-usage-3rd-party-19000
  - technology-usage-3rd-party-20000
  - technology-usage-3rd-party-spring-03002
  - technology-usage-apm-00010
  - technology-usage-apm-00020
  - technology-usage-apm-00030
  - technology-usage-apm-00040
  - technology-usage-clustering-01000
  - technology-usage-clustering-02000
  - technology-usage-connect-01100
  - technology-usage-connect-01101
  - technology-usage-connect-01200
  - technology-usage-connect-01300
  - technology-usage-connect-01400
  - technology-usage-connect-01500
  - technology-usage-connect-01600
  - technology-usage-connect-01700
  - technology-usage-connect-01800
  - technology-usage-connect-01900
  - technology-usage-connect-02000
  - technology-usage-connect-02100
  - technology-usage-connect-02200
  - technology-usage-connect-02300
  - technology-usage-connect-02400
  - technology-usage-connect-02500
  - technology-usage-connect-02600
  - technology-usage-connect-02700
  - technology-usage-connect-02800
  - technology-usage-connect-02900
  - technology-usage-database-01000
  - technology-usage-database-01001
  - technology-usage-database-01400
  - technology-usage-database-01600
  - technology-usage-database-01700
  - technology-usage-database-01800
  - technology-usage-database-01900
  - technology-usage-database-02000
  - technology-usage-database-02100
  - technology-usage-database-02200
  - technology-usage-database-02300
  - technology-usage-database-02400
  - technology-usage-database-02500
  - technology-usage-database-02600
  - technology-usage-database-02700
  - technology-usage-database-02800
  - technology-usage-database-02900
  - technology-usage-database-03000
  - technology-usage-database-03200
  - technology-usage-embedded-framework-01000
  - technology-usage-embedded-framework-01010
  - technology-usage-embedded-framework-01100
  - technology-usage-embedded-framework-01200
  - technology-usage-embedded-framework-01300
  - technology-usage-embedded-framework-01400
  - technology-usage-embedded-framework-01500
  - technology-usage-embedded-framework-01600
  - technology-usage-embedded-framework-01700
  - technology-usage-embedded-framework-02000
  - technology-usage-embedded-framework-02100
  - technology-usage-embedded-framework-02200
  - technology-usage-embedded-framework-02300
  - technology-usage-embedded-framework-02400
  - technology-usage-embedded-framework-04700
  - technology-usage-embedded-framework-05000
  - technology-usage-embedded-framework-05100
  - technology-usage-embedded-framework-05300
  - technology-usage-embedded-framework-05400
  - technology-usage-embedded-framework-05600
  - technology-usage-embedded-framework-05700
  - technology-usage-embedded-framework-05800
  - technology-usage-embedded-framework-05900
  - technology-usage-embedded-framework-06000
  - technology-usage-embedded-framework-06100
  - technology-usage-embedded-framework-06200
  - technology-usage-embedded-framework-06300
  - technology-usage-embedded-framework-06400
  - technology-usage-embedded-framework-06500
  - technology-usage-embedded-framework-06600
  - technology-usage-embedded-framework-06700
  - technology-usage-embedded-framework-06800
  - technology-usage-embedded-framework-06900
  - technology-usage-embedded-framework-07000
  - technology-usage-embedded-framework-07100
  - technology-usage-embedded-framework-07200
  - technology-usage-embedded-framework-07300
  - technology-usage-embedded-framework-07400
  - technology-usage-embedded-framework-07500
  - technology-usage-embedded-framework-07600
  - technology-usage-embedded-framework-07700
  - technology-usage-embedded-framework-07800
  - technology-usage-embedded-framework-07900
  - technology-usage-embedded-framework-08000
  - technology-usage-embedded-framework-08100
  - technology-usage-embedded-framework-08300
  - technology-usage-embedded-framework-08500
  - technology-usage-embedded-framework-08600
  - technology-usage-embedded-framework-08700
  - technology-usage-embedded-framework-08800
  - technology-usage-embedded-framework-08900
  - technology-usage-embedded-framework-09000
  - technology-usage-embedded-framework-09100
  - technology-usage-integration-00001
  - technology-usage-integration-00002
  - technology-usage-integration-00003
  - technology-usage-integration-00004
  - technology-usage-integration-00005
  - technology-usage-integration-00006
  - technology-usage-integration-00007
  - technology-usage-integration-00008
  - technology-usage-integration-00009
  - technology-usage-integration-00010
  - technology-usage-integration-00011
  - technology-usage-integration-00012
  - technology-usage-integration-00013
  - technology-usage-integration-00014
  - technology-usage-integration-00015
  - technology-usage-jta-00020
  - technology-usage-jta-00030
  - technology-usage-jta-00040
  - technology-usage-jta-00050
  - technology-usage-jta-00060
  - technology-usage-jta-00070
  - technology-usage-jta-00080
  - technology-usage-jta-00090
  - technology-usage-jta-00100
  - technology-usage-jta-00110
  - technology-usage-jta-00120
  - technology-usage-jta-00130
  - technology-usage-jta-00140
  - technology-usage-jta-00150
  - technology-usage-jta-00160
  - technology-usage-jta-00170
  - technology-usage-jta-00180
  - technology-usage-jta-00190
  - technology-usage-jta-00200
  - technology-usage-jta-00210
  - technology-usage-logging-00010
  - technology-usage-logging-000100
  - technology-usage-logging-000110
  - technology-usage-logging-000120
  - technology-usage-logging-000130
  - technology-usage-logging-000140
  - technology-usage-logging-000150
  - technology-usage-logging-000160
  - technology-usage-logging-000170
  - technology-usage-logging-000180
  - technology-usage-logging-000190
  - technology-usage-logging-00020
  - technology-usage-logging-000200
  - technology-usage-logging-000210
  - technology-usage-logging-000220
  - technology-usage-logging-000230
  - technology-usage-logging-000240
  - technology-usage-logging-000250
  - technology-usage-logging-000260
  - technology-usage-logging-000270
  - technology-usage-logging-000280
  - technology-usage-logging-000290
  - technology-usage-logging-00030
  - technology-usage-logging-00040
  - technology-usage-logging-00050
  - technology-usage-logging-00060
  - technology-usage-logging-00070
  - technology-usage-logging-00080
  - technology-usage-logging-00090
  - technology-usage-markup-01300
  - technology-usage-mvc-01000
  - technology-usage-mvc-01100
  - technology-usage-mvc-01200
  - technology-usage-mvc-01300
  - technology-usage-mvc-01400
  - technology-usage-mvc-01500
  - technology-usage-mvc-01600
  - technology-usage-mvc-01700
  - technology-usage-mvc-01800
  - technology-usage-mvc-01900
  - technology-usage-mvc-02000
  - technology-usage-mvc-02100
  - technology-usage-mvc-02200
  - technology-usage-mvc-02300
  - technology-usage-mvc-02400
  - technology-usage-mvc-02500
  - technology-usage-mvc-02600
  - technology-usage-mvc-02700
  - technology-usage-mvc-02800
  - technology-usage-mvc-02900
  - technology-usage-mvc-03000
  - technology-usage-mvc-03100
  - technology-usage-mvc-03200
  - technology-usage-mvc-03300
  - technology-usage-mvc-03400
  - technology-usage-mvc-03500
  - technology-usage-mvc-03600
  - technology-usage-mvc-03700
  - technology-usage-mvc-03800
  - technology-usage-mvc-03900
  - technology-usage-mvc-04000
  - technology-usage-mvc-04100
  - technology-usage-mvc-04300
  - technology-usage-mvc-04400
  - technology-usage-mvc-04500
  - technology-usage-mvc-04600
  - technology-usage-mvc-04700
  - technology-usage-mvc-04800
  - technology-usage-mvc-04900
  - technology-usage-mvc-05000
  - technology-usage-mvc-05100
  - technology-usage-mvc-05200
  - technology-usage-mvc-05300
  - technology-usage-mvc-05400
  - technology-usage-mvc-05500
  - technology-usage-mvc-05600
  - technology-usage-mvc-05700
  - technology-usage-mvc-05800
  - technology-usage-mvc-05900
  - technology-usage-mvc-06000
  - technology-usage-mvc-0x4200
  - technology-usage-security-01000
  - technology-usage-security-01100
  - technology-usage-security-01200
  - technology-usage-security-01300
  - technology-usage-security-01400
  - technology-usage-security-01500
  - technology-usage-security-01600
  - technology-usage-security-01700
  - technology-usage-security-01800
  - technology-usage-security-01900
  - technology-usage-security-02000
  - technology-usage-security-02100
  - technology-usage-security-02200
  - technology-usage-security-02300
  - technology-usage-security-02400
  - technology-usage-security-02500
  - technology-usage-security-02600
  - technology-usage-security-02700
  - technology-usage-security-02800
  - technology-usage-security-02900
  - technology-usage-security-03000
  - technology-usage-security-03100
  - technology-usage-security-03200
  - technology-usage-security-03300
  - technology-usage-security-03400
  - technology-usage-security-03500
  - technology-usage-test-frameworks-00010
  - technology-usage-test-frameworks-00020
  - technology-usage-test-frameworks-00030
  - technology-usage-test-frameworks-00040
  - technology-usage-test-frameworks-00050
  - technology-usage-test-frameworks-00060
  - technology-usage-test-frameworks-00070
  - technology-usage-test-frameworks-00080
  - technology-usage-test-frameworks-00090
  - technology-usage-test-frameworks-00100
  - technology-usage-test-frameworks-00110
  - technology-usage-test-frameworks-00120
  - technology-usage-test-frameworks-00130
  - technology-usage-test-frameworks-00140
  - technology-usage-test-frameworks-00150
  - technology-usage-test-frameworks-00160
  - technology-usage-test-frameworks-00170
  - technology-usage-test-frameworks-00180
  - technology-usage-test-frameworks-00190
  - technology-usage-test-frameworks-00200
  - technology-usage-test-frameworks-00210
  - technology-usage-test-frameworks-00220
  - technology-usage-test-frameworks-00230
  - technology-usage-test-frameworks-00240
  - technology-usage-test-frameworks-00250
  - technology-usage-test-frameworks-00260
  - technology-usage-test-frameworks-00270
  - technology-usage-test-frameworks-00280
  - technology-usage-test-frameworks-00290
  - technology-usage-test-frameworks-00300
  - technology-usage-test-frameworks-00310
  - technology-usage-test-frameworks-00320
  - technology-usage-test-frameworks-00330
  - technology-usage-test-frameworks-00340
  - technology-usage-test-frameworks-00350
  - technology-usage-test-frameworks-00360
  - technology-usage-test-frameworks-00370
  - technology-usage-web-01000
  - technology-usage-web-01100
  - technology-usage-web-01100
  - technology-usage-web-01200
  - technology-usage-web-01300
  - technology-usage-web-01300
  - technology-usage-web-01400
  - technology-usage-web-01400
  - technology-usage-web-01500
  - technology-usage-web-01500
  - technology-usage-web-01600
  - technology-usage-web-01600
  - technology-usage-web-01700
  - technology-usage-web-01700
  - technology-usage-web-01800
  - technology-usage-web-01800
  - technology-usage-web-01900
  - technology-usage-web-01900
  - technology-usage-web-02000
  - technology-usage-web-02000
  - technology-usage-web-02100
  - technology-usage-web-02100
  - technology-usage-web-02200
  - technology-usage-web-02200
  - technology-usage-web-02300
  - technology-usage-web-02300
  - technology-usage-web-02400
  - technology-usage-web-02400
  - test-frameworks-sauge-00010
  - test-frameworks-sauge-00020
  - test-frameworks-sauge-00030
  - test-frameworks-sauge-00040
  - test-frameworks-sauge-00050
  - test-frameworks-sauge-00060
  - test-frameworks-sauge-00070
  - test-frameworks-sauge-00080
  - test-frameworks-sauge-00090
  - test-frameworks-sauge-00100
  - test-frameworks-sauge-00110
  - test-frameworks-sauge-00120
  - test-frameworks-sauge-00130
  - test-frameworks-sauge-00140
  - test-frameworks-sauge-00150
  - test-frameworks-sauge-00160
  - test-frameworks-sauge-00170
  - test-frameworks-sauge-00180
  - test-frameworks-sauge-00190
  - test-frameworks-sauge-00200
  - test-frameworks-sauge-00210
  - test-frameworks-sauge-00220
  - test-frameworks-sauge-00230
  - test-frameworks-sauge-00240
  - test-frameworks-sauge-00260
  - test-frameworks-sauge-00270
  - test-frameworks-sauge-00280
  - test-frameworks-sauge-00290
  - test-frameworks-sauge-00300
  - test-frameworks-sauge-00310
  - test-frameworks-sauge-00320
  - test-frameworks-sauge-00330
  - test-frameworks-sauge-00340
  - test-frameworks-sauge-00350
  - test-frameworks-sauge-00360
  - test-frameworks-sauge-00370
  - test-frameworks-sauge-00560
  - web-01000
