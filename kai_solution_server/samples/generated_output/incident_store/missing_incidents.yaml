cloud-readiness:
  local-storage-00001:
    ticket-monster:
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - initial_branch: master
        line_number: 32
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - initial_branch: master
        line_number: 39
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
  localhost-http-00001:
    ejb-remote:
      client/src/main/java/org/jboss/as/quickstarts/ejb/remote/client/RemoteEJBClient.java:
      - initial_branch: main
        line_number: 115
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          matchingText: http://localhost:8080/wildfly-services");
      - initial_branch: main
        line_number: 118
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          matchingText: http://localhost:8080
      - initial_branch: main
        line_number: 157
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          matchingText: http://localhost:8080/wildfly-services");
      - initial_branch: main
        line_number: 160
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          matchingText: http://localhost:8080
    ejb-security:
      src/main/java/org/jboss/as/quickstarts/ejb_security/RemoteClient.java:
      - initial_branch: main
        line_number: 38
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          matchingText: http://localhost:8080
  session-00000:
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/web.xml:
      - initial_branch: main
        line_number: 5
        message: "\n Session replication ensures that client sessions are not disrupted\
          \ by node failure. Each node in the cluster shares information about ongoing\
          \ sessions and can take over sessions if another node disappears. In a cloud\
          \ environment, however, data in the memory of a running container can be\
          \ wiped out by a restart.\n\n Recommendations\n\n * Review the session replication\
          \ usage and ensure that it is configured properly.\n * Disable HTTP session\
          \ clustering and accept its implications.\n * Re-architect the application\
          \ so that sessions are stored in a cache backing service or a remote data\
          \ grid.\n\n A remote data grid has the following benefits:\n\n * The application\
          \ is more scaleable and elastic.\n * The application can survive EAP node\
          \ failures because a JVM failure does not cause session data loss.\n * Session\
          \ data can be shared by multiple applications.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: distributable
          innerText: ''
          matchingXML: ''
eap7/weblogic/tests/data:
  maven-javax-to-jakarta-00002:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: null
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with groupId `com.sun.activation`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          name: javax.activation.activation
          version: '1.1'
  maven-javax-to-jakarta-00004:
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 48
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: groupId>javax.enterprise<
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 130
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: groupId>javax.enterprise<
      - initial_branch: master
        line_number: 136
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: groupId>javax.inject<
      - initial_branch: master
        line_number: 142
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: groupId>javax.validation<
  maven-javax-to-jakarta-00006:
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 49
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: artifactId>cdi-api<
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 131
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: artifactId>cdi-api<
  maven-javax-to-jakarta-00007:
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 143
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: artifactId>validation-api<
  maven-javax-to-jakarta-00008:
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 137
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: artifactId>javax.inject<
eap8/eap7:
  javaee-to-jakarta-namespaces-00001:
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    kitchensink:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: 7.1
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: 7.1
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: 7.1
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: 7.1
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: 7.1
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: 7.1
        line_number: 23
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: main
        line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/test/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: main
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    ticket-monster:
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: master
        line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: master
        line_number: 7
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - initial_branch: master
        line_number: 8
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      monolith/src/main/webapp/WEB-INF/web.xml:
      - initial_branch: master
        line_number: 2
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
  javaee-to-jakarta-namespaces-00002:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 3
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 6
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      target/classes/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 3
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 6
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: 7.1
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: 7.1
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: 7.1
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    ticket-monster:
      monolith/src/main/resources/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/target/classes/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
  javaee-to-jakarta-namespaces-00006:
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 21
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: beans_1_1.xsd
    kitchensink:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: 7.1
        line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: beans_1_1.xsd
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: beans_1_1.xsd
      src/test/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: beans_1_1.xsd
    ticket-monster:
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: master
        line_number: 8
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: beans_1_1.xsd
  javaee-to-jakarta-namespaces-00017:
    ticket-monster:
      monolith/src/main/webapp/WEB-INF/web.xml:
      - initial_branch: master
        line_number: 2
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: web-app_3_1.xsd
  javaee-to-jakarta-namespaces-00021:
    kitchensink:
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: 7.1
        line_number: 23
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: web-facesconfig_2_2.xsd
    tasks-qute:
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: main
        line_number: 19
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: web-facesconfig_2_2.xsd
  javaee-to-jakarta-namespaces-00030:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 6
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: persistence_2_1.xsd
      target/classes/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 6
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: persistence_2_1.xsd
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: 7.1
        line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: persistence_2_1.xsd
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
    ticket-monster:
      monolith/src/main/resources/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
      monolith/target/classes/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: persistence_2_1.xsd
  javaee-to-jakarta-namespaces-00033:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 2
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: version="2.1"
      - initial_branch: main
        line_number: 8
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: persistence
          innerText: "\n    \n        java:jboss/datasources/CoolstoreDS\n       \
            \ \n            \n            \n        \n    \n"
          matchingXML: <persistence-unit name="primary"><jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source><properties><property
            name="javax.persistence.schema-generation.database.action" value="none"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      target/classes/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 2
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: version="2.1"
      - initial_branch: main
        line_number: 8
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: persistence
          innerText: "\n    \n        java:jboss/datasources/CoolstoreDS\n       \
            \ \n            \n            \n        \n    \n"
          matchingXML: <persistence-unit name="primary"><jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source><properties><property
            name="javax.persistence.schema-generation.database.action" value="none"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          matchingText: version="2.1"
      - initial_branch: main
        line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/GreeterQuickstartDS\n\
            \        \n            \n            \n            \n        \n    \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n            data source,\
            \ this example data source is just for development and testing! --><!--\
            \ The datasource is deployed as WEB-INF/greeter-quickstart-ds.xml,\n \
            \           you can find it in the source at src/main/webapp/WEB-INF/greeter-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/GreeterQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: 7.1
        line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          matchingText: version="2.1"
      - initial_branch: 7.1
        line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/KitchensinkQuickstartDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/kitchensink-quickstart-ds.xml, you\n\
            \         can find it in the source at src/main/webapp/WEB-INF/kitchensink-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/KitchensinkQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: version="2.1"
      - initial_branch: main
        line_number: 29
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TasksJsfQuickstartDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different\
            \ datasource for tests, so as to not overwrite\n         production data.\
            \ This is an unmanaged data source, backed by H2, an in memory\n     \
            \    database. Production applications should use a managed datasource.\
            \ --><!-- The datasource is deployed as WEB-INF/test-ds.xml,\n       \
            \  you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    ticket-monster:
      monolith/src/main/resources/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: version="2.1"
      - initial_branch: master
        line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      monolith/target/classes/META-INF/persistence.xml:
      - initial_branch: master
        line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          matchingText: version="2.1"
      - initial_branch: master
        line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
  javaee-to-jakarta-namespaces-00048:
    kitchensink:
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: 7.1
        line_number: 19
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: faces-config
          innerText: "\n\n    \n\n    \n\n"
          matchingXML: "<!-- This descriptor activates the JSF Servlet --><!-- Write\
            \ your navigation rules here. You are encouraged to use CDI\n        for\
            \ creating @Named managed beans. -->"
    tasks-qute:
      src/main/webapp/WEB-INF/faces-config.xml:
      - initial_branch: main
        line_number: 18
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          matchingText: version="2.2"
      - initial_branch: main
        line_number: 22
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: faces-config
          innerText: "\n\n    \n        /index.xhtml\n        \n            #{authController.authenticate(username)}\n\
            \            #{authController.logged}\n            /tasks.xhtml\n    \
            \        \n        \n    \n\n    \n        /tasks.xhtml\n        \n  \
            \          #{authController.logout}\n            #{!authController.logged}\n\
            \            /index.xhtml\n            \n        \n    \n\n"
          matchingXML: <navigation-rule><from-view-id>/index.xhtml</from-view-id><navigation-case><from-action>#{authController.authenticate(username)}</from-action><if>#{authController.logged}</if><to-view-id>/tasks.xhtml</to-view-id><redirect></redirect></navigation-case></navigation-rule><navigation-rule><from-view-id>/tasks.xhtml</from-view-id><navigation-case><from-action>#{authController.logout}</from-action><if>#{!authController.logged}</if><to-view-id>/index.xhtml</to-view-id><redirect></redirect></navigation-case></navigation-rule>
  javax-to-jakarta-dependencies-00006:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: groupId>javax<
      - initial_branch: main
        line_number: 25
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: groupId>javax<
  javax-to-jakarta-dependencies-00007:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 26
        message: Update artifact dependency by replacing the `javaee-api` artifactId
          with `jakarta.jakartaee-api`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: artifactId>javaee-api<
  javax-to-jakarta-dependencies-00008:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 20
        message: Update artifact dependency by replacing the `javaee-web-api` artifactId
          with `jakarta.jakartaee-web-api`
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: artifactId>javaee-web-api<
  javax-to-jakarta-import-00001:
    bmt:
      src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java:
      - initial_branch: main
        line_number: 19
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.TransactionManagement
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.TransactionManagementType
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - initial_branch: main
        line_number: 20
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.transaction.Status
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.transaction.UserTransaction
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java:
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.ServletException
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServlet
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServletResponse
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java:
      - initial_branch: main
        line_number: 19
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - initial_branch: main
        line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManagerFactory
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.PersistenceUnit
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.Status
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.UserTransaction
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java:
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.faces` import statement with `jakarta.faces` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.faces.bean.RequestScoped
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: faces
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.inject.Named
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 28
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 30
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java:
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.faces` import statement with `jakarta.faces` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.faces.bean.RequestScoped
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: faces
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.inject.Named
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 28
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - initial_branch: main
        line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.EJBException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: inject
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - initial_branch: main
        line_number: 29
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - initial_branch: main
        line_number: 30
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - initial_branch: main
        line_number: 31
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 32
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 33
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 34
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 35
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - initial_branch: main
        line_number: 19
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: annotation
      - initial_branch: main
        line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: inject
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSConnectionFactory
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - initial_branch: main
        line_number: 28
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - initial_branch: main
        line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 30
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 31
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 32
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - initial_branch: main
        line_number: 33
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java:
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java:
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/model/InventoryEntity.java:
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: com.redhat.coolstore.model
          renamed: xml
      src/main/java/com/redhat/coolstore/model/Order.java:
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.CascadeType
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.FetchType
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.OneToMany
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      src/main/java/com/redhat/coolstore/model/OrderItem.java:
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      src/main/java/com/redhat/coolstore/model/ShoppingCart.java:
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/ShoppingCart.java
          kind: Module
          name: javax.enterprise.context.Dependent
          package: com.redhat.coolstore.model
          renamed: enterprise
      src/main/java/com/redhat/coolstore/rest/CartEndpoint.java:
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.enterprise.context.SessionScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - initial_branch: main
        line_number: 11
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: com.redhat.coolstore.rest
          renamed: jms
      - initial_branch: main
        line_number: 12
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: com.redhat.coolstore.rest
          renamed: jms
      - initial_branch: main
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java:
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java:
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/RestApplication.java:
      - initial_branch: main
        line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: com.redhat.coolstore.rest
          renamed: ws
      - initial_branch: main
        line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - initial_branch: main
        line_number: 12
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: com.redhat.coolstore.service
          renamed: persistence
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - initial_branch: main
        line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 4
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: com.redhat.coolstore.service
          renamed: jms
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.Message
          package: com.redhat.coolstore.service
          renamed: jms
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: com.redhat.coolstore.service
          renamed: jms
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: com.redhat.coolstore.service
          renamed: jms
      src/main/java/com/redhat/coolstore/service/ProductService.java:
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/service/PromoService.java:
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/PromoService.java
          kind: Module
          name: javax.enterprise.context.ApplicationScoped
          package: com.redhat.coolstore.service
          renamed: enterprise
      src/main/java/com/redhat/coolstore/service/ShippingService.java:
      - initial_branch: main
        line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.service
          renamed: annotation
      - initial_branch: main
        line_number: 4
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.JMSContext
          package: com.redhat.coolstore.service
          renamed: jms
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
          renamed: jms
      src/main/java/com/redhat/coolstore/service/ShoppingCartService.java:
      - initial_branch: main
        line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.ejb.Stateful
          package: com.redhat.coolstore.service
          renamed: ejb
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java:
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.PostConstruct
          package: com.redhat.coolstore.utils
          renamed: annotation
      - initial_branch: main
        line_number: 7
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.utils
          renamed: annotation
      - initial_branch: main
        line_number: 8
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Singleton
          package: com.redhat.coolstore.utils
          renamed: ejb
      - initial_branch: main
        line_number: 9
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Startup
          package: com.redhat.coolstore.utils
          renamed: ejb
      - initial_branch: main
        line_number: 10
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagement
          package: com.redhat.coolstore.utils
          renamed: ejb
      - initial_branch: main
        line_number: 11
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagementType
          package: com.redhat.coolstore.utils
          renamed: ejb
      - initial_branch: main
        line_number: 12
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/Producers.java:
      - initial_branch: main
        line_number: 3
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: com.redhat.coolstore.utils
          renamed: enterprise
      - initial_branch: main
        line_number: 4
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: com.redhat.coolstore.utils
          renamed: enterprise
      src/main/java/com/redhat/coolstore/utils/StartupListener.java:
      - initial_branch: main
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/StartupListener.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/Transformers.java:
      - initial_branch: main
        line_number: 13
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.Json
          package: com.redhat.coolstore.utils
          renamed: json
      - initial_branch: main
        line_number: 14
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArray
          package: com.redhat.coolstore.utils
          renamed: json
      - initial_branch: main
        line_number: 15
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArrayBuilder
          package: com.redhat.coolstore.utils
          renamed: json
      - initial_branch: main
        line_number: 16
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonObject
          package: com.redhat.coolstore.utils
          renamed: json
      - initial_branch: main
        line_number: 17
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonReader
          package: com.redhat.coolstore.utils
          renamed: json
      - initial_branch: main
        line_number: 18
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonWriter
          package: com.redhat.coolstore.utils
          renamed: json
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - initial_branch: main
        line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - initial_branch: main
        line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - initial_branch: main
        line_number: 22
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.as.quickstarts.servlet
          renamed: annotation
      - initial_branch: main
        line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.servlet
          renamed: inject
      - initial_branch: main
        line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Destination
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 27
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 28
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 29
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - initial_branch: main
        line_number: 30
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.ServletException
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - initial_branch: main
        line_number: 31
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - initial_branch: main
        line_number: 32
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServlet
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - initial_branch: main
        line_number: 33
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - initial_branch: main
        line_number: 34
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServletResponse
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 26
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Address.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.Valid
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.EnumType.STRING
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Enumerated
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.TemporalType.TIMESTAMP
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Temporal
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.model
          renamed: ejb
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java:
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Lob
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.PostLoad
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Version
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OrderBy
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.UriInfo
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.rest
          renamed: enterprise
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolation
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 25
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 26
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 27
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.HttpHeaders
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.ExceptionMapper
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.Provider
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.WebApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - initial_branch: master
        line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - initial_branch: master
        line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - initial_branch: master
        line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - initial_branch: master
        line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - initial_branch: master
        line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - initial_branch: master
        line_number: 30
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
  javax-to-jakarta-properties-00001:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 10
        message: 'Rename properties prefixed by `javax` with `jakarta` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: <property name="javax.
      target/classes/META-INF/persistence.xml:
      - initial_branch: main
        line_number: 10
        message: 'Rename properties prefixed by `javax` with `jakarta` '
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          matchingText: <property name="javax.
kai/quarkus:
  jms-to-reactive-quarkus-00000:
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 167
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec
          version: 2.0.0.Final-redhat-00001
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 145
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec
          version: 2.0.0.Final-redhat-00001
  jms-to-reactive-quarkus-00010:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - initial_branch: main
        line_number: 36
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - initial_branch: main
        line_number: 15
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - initial_branch: main
        line_number: 34
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - initial_branch: main
        line_number: 34
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
  jms-to-reactive-quarkus-00020:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - initial_branch: main
        line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
      - initial_branch: main
        line_number: 38
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
      - initial_branch: main
        line_number: 39
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - initial_branch: main
        line_number: 16
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 17
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 18
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - initial_branch: main
        line_number: 35
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 36
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - initial_branch: main
        line_number: 35
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 36
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
  jms-to-reactive-quarkus-00030:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - initial_branch: main
        line_number: 26
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
      - initial_branch: main
        line_number: 36
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Field
          name: queue
          package: org.jboss.as.quickstarts.cmt.ejb
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - initial_branch: main
        line_number: 28
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 79
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Field
          name: queue
          package: org.jboss.as.quickstarts.servlet
  jms-to-reactive-quarkus-00040:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - initial_branch: main
        line_number: 64
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Method
          name: init
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - initial_branch: main
        line_number: 8
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 24
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Field
          name: ordersTopic
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - initial_branch: main
        line_number: 29
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 82
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Field
          name: topic
          package: org.jboss.as.quickstarts.servlet
  jms-to-reactive-quarkus-00050:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - initial_branch: main
        line_number: 27
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - initial_branch: main
        line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSConnectionFactory
          package: org.jboss.as.quickstarts.cmt.ejb
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.cmt.ejb
      - initial_branch: main
        line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - initial_branch: main
        line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.mdb
      - initial_branch: main
        line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.cmt.mdb
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.cmt.mdb
      - initial_branch: main
        line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/rest/CartEndpoint.java:
      - initial_branch: main
        line_number: 11
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: com.redhat.coolstore.rest
      - initial_branch: main
        line_number: 12
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: com.redhat.coolstore.rest
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - initial_branch: main
        line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Module
          name: javax.jms.*
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - initial_branch: main
        line_number: 6
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.Message
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 8
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 9
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - initial_branch: main
        line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.JMSContext
          package: com.redhat.coolstore.service
      - initial_branch: main
        line_number: 8
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - initial_branch: main
        line_number: 22
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - initial_branch: main
        line_number: 22
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - initial_branch: main
        line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Destination
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 27
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 28
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
      - initial_branch: main
        line_number: 29
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
  persistence-to-quarkus-00000:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables: {}
      target/classes/META-INF/persistence.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables: {}
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables: {}
      src/main/webapp/WEB-INF/greeter-quickstart-ds.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables: {}
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: 7.1
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables: {}
      src/main/webapp/WEB-INF/kitchensink-quickstart-ds.xml:
      - initial_branch: 7.1
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables: {}
      src/test/resources/META-INF/test-persistence.xml:
      - initial_branch: 7.1
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables: {}
      src/test/resources/test-ds.xml:
      - initial_branch: 7.1
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables: {}
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables: {}
      src/main/webapp/WEB-INF/tasks-jsf-ds.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables: {}
      src/test/resources/META-INF/test-persistence.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables: {}
      src/test/resources/test-ds.xml:
      - initial_branch: main
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables: {}
    ticket-monster:
      monolith/src/main/resources-mysql/META-INF/persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/src/main/resources-postgresql/META-INF/persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/src/main/resources/META-INF/persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/src/main/webapp/WEB-INF/ticket-monster-ds.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/src/test/resources/test-ds.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/target/classes/META-INF/persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
      monolith/target/test-classes/test-ds.xml:
      - initial_branch: master
        line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables: {}
  persistence-to-quarkus-00011:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - initial_branch: main
        line_number: 13
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - initial_branch: main
        line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
    ticket-monster:
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - initial_branch: master
        line_number: 8
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - initial_branch: master
        line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - initial_branch: master
        line_number: 9
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - initial_branch: master
        line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - initial_branch: master
        line_number: 10
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - initial_branch: master
        line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
      monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - initial_branch: master
        line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
quarkus/springboot:
  cdi-to-quarkus-00000:
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 48
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 130
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
  cdi-to-quarkus-00020:
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 136
        message: "\n Dependency `javax.inject:javax.inject` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n     \
            \       provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
  cdi-to-quarkus-00030:
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 18
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    kitchensink:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: 7.1
        line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
      src/test/webapp/WEB-INF/beans.xml:
      - initial_branch: main
        line_number: 25
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: beans
          innerText: "\n    \n        org.jboss.as.quickstarts.tasksJsf.Testing\n\
            \    \n"
          matchingXML: <alternatives><stereotype>org.jboss.as.quickstarts.tasksJsf.Testing</stereotype></alternatives>
    ticket-monster:
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - initial_branch: master
        line_number: 5
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
  cdi-to-quarkus-00040:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/utils/Producers.java:
      - initial_branch: main
        line_number: 12
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Method
          name: Produces
          package: com.redhat.coolstore.utils
    ticket-monster:
      monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - initial_branch: master
        line_number: 29
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Field
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.util
      - initial_branch: master
        line_number: 38
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Method
          name: Produces
          package: org.jboss.examples.ticketmonster.util
  cdi-to-quarkus-00050:
    bmt:
      src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java:
      - initial_branch: main
        line_number: 39
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.bmt
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - initial_branch: main
        line_number: 39
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - initial_branch: main
        line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - initial_branch: main
        line_number: 37
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - initial_branch: main
        line_number: 18
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - initial_branch: main
        line_number: 12
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ProductService.java:
      - initial_branch: main
        line_number: 14
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShippingService.java:
      - initial_branch: main
        line_number: 7
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - initial_branch: main
        line_number: 13
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
    ticket-monster:
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - initial_branch: master
        line_number: 52
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - initial_branch: master
        line_number: 25
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - initial_branch: master
        line_number: 38
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - initial_branch: master
        line_number: 29
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - initial_branch: master
        line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - initial_branch: master
        line_number: 22
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - initial_branch: master
        line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.service
  dependency-removal-for-quarkus-00000:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 152
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
      - initial_branch: main
        line_number: 159
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 155
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
      - initial_branch: main
        line_number: 178
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 140
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
      - initial_branch: main
        line_number: 157
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
  javaee-faces-to-quarkus-00000:
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 161
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 76
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 135
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.2_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope>
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 88
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
  javaee-pom-to-quarkus-00010:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00020:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00030:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00040:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00050:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00060:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 5
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-remote.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/ejb-security.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/savitharaghunathan/helloworld-mdb.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 20
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 3
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
  javaee-pom-to-quarkus-00070:
    bmt:
      pom.xml:
      - initial_branch: main
        line_number: 144
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/bmt.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 149
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    greeter:
      pom.xml:
      - initial_branch: main
        line_number: 54
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/greeter.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    kitchensink:
      pom.xml:
      - initial_branch: 7.1
        line_number: 65
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: groupId
          innerText: org.hibernate
          matchingXML: org.hibernate
      - initial_branch: 7.1
        line_number: 96
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/tqvarnst/jboss-eap-quickstarts.git
        solved_branch: quarkus-3.2
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
    tasks-qute:
      pom.xml:
      - initial_branch: main
        line_number: 62
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/konveyor-ecosystem/tasks-qute.git
        solved_branch: quarkus
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    ticket-monster:
      monolith/pom.xml:
      - initial_branch: master
        line_number: 166
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
  javaee-pom-to-quarkus-00080:
    cmt:
      pom.xml:
      - initial_branch: main
        line_number: 143
        message: "\n \n Use Quarkus junit artifact: \n\n ```\n <!-- Quarkus junit\
          \ specific dependency -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-junit5</artifactId>\n <scope>test</scope>\n </dependency>\n\
          \ ```\n \n "
        repo: https://github.com/konveyor-ecosystem/cmt.git
        solved_branch: quarkus
        variables:
          name: junit.junit
          version: 4.13.1
  jaxrs-to-quarkus-00020:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/rest/RestApplication.java:
      - initial_branch: main
        line_number: 7
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Class
          name: ApplicationPath
          package: com.redhat.coolstore.rest
      - initial_branch: main
        line_number: 8
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Class
          name: RestApplication
          package: com.redhat.coolstore.rest
    ticket-monster:
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - initial_branch: master
        line_number: 15
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
      - initial_branch: master
        line_number: 16
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        repo: https://github.com/jmle/monolith.git
        solved_branch: quarkus
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: JaxRsActivator
          package: org.jboss.examples.ticketmonster.rest
  quarkus-flyway-00000:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 31
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          name: org.flywaydb.flyway-core
          version: 4.1.2
  quarkus-flyway-00010:
    eap-coolstore-monolith:
      pom.xml:
      - initial_branch: main
        line_number: 31
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        repo: https://github.com/mathianasj/eap-coolstore-monolith.git
        solved_branch: quarkus-migration
        variables:
          name: org.flywaydb.flyway-core
          version: 4.1.2
