cloud-readiness:
  local-storage-00001:
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 41
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Method
          name: doGet
          package: org.jboss.as.quickstarts.servlet
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 32
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 39
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 154
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      - line_number: 183
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedOutputStream
          package: org.jboss.examples.ticketmonster.service
      - line_number: 209
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 32
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 39
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 154
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      - line_number: 183
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedOutputStream
          package: org.jboss.examples.ticketmonster.service
      - line_number: 209
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 32
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 39
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 33
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 40
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 154
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      - line_number: 183
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedOutputStream
          package: org.jboss.examples.ticketmonster.service
      - line_number: 209
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
      orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java:
      - line_number: 170
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java
          kind: Constructor
          name: getStackTrace
          package: org.ticketmonster.orders.booking
  local-storage-00002:
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 106
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 108
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: checkResourceAvailable
          package: org.jboss.examples.ticketmonster.service
      - line_number: 111
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 204
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 106
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 108
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: checkResourceAvailable
          package: org.jboss.examples.ticketmonster.service
      - line_number: 111
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 204
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 106
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 108
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: checkResourceAvailable
          package: org.jboss.examples.ticketmonster.service
      - line_number: 111
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - line_number: 204
        message: "\n An application running inside a container could lose access to\
          \ a file in local storage.\n\n Recommendations\n\n The following recommendations\
          \ depend on the function of the file in local storage:\n\n * Logging: Log\
          \ to standard output and use a centralized log collector to analyze the\
          \ logs.\n * Caching: Use a cache backing service.\n * Configuration: Store\
          \ configuration settings in environment variables so that they can be updated\
          \ without code changes.\n * Data storage: Use a database backing service\
          \ for relational data or use a persistent data storage system.\n * Temporary\
          \ data storage: Use the file system of a running container as a brief, single-transaction\
          \ cache.\n "
        variables:
          class: ''
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
  localhost-http-00001:
    ejb-remote:
      client/src/main/java/org/jboss/as/quickstarts/ejb/remote/client/RemoteEJBClient.java:
      - line_number: 115
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080/wildfly-services");
      - line_number: 118
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080
      - line_number: 157
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080/wildfly-services");
      - line_number: 160
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080
      client/src/main/resources/application.properties:
      - line_number: 1
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:9090
      client/target/classes/application.properties:
      - line_number: 1
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:9090
    ejb-security:
      src/main/java/org/jboss/as/quickstarts/ejb_security/RemoteClient.java:
      - line_number: 38
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080
      src/main/resources/application.properties:
      - line_number: 1
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080
      target/classes/application.properties:
      - line_number: 1
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:8080
    ticket-monster:
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 57
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost:9090/rest/bookings";
      orders-service/src/test/java/org/ticketmonster/orders/SimpleTest.java:
      - line_number: 49
        message: The app is trying to access local resource by HTTP, please try to
          migrate the resource to cloud
        variables:
          matchingText: http://localhost
  localhost-jdbc-00002:
    ticket-monster:
      orders-service/src/main/resources/application-mysql.properties:
      - line_number: 1
        message: The app is trying to access local resource by JDBC, please try to
          migrate the resource to cloud
        variables:
          matchingText: jdbc:mysql://localhost:3306
      - line_number: 6
        message: The app is trying to access local resource by JDBC, please try to
          migrate the resource to cloud
        variables:
          matchingText: jdbc:mysql://localhost:3306
      orders-service/target/classes/application-mysql.properties:
      - line_number: 1
        message: The app is trying to access local resource by JDBC, please try to
          migrate the resource to cloud
        variables:
          matchingText: jdbc:mysql://localhost:3306
      - line_number: 6
        message: The app is trying to access local resource by JDBC, please try to
          migrate the resource to cloud
        variables:
          matchingText: jdbc:mysql://localhost:3306
  session-00000:
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/web.xml:
      - line_number: 5
        message: "\n Session replication ensures that client sessions are not disrupted\
          \ by node failure. Each node in the cluster shares information about ongoing\
          \ sessions and can take over sessions if another node disappears. In a cloud\
          \ environment, however, data in the memory of a running container can be\
          \ wiped out by a restart.\n\n Recommendations\n\n * Review the session replication\
          \ usage and ensure that it is configured properly.\n * Disable HTTP session\
          \ clustering and accept its implications.\n * Re-architect the application\
          \ so that sessions are stored in a cache backing service or a remote data\
          \ grid.\n\n A remote data grid has the following benefits:\n\n * The application\
          \ is more scaleable and elastic.\n * The application can survive EAP node\
          \ failures because a JVM failure does not cause session data loss.\n * Session\
          \ data can be shared by multiple applications.\n "
        variables:
          data: distributable
          innerText: ''
          matchingXML: ''
      webapp/WEB-INF/web.xml:
      - line_number: 5
        message: "\n Session replication ensures that client sessions are not disrupted\
          \ by node failure. Each node in the cluster shares information about ongoing\
          \ sessions and can take over sessions if another node disappears. In a cloud\
          \ environment, however, data in the memory of a running container can be\
          \ wiped out by a restart.\n\n Recommendations\n\n * Review the session replication\
          \ usage and ensure that it is configured properly.\n * Disable HTTP session\
          \ clustering and accept its implications.\n * Re-architect the application\
          \ so that sessions are stored in a cache backing service or a remote data\
          \ grid.\n\n A remote data grid has the following benefits:\n\n * The application\
          \ is more scaleable and elastic.\n * The application can survive EAP node\
          \ failures because a JVM failure does not cause session data loss.\n * Session\
          \ data can be shared by multiple applications.\n "
        variables:
          data: distributable
          innerText: ''
          matchingXML: ''
discovery-rules:
  hardcoded-ip-address:
    eap-coolstore-monolith:
      src/main/resources/old.properties:
      - line_number: 1
        message: When migrating environments, hard-coded IP addresses may need to
          be modified or eliminated.
        variables:
          matchingText: 0.0.0.0
      target/classes/old.properties:
      - line_number: 1
        message: When migrating environments, hard-coded IP addresses may need to
          be modified or eliminated.
        variables:
          matchingText: 0.0.0.0
eap7/weblogic/tests/data:
  maven-javax-to-jakarta-00002:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with groupId `com.sun.activation`
        variables:
          name: javax.activation.activation
          version: '1.1'
    ticket-monster:
      pom.xml:
      - line_number: null
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with groupId `com.sun.activation`
        variables:
          name: javax.activation.activation
          version: 1.1.1.redhat-5
  maven-javax-to-jakarta-00004:
    kitchensink:
      pom.xml:
      - line_number: 48
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.enterprise<
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 130
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.enterprise<
      - line_number: 136
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.inject<
      - line_number: 142
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.validation<
      backend-v2/pom.xml:
      - line_number: 141
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.enterprise<
      - line_number: 147
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.inject<
      - line_number: 153
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.validation<
      monolith/pom.xml:
      - line_number: 130
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.enterprise<
      - line_number: 136
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.inject<
      - line_number: 142
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency - groupId `jakarta.`.
        variables:
          matchingText: groupId>javax.validation<
  maven-javax-to-jakarta-00006:
    kitchensink:
      pom.xml:
      - line_number: 49
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        variables:
          matchingText: artifactId>cdi-api<
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 131
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        variables:
          matchingText: artifactId>cdi-api<
      backend-v2/pom.xml:
      - line_number: 142
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        variables:
          matchingText: artifactId>cdi-api<
      monolith/pom.xml:
      - line_number: 131
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.enterprise.cdi-api`
        variables:
          matchingText: artifactId>cdi-api<
  maven-javax-to-jakarta-00007:
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 143
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        variables:
          matchingText: artifactId>validation-api<
      backend-v2/pom.xml:
      - line_number: 154
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        variables:
          matchingText: artifactId>validation-api<
      monolith/pom.xml:
      - line_number: 143
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.validation-api`
        variables:
          matchingText: artifactId>validation-api<
  maven-javax-to-jakarta-00008:
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 137
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        variables:
          matchingText: artifactId>javax.inject<
      backend-v2/pom.xml:
      - line_number: 148
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        variables:
          matchingText: artifactId>javax.inject<
      monolith/pom.xml:
      - line_number: 137
        message: If you migrate your application to JBoss EAP 7.3, or later, and want
          to ensure its Maven building, running or testing works as expected, use
          instead the Jakarta EE dependency with artifactId `jakarta.inject-api`
        variables:
          matchingText: artifactId>javax.inject<
eap8/eap7:
  javaee-to-jakarta-namespaces-00001:
    bmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    cmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    greeter:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/web.xml:
      - line_number: 3
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    helloworld-mdb:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    kitchensink:
      src/main/resources/META-INF/resources/faces-config.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 23
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/resources/META-INF/web.xml:
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 23
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      target/classes/META-INF/resources/faces-config.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 23
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      target/classes/META-INF/web.xml:
      - line_number: 20
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 18
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      src/test/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
    ticket-monster:
      backend-v1/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 7
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 8
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      backend-v1/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      backend-v2/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 7
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 8
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      backend-v2/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 7
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      - line_number: 8
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
      monolith/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: 'Replace `http://xmlns.jcp.org/xml/ns/javaee` with `https://jakarta.ee/xml/ns/jakartaee`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/javaee
  javaee-to-jakarta-namespaces-00002:
    bmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      target/classes/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    cmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      target/classes/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 3
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 6
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      target/classes/META-INF/persistence.xml:
      - line_number: 3
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 5
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 6
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 19
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 21
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 22
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
    ticket-monster:
      backend-v1/src/main/resources/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v1/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v1/target/classes/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v1/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v2/src/main/resources/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v2/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v2/target/classes/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      backend-v2/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/src/main/resources/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/target/classes/META-INF/persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 13
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 15
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
      - line_number: 16
        message: 'Replace `http://xmlns.jcp.org/xml/ns/persistence` with `https://jakarta.ee/xml/ns/persistence`
          and change the schema version number '
        variables:
          matchingText: http://xmlns.jcp.org/xml/ns/persistence
  javaee-to-jakarta-namespaces-00006:
    bmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    cmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 21
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
      webapp/WEB-INF/beans.xml:
      - line_number: 21
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    greeter:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 21
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    helloworld-mdb:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    kitchensink:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
      src/test/webapp/WEB-INF/beans.xml:
      - line_number: 22
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
    ticket-monster:
      backend-v1/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 8
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
      backend-v2/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 8
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 8
        message: Replace `beans_1_1.xsd` with `beans_3_0.xsd` and update the version
          attribute to `"3.0"`
        variables:
          matchingText: beans_1_1.xsd
  javaee-to-jakarta-namespaces-00017:
    greeter:
      src/main/webapp/WEB-INF/web.xml:
      - line_number: 5
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_3_1.xsd
    ticket-monster:
      backend-v1/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_3_1.xsd
      backend-v2/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_3_1.xsd
      monolith/src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: Replace `web-app_3_1.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_3_1.xsd
  javaee-to-jakarta-namespaces-00018:
    kitchensink:
      src/main/resources/META-INF/web.xml:
      - line_number: 22
        message: Replace `web-app_4_0.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_4_0.xsd
      target/classes/META-INF/web.xml:
      - line_number: 22
        message: Replace `web-app_4_0.xsd` with `web-app_5_0.xsd` and update the version
          attribute to `"5.0"`
        variables:
          matchingText: web-app_4_0.xsd
  javaee-to-jakarta-namespaces-00021:
    cmt:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 22
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
    greeter:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 21
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
    kitchensink:
      src/main/resources/META-INF/resources/faces-config.xml:
      - line_number: 23
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 23
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
      target/classes/META-INF/resources/faces-config.xml:
      - line_number: 23
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
    tasks-qute:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 19
        message: Replace `web-facesconfig_2_2.xsd` with `web-facesconfig_3_0.xsd`
          and update the version attribute to `"3.0"`
        variables:
          matchingText: web-facesconfig_2_2.xsd
  javaee-to-jakarta-namespaces-00030:
    bmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      target/classes/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    cmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      target/classes/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 6
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      target/classes/META-INF/persistence.xml:
      - line_number: 6
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 22
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
    ticket-monster:
      backend-v1/src/main/resources/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v1/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v1/target/classes/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v1/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v2/src/main/resources/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v2/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v2/target/classes/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      backend-v2/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      monolith/src/main/resources/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      monolith/target/classes/META-INF/persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - line_number: 16
        message: Replace `persistence_2_1.xsd` with `persistence_3_0.xsd` and update
          the version attribute to `"3.0"`
        variables:
          matchingText: persistence_2_1.xsd
  javaee-to-jakarta-namespaces-00033:
    bmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/BMTQuickstartDS\n\
            \      \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/bmt-quickstart-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/bmt-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/BMTQuickstartDS</jta-data-source><properties><property\
            \ name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property\
            \ name=\"hibernate.show_sql\" value=\"true\"></property></properties></persistence-unit>"
      target/classes/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/BMTQuickstartDS\n\
            \      \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/bmt-quickstart-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/bmt-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/BMTQuickstartDS</jta-data-source><properties><property\
            \ name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\"></property><property\
            \ name=\"hibernate.show_sql\" value=\"true\"></property></properties></persistence-unit>"
    cmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n         \n         \n         \n      \n   \n"
          matchingXML: <persistence-unit name="primary"><properties><!-- Properties
            for Hibernate --><property name="hibernate.hbm2ddl.auto" value="create-drop"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      target/classes/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n         \n         \n         \n      \n   \n"
          matchingXML: <persistence-unit name="primary"><properties><!-- Properties
            for Hibernate --><property name="hibernate.hbm2ddl.auto" value="create-drop"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 2
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 8
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n    \n        java:jboss/datasources/CoolstoreDS\n       \
            \ \n            \n            \n        \n    \n"
          matchingXML: <persistence-unit name="primary"><jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source><properties><property
            name="javax.persistence.schema-generation.database.action" value="none"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
      target/classes/META-INF/persistence.xml:
      - line_number: 2
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 8
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n    \n        java:jboss/datasources/CoolstoreDS\n       \
            \ \n            \n            \n        \n    \n"
          matchingXML: <persistence-unit name="primary"><jta-data-source>java:jboss/datasources/CoolstoreDS</jta-data-source><properties><property
            name="javax.persistence.schema-generation.database.action" value="none"></property><property
            name="hibernate.show_sql" value="false"></property></properties></persistence-unit>
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n    \n        \n        \n        java:jboss/datasources/GreeterQuickstartDS\n\
            \        \n            \n            \n            \n        \n    \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n            data source,\
            \ this example data source is just for development and testing! --><!--\
            \ The datasource is deployed as WEB-INF/greeter-quickstart-ds.xml,\n \
            \           you can find it in the source at src/main/webapp/WEB-INF/greeter-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/GreeterQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 28
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/KitchensinkQuickstartDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed\n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/kitchensink-quickstart-ds.xml, you\n\
            \         can find it in the source at src/main/webapp/WEB-INF/kitchensink-quickstart-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/KitchensinkQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 18
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 29
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/TasksJsfQuickstartDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- We use a different\
            \ datasource for tests, so as to not overwrite\n         production data.\
            \ This is an unmanaged data source, backed by H2, an in memory\n     \
            \    database. Production applications should use a managed datasource.\
            \ --><!-- The datasource is deployed as WEB-INF/test-ds.xml,\n       \
            \  you can find it in the source at src/test/resources/test-ds.xml --><jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
    ticket-monster:
      backend-v1/src/main/resources/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      backend-v1/target/classes/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      backend-v2/src/main/resources/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      backend-v2/target/classes/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      monolith/src/main/resources/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
      monolith/target/classes/META-INF/persistence.xml:
      - line_number: 12
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          matchingText: version="2.1"
      - line_number: 22
        message: In the root tag, replace the `version` attribute value `2.1` with
          `3.0`
        variables:
          data: persistence
          innerText: "\n   \n      \n      \n      java:jboss/datasources/ticket-monsterDS\n\
            \      \n         \n         \n         \n      \n   \n"
          matchingXML: "<persistence-unit name=\"primary\"><!-- If you are running\
            \ in a production environment, add a managed \n         data source, this\
            \ example data source is just for development and testing! --><!-- The\
            \ datasource is deployed as WEB-INF/ticket-monster-ds.xml, you\n     \
            \    can find it in the source at src/main/webapp/WEB-INF/ticket-monster-ds.xml\
            \ --><jta-data-source>java:jboss/datasources/ticket-monsterDS</jta-data-source><properties><!--\
            \ Properties for Hibernate --><property name=\"hibernate.hbm2ddl.auto\"\
            \ value=\"create-drop\"></property><property name=\"hibernate.show_sql\"\
            \ value=\"false\"></property></properties></persistence-unit>"
  javaee-to-jakarta-namespaces-00044:
    greeter:
      src/main/webapp/WEB-INF/web.xml:
      - line_number: 2
        message: '`web-app_3_1`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          matchingText: version="3.1"
      - line_number: 6
        message: '`web-app_3_1`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          data: web-app
          innerText: "\n    \n        Faces Servlet\n        javax.faces.webapp.FacesServlet\n\
            \        1\n    \n    \n        Faces Servlet\n        *.xhtml\n    \n\
            \    \n        \n            30\n        \n    \n    \n        greet.xhtml\n\
            \    \n"
          matchingXML: <servlet><servlet-name>Faces Servlet</servlet-name><servlet-class>javax.faces.webapp.FacesServlet</servlet-class><load-on-startup>1</load-on-startup></servlet><servlet-mapping><servlet-name>Faces
            Servlet</servlet-name><url-pattern>*.xhtml</url-pattern></servlet-mapping><session-config><session-timeout>30</session-timeout></session-config><welcome-file-list><welcome-file>greet.xhtml</welcome-file></welcome-file-list>
  javaee-to-jakarta-namespaces-00045:
    kitchensink:
      src/main/resources/META-INF/web.xml:
      - line_number: 20
        message: '`web-app_4_0`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          matchingText: version="4.0"
      - line_number: 25
        message: '`web-app_4_0`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          data: web-app
          innerText: "\n\n    \n        jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT\n\
            \        true\n    \n    \n        jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL\n\
            \        true\n    \n    \n        jakarta.faces.AUTOMATIC_EXTENSIONLESS_MAPPING\n\
            \        true\n    \n    \n"
          matchingXML: <context-param><param-name>jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT</param-name><param-value>true</param-value></context-param><context-param><param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name><param-value>true</param-value></context-param><context-param><param-name>jakarta.faces.AUTOMATIC_EXTENSIONLESS_MAPPING</param-name><param-value>true</param-value></context-param>
      target/classes/META-INF/web.xml:
      - line_number: 20
        message: '`web-app_4_0`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          matchingText: version="4.0"
      - line_number: 25
        message: '`web-app_4_0`: In the root tag, replace the `version` attribute
          value with `5.0`'
        variables:
          data: web-app
          innerText: "\n\n    \n        jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT\n\
            \        true\n    \n    \n        jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL\n\
            \        true\n    \n    \n        jakarta.faces.AUTOMATIC_EXTENSIONLESS_MAPPING\n\
            \        true\n    \n    \n"
          matchingXML: <context-param><param-name>jakarta.faces.ENABLE_WEBSOCKET_ENDPOINT</param-name><param-value>true</param-value></context-param><context-param><param-name>jakarta.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name><param-value>true</param-value></context-param><context-param><param-name>jakarta.faces.AUTOMATIC_EXTENSIONLESS_MAPPING</param-name><param-value>true</param-value></context-param>
  javaee-to-jakarta-namespaces-00048:
    cmt:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 20
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          matchingText: version="2.2"
      - line_number: 25
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: "\n\n  \n    /addCustomer.xhtml\n    \n      #{customerManager.addCustomer(name)}\n\
            \      customerAdded\n      /customers.xhtml\n      \n    \n    \n   \
            \   #{customerManager.addCustomer(name)}\n      customerDuplicate\n  \
            \    /duplicate.xhtml\n      \n    \n    \n      #{customerManager.addCustomer(name)}\n\
            \      customerInvalidName\n      /invalidName.xhtml\n      \n    \n \
            \ \n\n"
          matchingXML: <navigation-rule><from-view-id>/addCustomer.xhtml</from-view-id><navigation-case><from-action>#{customerManager.addCustomer(name)}</from-action><from-outcome>customerAdded</from-outcome><to-view-id>/customers.xhtml</to-view-id><redirect></redirect></navigation-case><navigation-case><from-action>#{customerManager.addCustomer(name)}</from-action><from-outcome>customerDuplicate</from-outcome><to-view-id>/duplicate.xhtml</to-view-id><redirect></redirect></navigation-case><navigation-case><from-action>#{customerManager.addCustomer(name)}</from-action><from-outcome>customerInvalidName</from-outcome><to-view-id>/invalidName.xhtml</to-view-id><redirect></redirect></navigation-case></navigation-rule>
    greeter:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 19
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: '


            '
          matchingXML: ''
    kitchensink:
      src/main/resources/META-INF/resources/faces-config.xml:
      - line_number: 19
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: "\n\n    \n\n    \n\n"
          matchingXML: "<!-- This descriptor activates the JSF Servlet --><!-- Write\
            \ your navigation rules here. You are encouraged to use CDI\n        for\
            \ creating @Named managed beans. -->"
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 19
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: "\n\n    \n\n    \n\n"
          matchingXML: "<!-- This descriptor activates the JSF Servlet --><!-- Write\
            \ your navigation rules here. You are encouraged to use CDI\n        for\
            \ creating @Named managed beans. -->"
      target/classes/META-INF/resources/faces-config.xml:
      - line_number: 19
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: "\n\n    \n\n    \n\n"
          matchingXML: "<!-- This descriptor activates the JSF Servlet --><!-- Write\
            \ your navigation rules here. You are encouraged to use CDI\n        for\
            \ creating @Named managed beans. -->"
    tasks-qute:
      src/main/webapp/WEB-INF/faces-config.xml:
      - line_number: 18
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          matchingText: version="2.2"
      - line_number: 22
        message: '`web-facesconfig_2_2`: In the root tag, replace the `version` attribute
          value with `3.0`'
        variables:
          data: faces-config
          innerText: "\n\n    \n        /index.xhtml\n        \n            #{authController.authenticate(username)}\n\
            \            #{authController.logged}\n            /tasks.xhtml\n    \
            \        \n        \n    \n\n    \n        /tasks.xhtml\n        \n  \
            \          #{authController.logout}\n            #{!authController.logged}\n\
            \            /index.xhtml\n            \n        \n    \n\n"
          matchingXML: <navigation-rule><from-view-id>/index.xhtml</from-view-id><navigation-case><from-action>#{authController.authenticate(username)}</from-action><if>#{authController.logged}</if><to-view-id>/tasks.xhtml</to-view-id><redirect></redirect></navigation-case></navigation-rule><navigation-rule><from-view-id>/tasks.xhtml</from-view-id><navigation-case><from-action>#{authController.logout}</from-action><if>#{!authController.logged}</if><to-view-id>/index.xhtml</to-view-id><redirect></redirect></navigation-case></navigation-rule>
  javax-to-jakarta-dependencies-00006:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 19
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        variables:
          matchingText: groupId>javax<
      - line_number: 25
        message: Update group dependency by replacing the `javax` groupId with `jakarta.platform`
        variables:
          matchingText: groupId>javax<
  javax-to-jakarta-dependencies-00007:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 26
        message: Update artifact dependency by replacing the `javaee-api` artifactId
          with `jakarta.jakartaee-api`
        variables:
          matchingText: artifactId>javaee-api<
  javax-to-jakarta-dependencies-00008:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 20
        message: Update artifact dependency by replacing the `javaee-web-api` artifactId
          with `jakarta.jakartaee-web-api`
        variables:
          matchingText: artifactId>javaee-web-api<
  javax-to-jakarta-import-00001:
    bmt:
      src/main/java/org/jboss/as/quickstarts/bmt/KVPair.java:
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/KVPair.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/KVPair.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 23
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/KVPair.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 24
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/KVPair.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java:
      - line_number: 19
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.TransactionManagement
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - line_number: 25
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.ejb.TransactionManagementType
          package: org.jboss.as.quickstarts.bmt
          renamed: ejb
      - line_number: 20
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 26
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 22
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.transaction.Status
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - line_number: 23
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Module
          name: javax.transaction.UserTransaction
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java:
      - line_number: 22
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - line_number: 23
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.ServletException
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - line_number: 24
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - line_number: 25
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServlet
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - line_number: 26
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      - line_number: 27
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/TransactionServlet.java
          kind: Module
          name: javax.servlet.http.HttpServletResponse
          package: org.jboss.as.quickstarts.bmt
          renamed: servlet
      src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java:
      - line_number: 19
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.bmt
          renamed: inject
      - line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.EntityManagerFactory
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.persistence.PersistenceUnit
          package: org.jboss.as.quickstarts.bmt
          renamed: persistence
      - line_number: 23
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - line_number: 24
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.Status
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
      - line_number: 25
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/UnManagedComponent.java
          kind: Module
          name: javax.transaction.UserTransaction
          package: org.jboss.as.quickstarts.bmt
          renamed: transaction
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java:
      - line_number: 22
        message: 'Replace the `javax.faces` import statement with `jakarta.faces` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.faces.bean.RequestScoped
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: faces
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - line_number: 24
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.inject.Named
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - line_number: 26
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 27
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 28
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 30
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/CustomerManager.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java:
      - line_number: 21
        message: 'Replace the `javax.faces` import statement with `jakarta.faces` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.faces.bean.RequestScoped
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: faces
      - line_number: 22
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.inject.Named
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: inject
      - line_number: 25
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 26
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 27
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 28
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      - line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/controller/LogMessageManager.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.controller
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.EJBException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 23
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 25
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 26
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: inject
      - line_number: 27
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - line_number: 29
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - line_number: 30
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - line_number: 31
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 32
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 33
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 34
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 35
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - line_number: 19
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: annotation
      - line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: inject
      - line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSConnectionFactory
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 23
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttribute
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 24
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.ejb.TransactionAttributeType
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: ejb
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: jms
      - line_number: 27
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - line_number: 28
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: persistence
      - line_number: 29
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicMixedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 30
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.HeuristicRollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 31
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.NotSupportedException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 32
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.RollbackException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      - line_number: 33
        message: 'Replace the `javax.transaction` import statement with `jakarta.transaction` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.transaction.SystemException
          package: org.jboss.as.quickstarts.cmt.ejb
          renamed: transaction
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: ejb
      - line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: ejb
      - line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      - line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.cmt.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java:
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 23
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 24
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 25
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/Customer.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java:
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 22
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 23
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 24
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
      - line_number: 25
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/model/LogMessage.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.as.quickstarts.cmt.model
          renamed: persistence
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/model/InventoryEntity.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/InventoryEntity.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: com.redhat.coolstore.model
          renamed: xml
      src/main/java/com/redhat/coolstore/model/Order.java:
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.CascadeType
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.FetchType
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.OneToMany
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/Order.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      src/main/java/com/redhat/coolstore/model/OrderItem.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Column
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Entity
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Id
          package: com.redhat.coolstore.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/OrderItem.java
          kind: Module
          name: javax.persistence.Table
          package: com.redhat.coolstore.model
          renamed: persistence
      src/main/java/com/redhat/coolstore/model/ShoppingCart.java:
      - line_number: 8
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/model/ShoppingCart.java
          kind: Module
          name: javax.enterprise.context.Dependent
          package: com.redhat.coolstore.model
          renamed: enterprise
      src/main/java/com/redhat/coolstore/rest/CartEndpoint.java:
      - line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.enterprise.context.SessionScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - line_number: 10
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - line_number: 11
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: com.redhat.coolstore.rest
          renamed: jms
      - line_number: 12
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: com.redhat.coolstore.rest
          renamed: jms
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/OrderEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: com.redhat.coolstore.rest
          renamed: enterprise
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/ProductEndpoint.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/rest/RestApplication.java:
      - line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: com.redhat.coolstore.rest
          renamed: ws
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: com.redhat.coolstore.rest
          renamed: ws
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - line_number: 12
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: com.redhat.coolstore.service
          renamed: persistence
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: com.redhat.coolstore.service
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: com.redhat.coolstore.service
          renamed: persistence
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: com.redhat.coolstore.service
          renamed: jms
      - line_number: 7
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.Message
          package: com.redhat.coolstore.service
          renamed: jms
      - line_number: 8
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: com.redhat.coolstore.service
          renamed: jms
      - line_number: 9
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: com.redhat.coolstore.service
          renamed: jms
      src/main/java/com/redhat/coolstore/service/ProductService.java:
      - line_number: 7
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/service/PromoService.java:
      - line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/PromoService.java
          kind: Module
          name: javax.enterprise.context.ApplicationScoped
          package: com.redhat.coolstore.service
          renamed: enterprise
      src/main/java/com/redhat/coolstore/service/ShippingService.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.service
          renamed: annotation
      - line_number: 4
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.ejb.Stateless
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      - line_number: 7
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.JMSContext
          package: com.redhat.coolstore.service
          renamed: jms
      - line_number: 8
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
          renamed: jms
      src/main/java/com/redhat/coolstore/service/ShoppingCartService.java:
      - line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.ejb.Stateful
          package: com.redhat.coolstore.service
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartService.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.service
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java:
      - line_number: 6
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.PostConstruct
          package: com.redhat.coolstore.utils
          renamed: annotation
      - line_number: 7
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.annotation.Resource
          package: com.redhat.coolstore.utils
          renamed: annotation
      - line_number: 8
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Singleton
          package: com.redhat.coolstore.utils
          renamed: ejb
      - line_number: 9
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.Startup
          package: com.redhat.coolstore.utils
          renamed: ejb
      - line_number: 10
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagement
          package: com.redhat.coolstore.utils
          renamed: ejb
      - line_number: 11
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.ejb.TransactionManagementType
          package: com.redhat.coolstore.utils
          renamed: ejb
      - line_number: 12
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/DataBaseMigrationStartup.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/Producers.java:
      - line_number: 3
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: com.redhat.coolstore.utils
          renamed: enterprise
      - line_number: 4
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: com.redhat.coolstore.utils
          renamed: enterprise
      src/main/java/com/redhat/coolstore/utils/StartupListener.java:
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/StartupListener.java
          kind: Module
          name: javax.inject.Inject
          package: com.redhat.coolstore.utils
          renamed: inject
      src/main/java/com/redhat/coolstore/utils/Transformers.java:
      - line_number: 13
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.Json
          package: com.redhat.coolstore.utils
          renamed: json
      - line_number: 14
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArray
          package: com.redhat.coolstore.utils
          renamed: json
      - line_number: 15
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonArrayBuilder
          package: com.redhat.coolstore.utils
          renamed: json
      - line_number: 16
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonObject
          package: com.redhat.coolstore.utils
          renamed: json
      - line_number: 17
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonReader
          package: com.redhat.coolstore.utils
          renamed: json
      - line_number: 18
        message: 'Replace the `javax.json` import statement with `jakarta.json` '
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Transformers.java
          kind: Module
          name: javax.json.JsonWriter
          package: com.redhat.coolstore.utils
          renamed: json
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - line_number: 22
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - line_number: 20
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.ejb.ActivationConfigProperty
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - line_number: 21
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.ejb.MessageDriven
          package: org.jboss.as.quickstarts.mdb
          renamed: ejb
      - line_number: 22
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 23
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
          renamed: jms
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 22
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.as.quickstarts.servlet
          renamed: annotation
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.servlet
          renamed: inject
      - line_number: 24
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Destination
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 25
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 26
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 27
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 28
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 29
        message: 'Replace the `javax.jms` import statement with `jakarta.jms` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
          renamed: jms
      - line_number: 30
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.ServletException
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - line_number: 31
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - line_number: 32
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServlet
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - line_number: 33
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
      - line_number: 34
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.servlet.http.HttpServletResponse
          package: org.jboss.as.quickstarts.servlet
          renamed: servlet
    kitchensink:
      src/test/java/org/jboss/as/quickstarts/kitchensink/test/MemberRegistrationIT.java:
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/src/test/java/org/jboss/as/quickstarts/kitchensink/test/MemberRegistrationIT.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.as.quickstarts.kitchensink.test
          renamed: inject
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Address.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.Valid
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.EnumType.STRING
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Enumerated
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.TemporalType.TIMESTAMP
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Temporal
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.model
          renamed: ejb
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java:
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Lob
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.PostLoad
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Version
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OrderBy
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.UriInfo
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 11
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 12
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.rest
          renamed: enterprise
      - line_number: 13
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 14
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolation
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 15
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 18
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 25
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 26
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 27
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 26
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java:
      - line_number: 19
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java:
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.HttpHeaders
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.ExceptionMapper
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.Provider
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.WebApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 30
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 28
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - line_number: 11
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.examples.ticketmonster.service
          renamed: annotation
      - line_number: 12
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 13
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timeout
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 14
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 15
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerConfig
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 16
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerService
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 17
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 18
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Asynchronous
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Singleton
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 8
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 10
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.enterprise.event.Observes
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 11
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 20
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.LockModeType
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 5
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      - line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.util
          renamed: persistence
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java:
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java:
      - line_number: 10
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v1/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Address.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.Valid
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.EnumType.STRING
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Enumerated
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.TemporalType.TIMESTAMP
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Temporal
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.model
          renamed: ejb
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java:
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Lob
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.PostLoad
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Version
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OrderBy
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.UriInfo
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 13
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 14
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.rest
          renamed: enterprise
      - line_number: 15
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolation
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 17
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.client.Client
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.client.ClientBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.client.Entity
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 13
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 25
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 26
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 27
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 17
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java:
      - line_number: 22
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 23
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 25
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java:
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.HttpHeaders
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.ExceptionMapper
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.Provider
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.WebApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 30
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 28
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - line_number: 11
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.annotation.Resource
          package: org.jboss.examples.ticketmonster.service
          renamed: annotation
      - line_number: 12
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 13
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timeout
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 14
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 15
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerConfig
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 16
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerService
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 17
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 18
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Asynchronous
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Singleton
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 8
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
          renamed: ejb
      - line_number: 9
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 10
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.enterprise.event.Observes
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      - line_number: 11
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.service
          renamed: ws
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java:
      - line_number: 20
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Module
          name: javax.enterprise.context.RequestScoped
          package: org.jboss.examples.ticketmonster.service
          renamed: enterprise
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.LockModeType
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.service
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java:
      - line_number: 21
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
          kind: Module
          name: javax.servlet.annotation.WebInitParam
          package: org.jboss.examples.ticketmonster.servlet
          renamed: servlet
      - line_number: 22
        message: 'Replace the `javax.servlet` import statement with `jakarta.servlet` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/servlet/FF4jConsoleServlet.java
          kind: Module
          name: javax.servlet.annotation.WebServlet
          package: org.jboss.examples.ticketmonster.servlet
          renamed: servlet
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java:
      - line_number: 22
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
          kind: Module
          name: javax.enterprise.context.ApplicationScoped
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      - line_number: 23
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 5
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      - line_number: 6
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
          renamed: enterprise
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.util
          renamed: persistence
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java:
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
          renamed: inject
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java:
      - line_number: 10
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/BookingServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/EventServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingContractTest.java:
      - line_number: 38
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingContractTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingOrdersServiceTest.java:
      - line_number: 38
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ExternalBookingOrdersServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/ShowServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java:
      - line_number: 8
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: inject
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/backend-v2/src/test/java/org/jboss/examples/ticketmonster/test/rest/VenueServiceTest.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.test.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Address.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.JoinColumn
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.Valid
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.EnumType.STRING
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Enumerated
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.TemporalType.TIMESTAMP
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.Temporal
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.model
          renamed: ejb
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java:
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Lob
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.PostLoad
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.persistence.Version
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.OrderBy
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 18
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 19
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.Table
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.persistence.UniqueConstraint
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
          renamed: validation
      monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Column
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Entity
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.GeneratedValue
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.Id
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      - line_number: 16
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Module
          name: javax.persistence.OneToMany
          package: org.jboss.examples.ticketmonster.model
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 7
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.ws.rs.core.UriInfo
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 11
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 12
        message: 'Replace the `javax.enterprise` import statement with `jakarta.enterprise` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.enterprise.event.Event
          package: org.jboss.examples.ticketmonster.rest
          renamed: enterprise
      - line_number: 13
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 14
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolation
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 15
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.validation.ConstraintViolationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: validation
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedHashMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 3
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Module
          name: javax.ws.rs.core.Application
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 5
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 5
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 6
        message: 'Replace the `javax.inject` import statement with `jakarta.inject` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
          renamed: inject
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 15
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 16
        message: 'Replace the `javax.` import statement with `jakarta.` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ''
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 14
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 24
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 25
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 26
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 27
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java:
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Context
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 6
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.HttpHeaders
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 7
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 8
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.ExceptionMapper
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 9
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
          kind: Module
          name: javax.ws.rs.ext.Provider
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ejb.ApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.WebApplicationException
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 5
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.Query
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MediaType
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Module
          name: javax.ws.rs.core.MultivaluedMap
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 6
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.OptimisticLockException
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Consumes
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 13
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.DELETE
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 14
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.GET
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 15
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.POST
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 16
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PUT
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 17
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 18
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.PathParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 19
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.Produces
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 20
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.QueryParam
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 21
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 22
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.Response.Status
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      - line_number: 23
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.ws.rs.core.UriBuilder
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 3
        message: 'Replace the `javax.ejb` import statement with `jakarta.ejb` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ejb.Stateless
          package: org.jboss.examples.ticketmonster.rest
          renamed: ejb
      - line_number: 4
        message: 'Replace the `javax.ws` import statement with `jakarta.ws` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Module
          name: javax.ws.rs.Path
          package: org.jboss.examples.ticketmonster.rest
          renamed: ws
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.TypedQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 10
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaBuilder
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.CriteriaQuery
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Predicate
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.criteria.Root
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: persistence
      - line_number: 30
        message: 'Replace the `javax.xml` import statement with `jakarta.xml` '
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.xml.bind.annotation.XmlRootElement
          package: org.jboss.examples.ticketmonster.rest.dto
          renamed: xml
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Address_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Address_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Allocation_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Allocation_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Booking_.java:
      - line_number: 7
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Booking_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/EventCategory_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/EventCategory_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Event_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Event_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/MediaItem_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/MediaItem_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Performance_.java:
      - line_number: 6
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Performance_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Seat_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Seat_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/SectionAllocation_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/SectionAllocation_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Section_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Section_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Show_.java:
      - line_number: 6
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Show_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/TicketCategory_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/TicketCategory_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/TicketPrice_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/TicketPrice_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Ticket_.java:
      - line_number: 5
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Ticket_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Venue_.java:
      - line_number: 6
        message: 'Replace the `javax.annotation` import statement with `jakarta.annotation` '
        variables:
          file: file:///tmp/source-code/monolith/target/generated-sources/annotations/org/jboss/examples/ticketmonster/model/Venue_.java
          kind: Module
          name: javax.annotation.Generated
          package: org.jboss.examples.ticketmonster.model
          renamed: annotation
      orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java:
      - line_number: 28
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders.booking
          renamed: persistence
      - line_number: 29
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.ticketmonster.orders.booking
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java:
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders.booking
          renamed: persistence
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
          kind: Module
          name: javax.persistence.LockModeType
          package: org.ticketmonster.orders.booking
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
          kind: Module
          name: javax.persistence.NoResultException
          package: org.ticketmonster.orders.booking
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.ticketmonster.orders.booking
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.persistence.GenerationType.TABLE
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 15
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.validation.Valid
          package: org.ticketmonster.orders.domain
          renamed: validation
      - line_number: 16
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/EventId.java:
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/EventId.java
          kind: Module
          name: javax.persistence.Column
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/EventId.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.ticketmonster.orders.domain
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java:
      - line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java
          kind: Module
          name: javax.persistence.Entity
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 21
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/IdGenerator.java
          kind: Module
          name: javax.persistence.Id
          package: org.ticketmonster.orders.domain
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/domain/PerformanceId.java:
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/PerformanceId.java
          kind: Module
          name: javax.persistence.Column
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/PerformanceId.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.ticketmonster.orders.domain
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
          kind: Module
          name: javax.persistence.Column
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 4
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 5
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
          kind: Module
          name: javax.persistence.ManyToOne
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java:
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 9
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Module
          name: javax.persistence.GenerationType.TABLE
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 17
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java:
      - line_number: 11
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Module
          name: javax.persistence.CascadeType.ALL
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 12
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Module
          name: javax.persistence.FetchType.EAGER
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 6
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java:
      - line_number: 7
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Module
          name: javax.persistence.GenerationType.TABLE
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 13
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketCategory.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java:
      - line_number: 3
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Module
          name: javax.persistence.GenerationType.IDENTITY
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 8
        message: 'Replace the `javax.validation` import statement with `jakarta.validation` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/TicketPriceGuide.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.ticketmonster.orders.domain
          renamed: validation
      orders-service/src/main/java/org/ticketmonster/orders/domain/VenueId.java:
      - line_number: 19
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/VenueId.java
          kind: Module
          name: javax.persistence.Column
          package: org.ticketmonster.orders.domain
          renamed: persistence
      - line_number: 20
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/domain/VenueId.java
          kind: Module
          name: javax.persistence.Embeddable
          package: org.ticketmonster.orders.domain
          renamed: persistence
      orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java:
      - line_number: 28
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders
          renamed: persistence
      - line_number: 29
        message: 'Replace the `javax.persistence` import statement with `jakarta.persistence` '
        variables:
          file: file:///tmp/source-code/orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java
          kind: Module
          name: javax.persistence.PersistenceContext
          package: org.ticketmonster.orders
          renamed: persistence
  javax-to-jakarta-properties-00001:
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - line_number: 10
        message: 'Rename properties prefixed by `javax` with `jakarta` '
        variables:
          matchingText: <property name="javax.
      target/classes/META-INF/persistence.xml:
      - line_number: 10
        message: 'Rename properties prefixed by `javax` with `jakarta` '
        variables:
          matchingText: <property name="javax.
kai/quarkus:
  jms-to-reactive-quarkus-00000:
    cmt:
      pom.xml:
      - line_number: 167
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        variables:
          name: org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec
          version: 2.0.0.Final-redhat-00001
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        variables:
          name: jakarta.jms.jakarta.jms-api
          version: 3.1.0
    helloworld-mdb:
      pom.xml:
      - line_number: 145
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        variables:
          name: org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec
          version: 2.0.0.Final-redhat-00001
      - line_number: null
        message: "Usage of JMS is not supported in Quarkus. It is recommended to use\
          \ Quarkus' SmallRye Reactive Messaging instead of JMS.\n Replace the JavaEE/Jakarta\
          \ JMS dependency with Smallrye Reactive:\n \n ```\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-smallrye-reactive-messaging</artifactId>\n </dependency>\n\
          \ \n ```\n \n Take a look at the Smallrye Reactive Connectors link below\
          \ to know more about how to interact with different technologies (AMQP,\
          \ Apache Camel, ...)"
        variables:
          name: jakarta.jms.jakarta.jms-api
          version: 3.1.0
  jms-to-reactive-quarkus-00010:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - line_number: 36
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - line_number: 15
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - line_number: 34
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - line_number: 34
        message: "Enterprise Java Beans (EJBs) are not supported in Quarkus. CDI must\
          \ be used.\n Please replace the `@MessageDriven` annotation with a CDI scope\
          \ annotation like `@ApplicationScoped`."
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
  jms-to-reactive-quarkus-00020:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
      - line_number: 38
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
      - line_number: 39
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - line_number: 16
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
      - line_number: 17
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
      - line_number: 18
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Class
          name: MessageDriven
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - line_number: 35
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - line_number: 36
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - line_number: 35
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - line_number: 36
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
      - line_number: 37
        message: "The `destinationLookup` property can be migrated by annotating a\
          \ message handler method (potentially `onMessage`) with the\n `org.eclipse.microprofile.reactive.messaging.Incoming`\
          \ annotation, indicating the name of the queue as a value:\n \n Before:\n\
          \ ```\n @MessageDriven(name = \"HelloWorldQueueMDB\", activationConfig =\
          \ \n public class MessageListenerImpl implements MessageListener \n }}\n\
          \ ```\n \n After:\n ```\n public class MessageListenerImpl implements MessageListener\
          \ \n }}\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Class
          name: MessageDriven
          package: org.jboss.as.quickstarts.mdb
  jms-to-reactive-quarkus-00030:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - line_number: 26
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
      - line_number: 36
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Field
          name: queue
          package: org.jboss.as.quickstarts.cmt.ejb
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 28
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
      - line_number: 79
        message: "JMS `Queue`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Queue to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/queue/HELLOWORLDMDBQueue\"\
          )\n private Queue queue;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBQueue\")\n Emitter<String> queueEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Field
          name: queue
          package: org.jboss.as.quickstarts.servlet
  jms-to-reactive-quarkus-00040:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - line_number: 64
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Method
          name: init
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - line_number: 8
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
      - line_number: 24
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Field
          name: ordersTopic
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 29
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
      - line_number: 82
        message: "JMS `Topic`s should be replaced with Micrometer `Emitter`s feeding\
          \ a Channel. See the following example of migrating\n a Topic to an Emitter:\n\
          \ \n Before:\n ```\n @Resource(lookup = \"java:/topic/HELLOWORLDMDBTopic\"\
          )\n private Topic topic;\n ```\n \n After:\n ```\n @Inject\n @Channel(\"\
          HELLOWORLDMDBTopic\")\n Emitter<String> topicEmitter;\n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Field
          name: topic
          package: org.jboss.as.quickstarts.servlet
  jms-to-reactive-quarkus-00050:
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - line_number: 27
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSConnectionFactory
          package: org.jboss.as.quickstarts.cmt.ejb
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.cmt.ejb
      - line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java:
      - line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.cmt.mdb
      - line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.cmt.mdb
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.cmt.mdb
      - line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/mdb/HelloWorldMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.cmt.mdb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/rest/CartEndpoint.java:
      - line_number: 11
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: com.redhat.coolstore.rest
      - line_number: 12
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/CartEndpoint.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: com.redhat.coolstore.rest
      src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java:
      - line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/InventoryNotificationMDB.java
          kind: Module
          name: javax.jms.*
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java:
      - line_number: 6
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: com.redhat.coolstore.service
      - line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.Message
          package: com.redhat.coolstore.service
      - line_number: 8
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: com.redhat.coolstore.service
      - line_number: 9
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderServiceMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - line_number: 7
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.JMSContext
          package: com.redhat.coolstore.service
      - line_number: 8
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Module
          name: javax.jms.Topic
          package: com.redhat.coolstore.service
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java:
      - line_number: 22
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
      - line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
      - line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldQueueMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java:
      - line_number: 22
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.JMSException
          package: org.jboss.as.quickstarts.mdb
      - line_number: 23
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.Message
          package: org.jboss.as.quickstarts.mdb
      - line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.MessageListener
          package: org.jboss.as.quickstarts.mdb
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/mdb/HelloWorldTopicMDB.java
          kind: Module
          name: javax.jms.TextMessage
          package: org.jboss.as.quickstarts.mdb
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 24
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Destination
          package: org.jboss.as.quickstarts.servlet
      - line_number: 25
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSContext
          package: org.jboss.as.quickstarts.servlet
      - line_number: 26
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinition
          package: org.jboss.as.quickstarts.servlet
      - line_number: 27
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.JMSDestinationDefinitions
          package: org.jboss.as.quickstarts.servlet
      - line_number: 28
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Queue
          package: org.jboss.as.quickstarts.servlet
      - line_number: 29
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: javax.jms.Topic
          package: org.jboss.as.quickstarts.servlet
      - line_number: 5
        message: References to JavaEE/JakartaEE JMS elements should be removed and
          replaced with their Quarkus SmallRye/Microprofile equivalents.
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Module
          name: jakarta.jms.Destination
          package: org.jboss.as.quickstarts.servlet
  persistence-to-quarkus-00000:
    bmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/main/webapp/WEB-INF/bmt-quickstart-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    cmt:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    eap-coolstore-monolith:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    greeter:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/main/webapp/WEB-INF/greeter-quickstart-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    kitchensink:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/main/webapp/WEB-INF/kitchensink-quickstart-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/test/resources/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/test/resources/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    tasks-qute:
      src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/main/webapp/WEB-INF/tasks-jsf-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/test/resources/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      src/test/resources/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
    ticket-monster:
      backend-v1/src/main/resources-mysql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/src/main/resources-postgresql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/src/main/webapp/WEB-INF/ticket-monster-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/src/test/resources/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/src/test/resources/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/target/test-classes/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v1/target/test-classes/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/main/resources-mysql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/main/resources-postgresql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/main/webapp/WEB-INF/ticket-monster-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/test/resources/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/src/test/resources/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/target/test-classes/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      backend-v2/target/test-classes/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/main/resources-mysql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/main/resources-postgresql/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/main/resources/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/main/resources/META-INF/resources/WEB-INF/ticket-monster-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/main/webapp/WEB-INF/ticket-monster-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/test/resources/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/src/test/resources/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/target/classes/META-INF/persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/target/classes/META-INF/resources/WEB-INF/ticket-monster-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/target/test-classes/META-INF/test-persistence.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
      monolith/target/test-classes/test-ds.xml:
      - line_number: null
        message: "It is recommended to move persistence related configuration from\
          \ an XML file to a properties one.\n This allows centralization of the configuration\
          \ in Quarkus. Check the link for more information.\n \n \n Datasource and\
          \ persistence configurations in XML can be substituted with a single centralized\
          \ properties file. Here is an example of a translation:\n \n The following\
          \ datasource configuration:\n ```\n <datasources xmlns=\"http://www.jboss.org/ironjacamar/schema\"\
          \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"\
          http://www.jboss.org/ironjacamar/schema http://docs.jboss.org/ironjacamar/schema/datasources_1_0.xsd\"\
          >\n <!-- The datasource is bound into JNDI at this location. We reference\n\
          \ this in META-INF/persistence.xml -->\n <datasource jndi-name=\"java:jboss/datasources/TasksJsfQuickstartDS\"\
          \n pool-name=\"tasks-jsf-quickstart\" enabled=\"true\"\n use-java-context=\"\
          true\">\n <connection-url>jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1</connection-url>\n\
          \ <driver>h2</driver>\n <security>\n <user-name>sa</user-name>\n <password>sa</password>\n\
          \ </security>\n </datasource>\n </datasources>\n ```\n along with the following\
          \ persistence configuration:\n ```\n <persistence version=\"2.1\"\n xmlns=\"\
          http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
          \n xsi:schemaLocation=\"\n http://xmlns.jcp.org/xml/ns/persistence\n http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\"\
          >\n <persistence-unit name=\"primary\">\n <!-- We use a different datasource\
          \ for tests, so as to not overwrite\n production data. This is an unmanaged\
          \ data source, backed by H2, an in memory\n database. Production applications\
          \ should use a managed datasource. -->\n <!-- The datasource is deployed\
          \ as WEB-INF/test-ds.xml,\n you can find it in the source at src/test/resources/test-ds.xml\
          \ -->\n <jta-data-source>java:jboss/datasources/TasksJsfQuickstartDS</jta-data-source>\n\
          \ <properties>\n <!-- Properties for Hibernate -->\n <property name=\"hibernate.hbm2ddl.auto\"\
          \ value=\"create-drop\" />\n <property name=\"hibernate.show_sql\" value=\"\
          false\" />\n </properties>\n </persistence-unit>\n </persistence>\n ```\n\
          \ can be translated to:\n ```\n quarkus.datasource.jdbc.url=jdbc:h2:mem:tasks-jsf-quickstart;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1\n\
          \ quarkus.datasource.db-kind=h2\n quarkus.datasource.username=sa\n quarkus.datasource.password=sa\n\
          \n quarkus.hibernate-orm.database.generation=drop-and-create\n ```"
        variables: {}
  persistence-to-quarkus-00011:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - line_number: 13
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: com.redhat.coolstore.service
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 8
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - line_number: 10
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 8
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - line_number: 10
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java:
      - line_number: 8
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java:
      - line_number: 9
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java:
      - line_number: 5
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java:
      - line_number: 10
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.rest.dto
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.service
      monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 7
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.jboss.examples.ticketmonster.util
      orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java:
      - line_number: 28
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/BookingServiceController.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders.booking
      orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java:
      - line_number: 6
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/booking/SeatAllocationService.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders.booking
      orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java:
      - line_number: 28
        message: "In JavaEE/JakartaEE, using `@PersistenceContext` was needed in order\
          \ to inject a data source. Quarkus, on the other hand,\n will create the\
          \ bean automatically just by correctly setting up your datasource. This\
          \ makes having a `@Produces` annotation\n on the `EntityManager` illegal\
          \ in Quarkus.\n \n If you are using a `@Produces` annotation for your EntityManager,\
          \ and it is not needed after configuring your datasource, remove it and\
          \ `@Inject` the EntityManager.\n Otherwise, if the producer is still needed,\
          \ please create a qualification for your produced `EntityManager`, as well\
          \ as every injection point for the EM.\n \n For instance, you can create\
          \ an `ExtendedContext` qualifier:\n ```\n @Qualifier\n @Target()\n @Retention(RetentionPolicy.RUNTIME)\n\
          \ public @interface ExtendedContext \n ```\n and then inject your entity\
          \ managers:\n ```\n @ExtendedContext\n public EntityManager getEm() \n ```"
        variables:
          file: file:///tmp/source-code/orders-service/src/test/java/org/ticketmonster/orders/TeiidVdbQueryIT.java
          kind: Module
          name: javax.persistence.EntityManager
          package: org.ticketmonster.orders
quarkus/springboot:
  cdi-to-quarkus-00000:
    kitchensink:
      pom.xml:
      - line_number: 48
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 130
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
      backend-v2/pom.xml:
      - line_number: 141
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
      monolith/pom.xml:
      - line_number: 130
        message: "\n Dependency `javax.enterprise:cdi-api` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.enterprise\n            cdi-api\n      \
            \      provided\n        "
          matchingXML: <groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope>
  cdi-to-quarkus-00020:
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 136
        message: "\n Dependency `javax.inject:javax.inject` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n     \
            \       provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
      backend-v2/pom.xml:
      - line_number: 147
        message: "\n Dependency `javax.inject:javax.inject` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n     \
            \       provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
      monolith/pom.xml:
      - line_number: 136
        message: "\n Dependency `javax.inject:javax.inject` has to be replaced with\
          \ `io.quarkus:quarkus-arc` artifact.\n "
        variables:
          data: dependency
          innerText: "\n            javax.inject\n            javax.inject\n     \
            \       provided\n        "
          matchingXML: <groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope>
  cdi-to-quarkus-00030:
    bmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    cmt:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    eap-coolstore-monolith:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
      webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    greeter:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 18
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: "\n\n    \n    \n"
          matchingXML: "<!-- Uncomment this alternative to see EJB declarative transactions\
            \ in use --><!-- <alternatives> \n        <class>org.jboss.as.quickstarts.greeter.domain.EJBUserDao</class>\n\
            \    </alternatives> -->"
    helloworld-mdb:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    kitchensink:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
    tasks-qute:
      src/main/webapp/WEB-INF/beans.xml:
      - line_number: 19
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
      src/test/webapp/WEB-INF/beans.xml:
      - line_number: 25
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: "\n    \n        org.jboss.as.quickstarts.tasksJsf.Testing\n\
            \    \n"
          matchingXML: <alternatives><stereotype>org.jboss.as.quickstarts.tasksJsf.Testing</stereotype></alternatives>
    ticket-monster:
      backend-v1/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
      backend-v2/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
      monolith/src/main/webapp/WEB-INF/beans.xml:
      - line_number: 5
        message: "\n `beans.xml` descriptor content is ignored and it could be removed\
          \ from the application. \n Refer to the guide referenced below to check\
          \ the supported CDI feature in Quarkus.\n "
        variables:
          data: beans
          innerText: '

            '
          matchingXML: ''
  cdi-to-quarkus-00040:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/utils/Producers.java:
      - line_number: 12
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/utils/Producers.java
          kind: Method
          name: Produces
          package: com.redhat.coolstore.utils
    helloworld-mdb:
      src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java:
      - line_number: 39
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/servlet/HelloWorldMDBServletClient.java
          kind: Method
          name: GET
          package: org.jboss.as.quickstarts.servlet
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 29
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Field
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.util
      - line_number: 38
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Method
          name: Produces
          package: org.jboss.examples.ticketmonster.util
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java:
      - line_number: 34
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/FF4jFactory.java
          kind: Method
          name: Produces
          package: org.jboss.examples.ticketmonster.util
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 29
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Field
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.util
      - line_number: 38
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Method
          name: Produces
          package: org.jboss.examples.ticketmonster.util
      monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java:
      - line_number: 29
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Field
          name: SuppressWarnings
          package: org.jboss.examples.ticketmonster.util
      - line_number: 38
        message: "In Quarkus, you can skip the @Produces annotation completely if\
          \ the producer method is annotated with a scope annotation, a stereotype\
          \ or a qualifier..\n This field could be accessed using a `@Named` getter\
          \ method instead.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Method
          name: Produces
          package: org.jboss.examples.ticketmonster.util
  cdi-to-quarkus-00050:
    bmt:
      src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java:
      - line_number: 39
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/bmt/ManagedComponent.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.bmt
    cmt:
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java:
      - line_number: 39
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/CustomerManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java:
      - line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/InvoiceManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
      src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java:
      - line_number: 37
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/org/jboss/as/quickstarts/cmt/ejb/LogMessageManagerEJB.java
          kind: Class
          name: Stateless
          package: org.jboss.as.quickstarts.cmt.ejb
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/service/CatalogService.java:
      - line_number: 18
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/CatalogService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/OrderService.java:
      - line_number: 12
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/OrderService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ProductService.java:
      - line_number: 14
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ProductService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShippingService.java:
      - line_number: 7
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShippingService.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
      src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java:
      - line_number: 13
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/service/ShoppingCartOrderProcessor.java
          kind: Class
          name: Stateless
          package: com.redhat.coolstore.service
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 52
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 25
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 38
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java:
      - line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 29
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 22
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.service
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 42
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 25
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 38
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java:
      - line_number: 33
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/PingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 29
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 22
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.service
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java:
      - line_number: 52
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java:
      - line_number: 25
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java:
      - line_number: 38
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java:
      - line_number: 29
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java:
      - line_number: 30
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java:
      - line_number: 22
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java:
      - line_number: 28
        message: "Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless`\
          \ annotation with a scope eg `@ApplicationScoped`\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.service
  dependency-removal-for-quarkus-00000:
    bmt:
      pom.xml:
      - line_number: 152
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
      - line_number: 159
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
    cmt:
      pom.xml:
      - line_number: 155
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
      - line_number: 178
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
    helloworld-mdb:
      pom.xml:
      - line_number: 140
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 2.0.0.Final-redhat-00001
      - line_number: 157
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.annotation.jboss-annotations-api_1.3_spec
          version: 2.0.1.Final-redhat-00001
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Non-quarkus dependencies are no longer required and can be removed.\n\
          \ "
        variables:
          name: org.jboss.spec.javax.ejb.jboss-ejb-api_3.2_spec
          version: 1.0.0.Final-redhat-1
  javaee-faces-to-quarkus-00000:
    cmt:
      pom.xml:
      - line_number: 161
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
    greeter:
      pom.xml:
      - line_number: 76
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
    kitchensink:
      pom.xml:
      - line_number: 135
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.2_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope>
    tasks-qute:
      pom.xml:
      - line_number: 88
        message: "\n \n JSF Dependencies with groupId `org.jboss.spec.javax.faces`\
          \ should be replaced with \n \n ```\n <!-- Quarkus MyFaces dependencies\
          \ --> \n <dependency>\n <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>\n\
          \ <artifactId>myfaces-quarkus</artifactId>\n <version>4.0.1</version>\n\
          \ </dependency>\n \n <!-- Quarkus Faces utilities and components extensions\
          \ -->\n <dependency>\n <groupId>io.quarkiverse.primefaces</groupId>\n <artifactId>quarkus-primefaces</artifactId>\n\
          \ <version>3.13.1</version>\n </dependency>\n <dependency>\n <groupId>io.quarkiverse.omnifaces</groupId>\n\
          \ <artifactId>quarkus-omnifaces</artifactId>\n <version>4.2.0</version>\n\
          \ </dependency>\n ```\n \n "
        variables:
          data: dependency
          innerText: "\n            org.jboss.spec.javax.faces\n            jboss-jsf-api_2.3_spec\n\
            \            provided\n        "
          matchingXML: <groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope>
  javaee-pom-to-quarkus-00010:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-client\n    quarkus\n    Quickstart: ejb-remote-to-resteasy\
            \ - client\n    This project demonstrates how to migrate an application\
            \ that accesses an EJB from a remote client, to RESTEasy; this is the\
            \ client POM file\n\n    \n        \n            io.quarkus\n        \
            \    quarkus-rest-client-reactive\n        \n    \n\n    \n        \n\
            \            \n                maven-compiler-plugin\n               \
            \ ${compiler-plugin.version}\n            \n            \n           \
            \     io.quarkus.platform\n                quarkus-maven-plugin\n    \
            \            true\n                \n                    \n          \
            \              \n                            build\n                 \
            \       \n                    \n                \n            \n     \
            \       \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-client</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - client</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the client POM file</description><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-server-side\n    quarkus\n    Quickstart:\
            \ ejb-remote-to-resteasy - server-side\n    This project demonstrates\
            \ how to migrate an application that accesses an EJB from a remote client,\
            \ to RESTEasy; this is the server side POM file\n\n    \n        \n  \
            \          Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive\n        \n    \n\n    \n     \
            \   \n            \n                maven-compiler-plugin\n          \
            \      ${compiler-plugin.version}\n            \n            \n      \
            \          io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \           \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-server-side</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - server-side</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the server side POM file</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus BOM to omit the version of the different Quarkus\
          \ dependencies. \n Add the following sections to the `pom.xml` file: \n\n\
          \ ```xml\n <properties> \n <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>\
          \ \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <dependencyManagement> \n <dependencies> \n <dependency>\
          \ \n <groupId>$</groupId> \n <artifactId>$</artifactId> \n <version>$</version>\
          \ \n <type>pom</type> \n <scope>import</scope> \n </dependency> \n </dependencies>\
          \ \n </dependencyManagement> \n ```\n Check the latest Quarkus version available\
          \ from the `Quarkus - Releases` link below.\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00020:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-remote-to-resteasy\n\
            \    quarkus\n    pom\n    Quickstart: ejb-remote-to-resteasy\n    This\
            \ project demonstrates how to migrate from remote EJBs to RESTEasy (both\
            \ client and server)\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n    \n        server-side\n        client\n    \n\n   \
            \ \n        \n            \n                org.wildfly.plugins\n    \
            \            wildfly-maven-plugin\n                \n                \
            \    true\n                \n            \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote-to-resteasy</name><description>This project demonstrates\
            \ how to migrate from remote EJBs to RESTEasy (both client and server)</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Use the Quarkus Maven plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>\
          \ \n <quarkus.platform.version>3.1.0.Final</quarkus.platform.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <groupId>$</groupId>\n\
          \ <artifactId>quarkus-maven-plugin</artifactId>\n <version>$</version>\n\
          \ <extensions>true</extensions>\n <executions>\n <execution>\n <goals>\n\
          \ <goal>build</goal>\n <goal>generate-code</goal>\n <goal>generate-code-tests</goal>\n\
          \ </goals>\n </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00030:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    bmt\n    quarkus\n\
            \    jar\n    Quickstart: bmt-to-quarkus\n    This project demonstrates\
            \ how to migrate Bean Managed Transactions to Quarkus\n\n    \n      \
            \  \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-undertow\n    \
            \    \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>bmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            bmt-to-quarkus</name><description>This project demonstrates how to migrate
            Bean Managed Transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    cmt\n    quarkus\n\
            \    jar\n    Quickstart: cmt-to-quarkus\n    This project demonstrates\
            \ how to migrate an app using container-managed transactions to Quarkus\n\
            \n    \n        \n            Apache License, Version 2.0\n          \
            \  http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n\
            \        \n    \n\n    \n        11\n        3.6.6\n        3.11.0\n \
            \       UTF-8\n        UTF-8\n    \n\n    \n        \n            \n \
            \               io.quarkus.platform\n                quarkus-bom\n   \
            \             ${quarkus.platform.version}\n                pom\n     \
            \           import\n            \n        \n    \n\n    \n        \n \
            \       \n            jakarta.inject\n            jakarta.inject-api\n\
            \            provided\n        \n\n        \n        \n            io.quarkus\n\
            \            quarkus-junit5\n            test\n        \n        \n  \
            \          io.quarkus\n            quarkus-hibernate-orm\n        \n \
            \       \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-smallrye-reactive-messaging\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>cmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            cmt-to-quarkus</name><description>This project demonstrates how to migrate
            an app using container-managed transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--
            Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--
            Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-smallrye-reactive-messaging</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-client\n    quarkus\n    Quickstart: ejb-remote-to-resteasy\
            \ - client\n    This project demonstrates how to migrate an application\
            \ that accesses an EJB from a remote client, to RESTEasy; this is the\
            \ client POM file\n\n    \n        \n            io.quarkus\n        \
            \    quarkus-rest-client-reactive\n        \n    \n\n    \n        \n\
            \            \n                maven-compiler-plugin\n               \
            \ ${compiler-plugin.version}\n            \n            \n           \
            \     io.quarkus.platform\n                quarkus-maven-plugin\n    \
            \            true\n                \n                    \n          \
            \              \n                            build\n                 \
            \       \n                    \n                \n            \n     \
            \       \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-client</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - client</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the client POM file</description><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-remote-to-resteasy\n\
            \    quarkus\n    pom\n    Quickstart: ejb-remote-to-resteasy\n    This\
            \ project demonstrates how to migrate from remote EJBs to RESTEasy (both\
            \ client and server)\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n    \n        server-side\n        client\n    \n\n   \
            \ \n        \n            \n                org.wildfly.plugins\n    \
            \            wildfly-maven-plugin\n                \n                \
            \    true\n                \n            \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote-to-resteasy</name><description>This project demonstrates\
            \ how to migrate from remote EJBs to RESTEasy (both client and server)</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-server-side\n    quarkus\n    Quickstart:\
            \ ejb-remote-to-resteasy - server-side\n    This project demonstrates\
            \ how to migrate an application that accesses an EJB from a remote client,\
            \ to RESTEasy; this is the server side POM file\n\n    \n        \n  \
            \          Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive\n        \n    \n\n    \n     \
            \   \n            \n                maven-compiler-plugin\n          \
            \      ${compiler-plugin.version}\n            \n            \n      \
            \          io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \           \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-server-side</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - server-side</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the server side POM file</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-security\n\
            \    quarkus\n    jar\n    Quickstart: ejb-security-to-quarkus-basic-elytron\n\
            \    This project demonstrates how to migrate Remote EJBs secured through\
            \ Elytron to Quarkus\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-resteasy-reactive\n     \
            \   \n        \n            io.quarkus\n            quarkus-elytron-security-properties-file\n\
            \        \n        \n            io.quarkus\n            quarkus-rest-client-reactive\n\
            \        \n    \n\n    \n        ${project.artifactId}\n        \n   \
            \         \n                maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    true\n                \n            \n \
            \           \n            \n                org.codehaus.mojo\n      \
            \          exec-maven-plugin\n                \n                    java\n\
            \                    ${project.build.directory}/exec-working-directory\n\
            \                    \n                        \n                    \
            \    -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-security</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security-to-quarkus-basic-elytron</name><description>This project\
            \ demonstrates how to migrate Remote EJBs secured through Elytron to Quarkus</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-elytron-security-properties-file</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    quarkus\n\
            \    greeter\n    jar\n    Quickstart: greeter-quarkus\n    This project\
            \ demonstrates how to migrat an app using CDI, JPA, JTA, EJB and JSF to\
            \ Quarkus\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n        11\n        3.6.6\n      \
            \  3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n    \
            \        \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-jdbc-h2\n     \
            \   \n        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>quarkus</version><artifactId>greeter</artifactId><packaging>jar</packaging><name>Quickstart:
            greeter-quarkus</name><description>This project demonstrates how to migrat
            an app using CDI, JPA, JTA, EJB and JSF to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    tasks-jsf\n\
            \    quarkus\n    Quickstart: tasks-jsf migration to Quarkus\n    This\
            \ project demonstrates how to take an app that uses JPA persistence to\
            \ manage tasks with JSF as view layer, and migrate it to Quarkus\n\n \
            \   \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n        \n            io.quarkus\n            quarkus-resteasy\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n\
            \            test\n        \n        \n            io.quarkus\n      \
            \      quarkus-test-h2\n            test\n        \n    \n\n    \n   \
            \     ${project.artifactId}\n\n        \n            \n              \
            \  maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                maven-surefire-plugin\n\
            \                ${surefire-plugin.version}\n                \n      \
            \          \n                    org.jboss.logmanager.LogManager\n   \
            \             \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>tasks-jsf</artifactId><version>quarkus</version><name>Quickstart:
            tasks-jsf migration to Quarkus</name><description>This project demonstrates
            how to take an app that uses JPA persistence to manage tasks with JSF
            as view layer, and migrate it to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><!--
            Test dependencies --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-test-h2</artifactId><scope>test</scope></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n    \
            \    \n        30.0.0.Final\n        \n        ${version.server}\n   \
            \     4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n       \
            \ %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n\
            \        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n          \
            \  \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n\n      \
            \  \n            io.quarkus\n            quarkus-arc\n        \n\n   \
            \     \n            jakarta.validation\n            jakarta.validation-api\n\
            \            provided\n        \n\n        \n            jakarta.annotation\n\
            \            jakarta.annotation-api\n            provided\n        \n\n\
            \        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n\
            \        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n\
            \        \n\n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n\n        \n        \n            org.hibernate.orm\n     \
            \       hibernate-jpamodelgen\n            provided\n        \n\n    \
            \    \n        \n            io.quarkus\n            quarkus-junit5\n\
            \        \n\n        \n            org.jboss.shrinkwrap.resolver\n   \
            \         shrinkwrap-resolver-depchain\n            3.2.1\n          \
            \  pom\n            test\n        \n\n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n \
            \   \n        \n        ${project.artifactId}\n        \n\n          \
            \  \n                \n                \n                    maven-compiler-plugin\n\
            \                    ${compiler-plugin.version}\n                    \n\
            \                        \n                            -parameters\n \
            \                       \n                    \n                \n\n\n\
            \                \n                    ${quarkus.platform.group-id}\n\
            \                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n\
            \                    true\n                    \n                    \
            \    \n                            \n                                build\n\
            \                                generate-code\n                     \
            \           generate-code-tests\n                            \n      \
            \                  \n                    \n                \n\n      \
            \          \n                    maven-surefire-plugin\n             \
            \       ${surefire-plugin.version}\n                    \n           \
            \             \n                            org.jboss.logmanager.LogManager\n\
            \                            ${maven.home}\n                        \n\
            \                    \n                \n\n                \n        \
            \            maven-failsafe-plugin\n                    ${surefire-plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                integration-test\n        \
            \                        verify\n                            \n      \
            \                      \n                                \n          \
            \                          ${project.build.directory}/${project.build.finalName}-runner\n\
            \                                    org.jboss.logmanager.LogManager\n\
            \                                    ${maven.home}\n                 \
            \               \n                            \n                     \
            \   \n                    \n                \n\n            \n       \
            \ \n\n        \n            \n                ${quarkus.platform.group-id}\n\
            \                quarkus-maven-plugin\n            \n        \n    \n\n\
            \    \n        \n            native\n            \n                \n\
            \                    native\n                \n            \n        \
            \    \n                false\n                native\n            \n \
            \       \n        \n            default\n            \n              \
            \  true\n            \n            \n                \n              \
            \      \n                        maven-surefire-plugin\n             \
            \           ${version.surefire.plugin}\n                        \n   \
            \                         true\n                        \n           \
            \         \n                \n            \n        \n\n        \n   \
            \         kubernetes\n            \n                \n               \
            \ %g/%a:%l\n            \n            \n                \n           \
            \         \n                        io.fabric8\n                     \
            \   fabric8-maven-plugin\n                        \n                 \
            \           \n                                \n                     \
            \               resource\n                                \n         \
            \                   \n                        \n                    \n\
            \                \n            \n        \n        \n            \n  \
            \          openshift-no-fmp\n            \n                \n        \
            \            \n                        maven-war-plugin\n            \
            \            \n                            ${project.build.directory}/openshift/deployments\n\
            \                            ROOT\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!--\
            \ the version for the Server --><version.server>30.0.0.Final</version.server><!--\
            \ the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!--\
            \ Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Compiler plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <compiler-plugin.version>3.10.1</compiler-plugin.version>\n\
          \ <maven.compiler.release>11</maven.compiler.release>\n </properties> \n\
          \ <build>\n <plugins>\n <plugin>\n <artifactId>maven-compiler-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <compilerArgs>\n <arg>-parameters</arg>\n\
          \ </compilerArgs>\n </configuration>\n </plugin>\n </plugins>\n </build>\n\
          \ ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00040:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    bmt\n    quarkus\n\
            \    jar\n    Quickstart: bmt-to-quarkus\n    This project demonstrates\
            \ how to migrate Bean Managed Transactions to Quarkus\n\n    \n      \
            \  \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-undertow\n    \
            \    \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>bmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            bmt-to-quarkus</name><description>This project demonstrates how to migrate
            Bean Managed Transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    cmt\n    quarkus\n\
            \    jar\n    Quickstart: cmt-to-quarkus\n    This project demonstrates\
            \ how to migrate an app using container-managed transactions to Quarkus\n\
            \n    \n        \n            Apache License, Version 2.0\n          \
            \  http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n\
            \        \n    \n\n    \n        11\n        3.6.6\n        3.11.0\n \
            \       UTF-8\n        UTF-8\n    \n\n    \n        \n            \n \
            \               io.quarkus.platform\n                quarkus-bom\n   \
            \             ${quarkus.platform.version}\n                pom\n     \
            \           import\n            \n        \n    \n\n    \n        \n \
            \       \n            jakarta.inject\n            jakarta.inject-api\n\
            \            provided\n        \n\n        \n        \n            io.quarkus\n\
            \            quarkus-junit5\n            test\n        \n        \n  \
            \          io.quarkus\n            quarkus-hibernate-orm\n        \n \
            \       \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-smallrye-reactive-messaging\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>cmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            cmt-to-quarkus</name><description>This project demonstrates how to migrate
            an app using container-managed transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--
            Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--
            Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-smallrye-reactive-messaging</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-remote-to-resteasy\n\
            \    quarkus\n    pom\n    Quickstart: ejb-remote-to-resteasy\n    This\
            \ project demonstrates how to migrate from remote EJBs to RESTEasy (both\
            \ client and server)\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n    \n        server-side\n        client\n    \n\n   \
            \ \n        \n            \n                org.wildfly.plugins\n    \
            \            wildfly-maven-plugin\n                \n                \
            \    true\n                \n            \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote-to-resteasy</name><description>This project demonstrates\
            \ how to migrate from remote EJBs to RESTEasy (both client and server)</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-security\n\
            \    quarkus\n    jar\n    Quickstart: ejb-security-to-quarkus-basic-elytron\n\
            \    This project demonstrates how to migrate Remote EJBs secured through\
            \ Elytron to Quarkus\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-resteasy-reactive\n     \
            \   \n        \n            io.quarkus\n            quarkus-elytron-security-properties-file\n\
            \        \n        \n            io.quarkus\n            quarkus-rest-client-reactive\n\
            \        \n    \n\n    \n        ${project.artifactId}\n        \n   \
            \         \n                maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    true\n                \n            \n \
            \           \n            \n                org.codehaus.mojo\n      \
            \          exec-maven-plugin\n                \n                    java\n\
            \                    ${project.build.directory}/exec-working-directory\n\
            \                    \n                        \n                    \
            \    -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-security</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security-to-quarkus-basic-elytron</name><description>This project\
            \ demonstrates how to migrate Remote EJBs secured through Elytron to Quarkus</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-elytron-security-properties-file</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    quarkus\n\
            \    greeter\n    jar\n    Quickstart: greeter-quarkus\n    This project\
            \ demonstrates how to migrat an app using CDI, JPA, JTA, EJB and JSF to\
            \ Quarkus\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n        11\n        3.6.6\n      \
            \  3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n    \
            \        \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-jdbc-h2\n     \
            \   \n        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>quarkus</version><artifactId>greeter</artifactId><packaging>jar</packaging><name>Quickstart:
            greeter-quarkus</name><description>This project demonstrates how to migrat
            an app using CDI, JPA, JTA, EJB and JSF to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n    \
            \    \n        30.0.0.Final\n        \n        ${version.server}\n   \
            \     4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n       \
            \ %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n\
            \        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n          \
            \  \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n\n      \
            \  \n            io.quarkus\n            quarkus-arc\n        \n\n   \
            \     \n            jakarta.validation\n            jakarta.validation-api\n\
            \            provided\n        \n\n        \n            jakarta.annotation\n\
            \            jakarta.annotation-api\n            provided\n        \n\n\
            \        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n\
            \        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n\
            \        \n\n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n\n        \n        \n            org.hibernate.orm\n     \
            \       hibernate-jpamodelgen\n            provided\n        \n\n    \
            \    \n        \n            io.quarkus\n            quarkus-junit5\n\
            \        \n\n        \n            org.jboss.shrinkwrap.resolver\n   \
            \         shrinkwrap-resolver-depchain\n            3.2.1\n          \
            \  pom\n            test\n        \n\n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n \
            \   \n        \n        ${project.artifactId}\n        \n\n          \
            \  \n                \n                \n                    maven-compiler-plugin\n\
            \                    ${compiler-plugin.version}\n                    \n\
            \                        \n                            -parameters\n \
            \                       \n                    \n                \n\n\n\
            \                \n                    ${quarkus.platform.group-id}\n\
            \                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n\
            \                    true\n                    \n                    \
            \    \n                            \n                                build\n\
            \                                generate-code\n                     \
            \           generate-code-tests\n                            \n      \
            \                  \n                    \n                \n\n      \
            \          \n                    maven-surefire-plugin\n             \
            \       ${surefire-plugin.version}\n                    \n           \
            \             \n                            org.jboss.logmanager.LogManager\n\
            \                            ${maven.home}\n                        \n\
            \                    \n                \n\n                \n        \
            \            maven-failsafe-plugin\n                    ${surefire-plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                integration-test\n        \
            \                        verify\n                            \n      \
            \                      \n                                \n          \
            \                          ${project.build.directory}/${project.build.finalName}-runner\n\
            \                                    org.jboss.logmanager.LogManager\n\
            \                                    ${maven.home}\n                 \
            \               \n                            \n                     \
            \   \n                    \n                \n\n            \n       \
            \ \n\n        \n            \n                ${quarkus.platform.group-id}\n\
            \                quarkus-maven-plugin\n            \n        \n    \n\n\
            \    \n        \n            native\n            \n                \n\
            \                    native\n                \n            \n        \
            \    \n                false\n                native\n            \n \
            \       \n        \n            default\n            \n              \
            \  true\n            \n            \n                \n              \
            \      \n                        maven-surefire-plugin\n             \
            \           ${version.surefire.plugin}\n                        \n   \
            \                         true\n                        \n           \
            \         \n                \n            \n        \n\n        \n   \
            \         kubernetes\n            \n                \n               \
            \ %g/%a:%l\n            \n            \n                \n           \
            \         \n                        io.fabric8\n                     \
            \   fabric8-maven-plugin\n                        \n                 \
            \           \n                                \n                     \
            \               resource\n                                \n         \
            \                   \n                        \n                    \n\
            \                \n            \n        \n        \n            \n  \
            \          openshift-no-fmp\n            \n                \n        \
            \            \n                        maven-war-plugin\n            \
            \            \n                            ${project.build.directory}/openshift/deployments\n\
            \                            ROOT\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!--\
            \ the version for the Server --><version.server>30.0.0.Final</version.server><!--\
            \ the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!--\
            \ Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Surefire plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-surefire-plugin</artifactId>\n\
          \ <version>$</version>\n <configuration>\n <systemPropertyVariables>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </plugin>\n </plugins>\n </build>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00050:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    bmt\n    quarkus\n\
            \    jar\n    Quickstart: bmt-to-quarkus\n    This project demonstrates\
            \ how to migrate Bean Managed Transactions to Quarkus\n\n    \n      \
            \  \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-undertow\n    \
            \    \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>bmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            bmt-to-quarkus</name><description>This project demonstrates how to migrate
            Bean Managed Transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    cmt\n    quarkus\n\
            \    jar\n    Quickstart: cmt-to-quarkus\n    This project demonstrates\
            \ how to migrate an app using container-managed transactions to Quarkus\n\
            \n    \n        \n            Apache License, Version 2.0\n          \
            \  http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n\
            \        \n    \n\n    \n        11\n        3.6.6\n        3.11.0\n \
            \       UTF-8\n        UTF-8\n    \n\n    \n        \n            \n \
            \               io.quarkus.platform\n                quarkus-bom\n   \
            \             ${quarkus.platform.version}\n                pom\n     \
            \           import\n            \n        \n    \n\n    \n        \n \
            \       \n            jakarta.inject\n            jakarta.inject-api\n\
            \            provided\n        \n\n        \n        \n            io.quarkus\n\
            \            quarkus-junit5\n            test\n        \n        \n  \
            \          io.quarkus\n            quarkus-hibernate-orm\n        \n \
            \       \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-smallrye-reactive-messaging\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>cmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            cmt-to-quarkus</name><description>This project demonstrates how to migrate
            an app using container-managed transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--
            Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--
            Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-smallrye-reactive-messaging</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-client\n    quarkus\n    Quickstart: ejb-remote-to-resteasy\
            \ - client\n    This project demonstrates how to migrate an application\
            \ that accesses an EJB from a remote client, to RESTEasy; this is the\
            \ client POM file\n\n    \n        \n            io.quarkus\n        \
            \    quarkus-rest-client-reactive\n        \n    \n\n    \n        \n\
            \            \n                maven-compiler-plugin\n               \
            \ ${compiler-plugin.version}\n            \n            \n           \
            \     io.quarkus.platform\n                quarkus-maven-plugin\n    \
            \            true\n                \n                    \n          \
            \              \n                            build\n                 \
            \       \n                    \n                \n            \n     \
            \       \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-client</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - client</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the client POM file</description><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-remote-to-resteasy\n\
            \    quarkus\n    pom\n    Quickstart: ejb-remote-to-resteasy\n    This\
            \ project demonstrates how to migrate from remote EJBs to RESTEasy (both\
            \ client and server)\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n    \n        server-side\n        client\n    \n\n   \
            \ \n        \n            \n                org.wildfly.plugins\n    \
            \            wildfly-maven-plugin\n                \n                \
            \    true\n                \n            \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote-to-resteasy</name><description>This project demonstrates\
            \ how to migrate from remote EJBs to RESTEasy (both client and server)</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-server-side\n    quarkus\n    Quickstart:\
            \ ejb-remote-to-resteasy - server-side\n    This project demonstrates\
            \ how to migrate an application that accesses an EJB from a remote client,\
            \ to RESTEasy; this is the server side POM file\n\n    \n        \n  \
            \          Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive\n        \n    \n\n    \n     \
            \   \n            \n                maven-compiler-plugin\n          \
            \      ${compiler-plugin.version}\n            \n            \n      \
            \          io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \           \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-server-side</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - server-side</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the server side POM file</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-security\n\
            \    quarkus\n    jar\n    Quickstart: ejb-security-to-quarkus-basic-elytron\n\
            \    This project demonstrates how to migrate Remote EJBs secured through\
            \ Elytron to Quarkus\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-resteasy-reactive\n     \
            \   \n        \n            io.quarkus\n            quarkus-elytron-security-properties-file\n\
            \        \n        \n            io.quarkus\n            quarkus-rest-client-reactive\n\
            \        \n    \n\n    \n        ${project.artifactId}\n        \n   \
            \         \n                maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    true\n                \n            \n \
            \           \n            \n                org.codehaus.mojo\n      \
            \          exec-maven-plugin\n                \n                    java\n\
            \                    ${project.build.directory}/exec-working-directory\n\
            \                    \n                        \n                    \
            \    -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-security</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security-to-quarkus-basic-elytron</name><description>This project\
            \ demonstrates how to migrate Remote EJBs secured through Elytron to Quarkus</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-elytron-security-properties-file</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    quarkus\n\
            \    greeter\n    jar\n    Quickstart: greeter-quarkus\n    This project\
            \ demonstrates how to migrat an app using CDI, JPA, JTA, EJB and JSF to\
            \ Quarkus\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n        11\n        3.6.6\n      \
            \  3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n    \
            \        \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-jdbc-h2\n     \
            \   \n        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>quarkus</version><artifactId>greeter</artifactId><packaging>jar</packaging><name>Quickstart:
            greeter-quarkus</name><description>This project demonstrates how to migrat
            an app using CDI, JPA, JTA, EJB and JSF to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    tasks-jsf\n\
            \    quarkus\n    Quickstart: tasks-jsf migration to Quarkus\n    This\
            \ project demonstrates how to take an app that uses JPA persistence to\
            \ manage tasks with JSF as view layer, and migrate it to Quarkus\n\n \
            \   \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n        \n            io.quarkus\n            quarkus-resteasy\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n\
            \            test\n        \n        \n            io.quarkus\n      \
            \      quarkus-test-h2\n            test\n        \n    \n\n    \n   \
            \     ${project.artifactId}\n\n        \n            \n              \
            \  maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                maven-surefire-plugin\n\
            \                ${surefire-plugin.version}\n                \n      \
            \          \n                    org.jboss.logmanager.LogManager\n   \
            \             \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>tasks-jsf</artifactId><version>quarkus</version><name>Quickstart:
            tasks-jsf migration to Quarkus</name><description>This project demonstrates
            how to take an app that uses JPA persistence to manage tasks with JSF
            as view layer, and migrate it to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><!--
            Test dependencies --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-test-h2</artifactId><scope>test</scope></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      - line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    jar\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        ${env.MAVEN_HOME}\n    \
            \    \n        30.0.0.Final\n        \n        ${version.server}\n   \
            \     4.2.0.Final\n        2.10\n        1.7\n        3.5.25\n       \
            \ %g/%a:%l\n\n        3.10.1\n\n        quarkus-bom\n        io.quarkus.platform\n\
            \        3.5.1\n\n        3.0.0\n\n    \n\n    \n        \n          \
            \  \n                ${quarkus.platform.group-id}\n                ${quarkus.platform.artifact-id}\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n\n      \
            \  \n            io.quarkus\n            quarkus-arc\n        \n\n   \
            \     \n            jakarta.validation\n            jakarta.validation-api\n\
            \            provided\n        \n\n        \n            jakarta.annotation\n\
            \            jakarta.annotation-api\n            provided\n        \n\n\
            \        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n\n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-mysql\n\
            \        \n        \n            io.quarkus\n            quarkus-hibernate-validator\n\
            \        \n\n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n\n        \n        \n            org.hibernate.orm\n     \
            \       hibernate-jpamodelgen\n            provided\n        \n\n    \
            \    \n        \n            io.quarkus\n            quarkus-junit5\n\
            \        \n\n        \n            org.jboss.shrinkwrap.resolver\n   \
            \         shrinkwrap-resolver-depchain\n            3.2.1\n          \
            \  pom\n            test\n        \n\n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive-jackson\n        \n\n    \n\n \
            \   \n        \n        ${project.artifactId}\n        \n\n          \
            \  \n                \n                \n                    maven-compiler-plugin\n\
            \                    ${compiler-plugin.version}\n                    \n\
            \                        \n                            -parameters\n \
            \                       \n                    \n                \n\n\n\
            \                \n                    ${quarkus.platform.group-id}\n\
            \                    quarkus-maven-plugin\n                    ${quarkus.platform.version}\n\
            \                    true\n                    \n                    \
            \    \n                            \n                                build\n\
            \                                generate-code\n                     \
            \           generate-code-tests\n                            \n      \
            \                  \n                    \n                \n\n      \
            \          \n                    maven-surefire-plugin\n             \
            \       ${surefire-plugin.version}\n                    \n           \
            \             \n                            org.jboss.logmanager.LogManager\n\
            \                            ${maven.home}\n                        \n\
            \                    \n                \n\n                \n        \
            \            maven-failsafe-plugin\n                    ${surefire-plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                integration-test\n        \
            \                        verify\n                            \n      \
            \                      \n                                \n          \
            \                          ${project.build.directory}/${project.build.finalName}-runner\n\
            \                                    org.jboss.logmanager.LogManager\n\
            \                                    ${maven.home}\n                 \
            \               \n                            \n                     \
            \   \n                    \n                \n\n            \n       \
            \ \n\n        \n            \n                ${quarkus.platform.group-id}\n\
            \                quarkus-maven-plugin\n            \n        \n    \n\n\
            \    \n        \n            native\n            \n                \n\
            \                    native\n                \n            \n        \
            \    \n                false\n                native\n            \n \
            \       \n        \n            default\n            \n              \
            \  true\n            \n            \n                \n              \
            \      \n                        maven-surefire-plugin\n             \
            \           ${version.surefire.plugin}\n                        \n   \
            \                         true\n                        \n           \
            \         \n                \n            \n        \n\n        \n   \
            \         kubernetes\n            \n                \n               \
            \ %g/%a:%l\n            \n            \n                \n           \
            \         \n                        io.fabric8\n                     \
            \   fabric8-maven-plugin\n                        \n                 \
            \           \n                                \n                     \
            \               resource\n                                \n         \
            \                   \n                        \n                    \n\
            \                \n            \n        \n        \n            \n  \
            \          openshift-no-fmp\n            \n                \n        \
            \            \n                        maven-war-plugin\n            \
            \            \n                            ${project.build.directory}/openshift/deployments\n\
            \                            ROOT\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>jar</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><maven.home>${env.MAVEN_HOME}</maven.home><!--\
            \ the version for the Server --><version.server>30.0.0.Final</version.server><!--\
            \ the versions for BOMs, Packs and Plugins --><version.bom.ee>${version.server}</version.bom.ee><version.wildfly.maven.plugin>4.2.0.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name><compiler-plugin.version>3.10.1</compiler-plugin.version><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.5.1</quarkus.platform.version><surefire-plugin.version>3.0.0</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>jakarta.validation</groupId><artifactId>jakarta.validation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>jakarta.annotation</groupId><artifactId>jakarta.annotation-api</artifactId><scope>provided</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-mysql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-validator</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><!--\
            \ Now we declare any tools needed --><dependency><groupId>org.hibernate.orm</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><version>3.2.1</version><type>pom</type><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive-jackson</artifactId></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></pluginManagement><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId></plugin></plugins></build><profiles><profile><id>native</id><activation><property><name>native</name></property></activation><properties><skipITs>false</skipITs><quarkus.package.type>native</quarkus.package.type></properties></profile><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Use the Maven Failsafe plugin adding the following sections\
          \ to the `pom.xml` file: \n\n ```xml\n <properties> \n <surefire-plugin.version>3.0.0</compiler-plugin.version>\n\
          \ </properties> \n <build>\n <plugins>\n <plugin>\n <artifactId>maven-failsafe-plugin</artifactId>\n\
          \ <version>$</version>\n <executions>\n <execution>\n <goals>\n <goals>integration-test</goal>\n\
          \ <goals>verify</goal>\n </goals>\n <configuration>\n <systemPropertyVariables>\n\
          \ <native.image.path>$/$-runner</native.image.path>\n <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n\
          \ <maven.home>$</maven.home>\n </systemPropertyVariables>\n </configuration>\n\
          \ </execution>\n </executions>\n </plugin>\n </plugins>\n </build>\n ```\n\
          \ \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00060:
    bmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   bmt\n    war\n    Quickstart: BMT\n    This project demonstrates how\
            \ to use Bean Managed Transactions\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n\n        \n    \
            \    \n            jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.servlet\n      \
            \      jboss-servlet-api_4.0_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.transaction\n  \
            \          jboss-transaction-api_1.3_spec\n            provided\n    \
            \    \n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>bmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ BMT</name><description>This project demonstrates how to use Bean Managed\
            \ Transactions</description><licenses><license><name>Apache License, Version\
            \ 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \         as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is included\
            \ in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    bmt\n    quarkus\n\
            \    jar\n    Quickstart: bmt-to-quarkus\n    This project demonstrates\
            \ how to migrate Bean Managed Transactions to Quarkus\n\n    \n      \
            \  \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-undertow\n    \
            \    \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>bmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            bmt-to-quarkus</name><description>This project demonstrates how to migrate
            Bean Managed Transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    cmt:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   cmt\n    war\n    Quickstart: CMT\n    This project demonstrates how\
            \ to use Container Managed transactions\n\n    \n        \n          \
            \  Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n \n        \n        \n\
            \            jakarta.inject\n            jakarta.inject-api\n        \
            \    provided\n        \n\n        \n        \n            junit\n   \
            \         junit\n            test\n        \n        \n        \n    \
            \        jakarta.persistence\n            jakarta.persistence-api\n  \
            \          provided\n        \n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.transaction\n\
            \            jboss-transaction-api_1.3_spec\n            provided\n  \
            \      \n        \n            org.jboss.spec.javax.annotation\n     \
            \       jboss-annotations-api_1.3_spec\n            provided\n       \
            \ \n\n    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\t\
            maven-war-plugin\n\t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\
            \t\t\t\t${version.wildfly.maven.plugin}\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\
            \t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\t\t\t\n\t\t\t\t\n\t\t\t\
            \t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tROOT\n\t\
            \t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\
            \t\t\t\t\t\tmaven-source-plugin\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\t\tattach-sources\n\t\t\t\t\t\t\t\tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>cmt</artifactId><packaging>war</packaging><name>Quickstart:\
            \ CMT</name><description>This project demonstrates how to use Container\
            \ Managed transactions</description><licenses><license><name>Apache License,\
            \ Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\n\t\t\
            quick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\n\t\
            \tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\n\
            \t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\n\t\
            \tYou can set to 'http' if you are using a maven proxy and 'https'\n\t\
            \tinterferes with that. Use 'https' for builds that will be released\n\
            \                     to\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\n\t\tspecial\
            \ use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\n        note: a SNAPSHOT version *requires*\n\t\tcheckout\
            \ of BOMs at https://github.com/wildfly/boms and build through\n\t\t\"\
            mvn clean install\"\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\n\t\t\t\
            useful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JMS API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\n\t\
            \tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\n          \
            \      used\n\t\t\twhen invoking mvn. --><!-- Use this profile for any\
            \ OpenShift specific customization\n                your\n\t\t\tapp will\
            \ ne    ed. --><!-- By default that is to put the resulting archive into\
            \ the\n\t\t\t'deployments' folder. --><!--\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    cmt\n    quarkus\n\
            \    jar\n    Quickstart: cmt-to-quarkus\n    This project demonstrates\
            \ how to migrate an app using container-managed transactions to Quarkus\n\
            \n    \n        \n            Apache License, Version 2.0\n          \
            \  http://www.apache.org/licenses/LICENSE-2.0.html\n            repo\n\
            \        \n    \n\n    \n        11\n        3.6.6\n        3.11.0\n \
            \       UTF-8\n        UTF-8\n    \n\n    \n        \n            \n \
            \               io.quarkus.platform\n                quarkus-bom\n   \
            \             ${quarkus.platform.version}\n                pom\n     \
            \           import\n            \n        \n    \n\n    \n        \n \
            \       \n            jakarta.inject\n            jakarta.inject-api\n\
            \            provided\n        \n\n        \n        \n            io.quarkus\n\
            \            quarkus-junit5\n            test\n        \n        \n  \
            \          io.quarkus\n            quarkus-hibernate-orm\n        \n \
            \       \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-smallrye-reactive-messaging\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>cmt</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:
            cmt-to-quarkus</name><description>This project demonstrates how to migrate
            an app using container-managed transactions to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--
            Import the injection annotations --><dependency><groupId>jakarta.inject</groupId><artifactId>jakarta.inject-api</artifactId><scope>provided</scope></dependency><!--
            Needed for running tests (you may also use TestNG) --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-smallrye-reactive-messaging</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 5
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    com.redhat.coolstore\n    monolith\n    1.0.0-SNAPSHOT\n\
            \    war\n    coolstore-monolith\n    \n        UTF-8\n        yyyyMMdd'T'HHmmss\n\
            \        UTF-8\n        true\n    \n    \n        \n            javax\n\
            \            javaee-web-api\n            7.0\n            provided\n \
            \       \n        \n            javax\n            javaee-api\n      \
            \      7.0\n            provided\n        \n        \n            org.flywaydb\n\
            \            flyway-core\n            4.1.2\n        \n        \n    \
            \        org.jboss.spec.javax.rmi\n            jboss-rmi-api_1.0_spec\n\
            \            1.0.2.Final\n        \n    \n    \n        ROOT\n       \
            \ \n            \n                maven-compiler-plugin\n            \
            \    3.0\n                \n                    ${project.encoding}\n\
            \                    1.8\n                    1.8\n                \n\
            \            \n            \n                org.apache.maven.plugins\n\
            \                maven-war-plugin\n                3.2.0\n           \
            \ \n        \n    \n    \n\n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><packaging>war</packaging><name>coolstore-monolith</name><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><project.encoding>UTF-8</project.encoding><maven.test.skip>true</maven.test.skip></properties><dependencies><dependency><groupId>javax</groupId><artifactId>javaee-web-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version><scope>provided</scope></dependency><dependency><groupId>org.flywaydb</groupId><artifactId>flyway-core</artifactId><version>4.1.2</version></dependency><dependency><groupId>org.jboss.spec.javax.rmi</groupId><artifactId>jboss-rmi-api_1.0_spec</artifactId><version>1.0.2.Final</version></dependency></dependencies><build><finalName>ROOT</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>3.0</version><configuration><encoding>${project.encoding}</encoding><source>1.8</source><target>1.8</target></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>3.2.0</version></plugin></plugins></build><profiles><!--
            TODO: Add OpenShift profile here --></profiles>'
      - line_number: 4
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n  4.0.0\n  com.redhat.coolstore\n  monolith\n  1.0.0-SNAPSHOT\n\
            \  coolstore-monolith\n  \n    3.11.0\n    17\n    UTF-8\n    UTF-8\n\
            \    quarkus-bom\n    io.quarkus.platform\n    3.3.1\n    true\n    3.1.2\n\
            \  \n  \n    \n      \n        ${quarkus.platform.group-id}\n        ${quarkus.platform.artifact-id}\n\
            \        ${quarkus.platform.version}\n        pom\n        import\n  \
            \    \n      \n        ${quarkus.platform.group-id}\n        quarkus-qpid-jms-bom\n\
            \        ${quarkus.platform.version}\n        pom\n        import\n  \
            \    \n    \n  \n  \n    \n      io.quarkus\n      quarkus-arc\n    \n\
            \    \n      io.quarkus\n      quarkus-resteasy\n    \n    \n      io.quarkus\n\
            \      quarkus-hibernate-orm\n    \n    \n      io.quarkus\n      quarkus-jdbc-postgresql\n\
            \    \n    \n      io.quarkus\n      quarkus-flyway\n    \n    \n    \
            \  io.quarkus\n      quarkus-resteasy-jsonb\n    \n    \n      io.quarkus\n\
            \      quarkus-smallrye-reactive-messaging-amqp\n    \n    \n      io.quarkus\n\
            \      quarkus-undertow\n    \n    \n      io.quarkus\n      quarkus-oidc\n\
            \    \n    \n      io.quarkus\n      quarkus-config-yaml\n    \n    \n\
            \      org.amqphub.quarkus\n      quarkus-qpid-jms\n    \n    \n     \
            \ io.quarkus\n      quarkus-junit5\n      test\n    \n    \n      io.rest-assured\n\
            \      rest-assured\n      test\n    \n  \n  \n    \n      \n        ${quarkus.platform.group-id}\n\
            \        quarkus-maven-plugin\n        ${quarkus.platform.version}\n \
            \       true\n        \n          \n            \n              build\n\
            \              generate-code\n              generate-code-tests\n    \
            \        \n          \n        \n      \n      \n        maven-compiler-plugin\n\
            \        ${compiler-plugin.version}\n        \n          \n          \
            \  -parameters\n          \n        \n      \n      \n        maven-surefire-plugin\n\
            \        ${surefire-plugin.version}\n        \n          \n          \
            \  org.jboss.logmanager.LogManager\n            ${maven.home}\n      \
            \    \n        \n      \n      \n        maven-failsafe-plugin\n     \
            \   ${surefire-plugin.version}\n        \n          \n            \n \
            \             integration-test\n              verify\n            \n \
            \           \n              \n                ${project.build.directory}/${project.build.finalName}-runner\n\
            \                org.jboss.logmanager.LogManager\n                ${maven.home}\n\
            \              \n            \n          \n        \n      \n    \n  \n"
          matchingXML: <modelVersion>4.0.0</modelVersion><groupId>com.redhat.coolstore</groupId><artifactId>monolith</artifactId><version>1.0.0-SNAPSHOT</version><name>coolstore-monolith</name><properties><compiler-plugin.version>3.11.0</compiler-plugin.version><maven.compiler.release>17</maven.compiler.release><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding><quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id><quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id><quarkus.platform.version>3.3.1</quarkus.platform.version><skipITs>true</skipITs><surefire-plugin.version>3.1.2</surefire-plugin.version></properties><dependencyManagement><dependencies><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>${quarkus.platform.artifact-id}</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-qpid-jms-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-arc</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-postgresql</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-flyway</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-jsonb</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-smallrye-reactive-messaging-amqp</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-oidc</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-config-yaml</artifactId></dependency><dependency><groupId>org.amqphub.quarkus</groupId><artifactId>quarkus-qpid-jms</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>${quarkus.platform.group-id}</groupId><artifactId>quarkus-maven-plugin</artifactId><version>${quarkus.platform.version}</version><extensions>true</extensions><executions><execution><goals><goal>build</goal><goal>generate-code</goal><goal>generate-code-tests</goal></goals></execution></executions></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version><configuration><compilerArgs><arg>-parameters</arg></compilerArgs></configuration></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></plugin><plugin><artifactId>maven-failsafe-plugin</artifactId><version>${surefire-plugin.version}</version><executions><execution><goals><goal>integration-test</goal><goal>verify</goal></goals><configuration><systemPropertyVariables><native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><maven.home>${maven.home}</maven.home></systemPropertyVariables></configuration></execution></executions></plugin></plugins></build>
    ejb-remote:
      client/pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    \n        org.jboss.eap.quickstarts\n   \
            \     ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-client\n\
            \    jar\n    Quickstart: ejb-remote - client\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the client POM file\n\
            \n    \n        false\n    \n\n    \n        \n        \n            org.jboss.eap\n\
            \            wildfly-ejb-client-bom\n            pom\n            compile\n\
            \        \n\n        \n        \n            ${project.groupId}\n    \
            \        ejb-remote-server-side\n            ${project.version}\n    \
            \        ejb-client\n        \n\n    \n\n    \n        \n\n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        -Dhttp=${http}\n       \
            \                 -classpath\n                        \n             \
            \           org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                    \n                    \n                \n      \
            \      \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-assembly-plugin\n                \n           \
            \         \n                        jar-with-dependencies\n          \
            \          \n                    \n                        \n        \
            \                    org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient\n\
            \                        \n                        \n                \
            \            true\n                        \n                    \n  \
            \              \n            \n        \n\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-client</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-remote - client</name><description>This project demonstrates how\
            \ to access an EJB from a remote client; this is the client POM file</description><properties><http>false</http></properties><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><!--\
            \ We depend on the EJB remote business interfaces of this application\
            \ --><dependency><groupId>${project.groupId}</groupId><artifactId>ejb-remote-server-side</artifactId><version>${project.version}</version><type>ejb-client</type></dependency></dependencies><build><plugins><!--\
            \ Add the maven exec plug-in to allow us to run a java program\n     \
            \           via maven --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><argument>-Dhttp=${http}</argument><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</argument></arguments><!--<detail>true</detail>--></configuration></plugin><!--\
            \ build standalone exe jar --><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-assembly-plugin</artifactId><configuration><descriptorRefs><descriptorRef>jar-with-dependencies</descriptorRef></descriptorRefs><archive><manifest><mainClass>org.jboss.as.quickstarts.ejb.remote.client.RemoteEJBClient</mainClass></manifest><manifestEntries><Multi-Release>true</Multi-Release></manifestEntries></archive></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-client\n    quarkus\n    Quickstart: ejb-remote-to-resteasy\
            \ - client\n    This project demonstrates how to migrate an application\
            \ that accesses an EJB from a remote client, to RESTEasy; this is the\
            \ client POM file\n\n    \n        \n            io.quarkus\n        \
            \    quarkus-rest-client-reactive\n        \n    \n\n    \n        \n\
            \            \n                maven-compiler-plugin\n               \
            \ ${compiler-plugin.version}\n            \n            \n           \
            \     io.quarkus.platform\n                quarkus-maven-plugin\n    \
            \            true\n                \n                    \n          \
            \              \n                            build\n                 \
            \       \n                    \n                \n            \n     \
            \       \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-client</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - client</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the client POM file</description><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-remote\n    pom\n    Quickstart: ejb-remote\n    This project\
            \ demonstrates how to access an EJB from a remote client\n\n    \n   \
            \     \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n    \n        server-side\n\
            \        client\n    \n\n    \n        \n            \n              \
            \  org.wildfly.plugins\n                wildfly-maven-plugin\n       \
            \         \n                    true\n                \n            \n\
            \        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote</artifactId><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote</name><description>This project demonstrates how to access\
            \ an EJB from a remote client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-remote-to-resteasy\n\
            \    quarkus\n    pom\n    Quickstart: ejb-remote-to-resteasy\n    This\
            \ project demonstrates how to migrate from remote EJBs to RESTEasy (both\
            \ client and server)\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n    \n        server-side\n        client\n    \n\n   \
            \ \n        \n            \n                org.wildfly.plugins\n    \
            \            wildfly-maven-plugin\n                \n                \
            \    true\n                \n            \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version><packaging>pom</packaging><name>Quickstart:\
            \ ejb-remote-to-resteasy</name><description>This project demonstrates\
            \ how to migrate from remote EJBs to RESTEasy (both client and server)</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><!--\
            \ This quickstart consists of a server side component and a client that\
            \ accesses\n     the server side component. Each component has its own\
            \ self contain pom. However,\n     you can add these modules here to keep\
            \ things modular.\n     --><modules><module>server-side</module><module>client</module></modules><build><plugins><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>true</skip></configuration></plugin></plugins></build>"
      server-side/pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote\n        7.4.0.GA\n        ../pom.xml\n    \n    ejb-remote-server-side\n\
            \    ejb\n    Quickstart: ejb-remote - server-side\n    This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file\n\n    \n        \n            Apache License, Version 2.0\n  \
            \          http://www.apache.org/licenses/LICENSE-2.0.html\n         \
            \   repo\n        \n    \n\n    \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n            \n            \n                org.wildfly.plugins\n\
            \                wildfly-maven-plugin\n                \n            \
            \        false\n                    ${project.build.finalName}.jar\n \
            \               \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    \n                    true\n           \
            \     \n            \n\n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote</artifactId><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-remote-server-side</artifactId><packaging>ejb</packaging><name>Quickstart:\
            \ ejb-remote - server-side</name><description>This project demonstrates\
            \ how to access an EJB from a remote client; this is the server side POM\
            \ file</description><licenses><license><name>Apache License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency></dependencies><build><plugins><!--\
            \ WildFly plug-in to deploy the application --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><configuration><skip>false</skip><filename>${project.build.finalName}.jar</filename></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><!--\
            \ this is false by default --><generateClient>true</generateClient></configuration></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   ejb-remote-to-resteasy\n        quarkus\n    \n\n    org.jboss.eap.quickstarts\n\
            \    ejb-remote-to-resteasy-server-side\n    quarkus\n    Quickstart:\
            \ ejb-remote-to-resteasy - server-side\n    This project demonstrates\
            \ how to migrate an application that accesses an EJB from a remote client,\
            \ to RESTEasy; this is the server side POM file\n\n    \n        \n  \
            \          Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n            io.quarkus\n\
            \            quarkus-resteasy-reactive\n        \n    \n\n    \n     \
            \   \n            \n                maven-compiler-plugin\n          \
            \      ${compiler-plugin.version}\n            \n            \n      \
            \          io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \           \n                maven-surefire-plugin\n                ${surefire-plugin.version}\n\
            \                \n                \n                    org.jboss.logmanager.LogManager\n\
            \                \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy</artifactId><version>quarkus</version></parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-remote-to-resteasy-server-side</artifactId><version>quarkus</version><name>Quickstart:
            ejb-remote-to-resteasy - server-side</name><description>This project demonstrates
            how to migrate an application that accesses an EJB from a remote client,
            to RESTEasy; this is the server side POM file</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ejb-security:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    ejb-security\n    jar\n    Quickstart: ejb-security\n    This\
            \ project demonstrates EJB Security\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        \n        \n      \
            \      org.jboss.eap\n            wildfly-ejb-client-bom\n           \
            \ pom\n            compile\n        \n        \n            org.jboss.ejb3\n\
            \            jboss-ejb3-ext-api\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.3_spec\n            provided\n  \
            \      \n    \n    \n        \n        ${project.artifactId}\n       \
            \ \n\n            \n                org.apache.maven.plugins\n       \
            \         maven-ejb-plugin\n                \n                    3.2\n\
            \                    true\n                \n            \n          \
            \  \n            \n                org.codehaus.mojo\n               \
            \ exec-maven-plugin\n                \n                    java\n    \
            \                ${project.build.directory}/exec-working-directory\n \
            \                   \n                        \n                     \
            \   -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>ejb-security</artifactId><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security</name><description>This project demonstrates EJB Security</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ The EJB Client BOM provides application server-compatible dependency\
            \ management,\n        used for building, testing or debugging EJB client\
            \ applications. Import the BOM to the\n        dependency management section\
            \ of the app's pom.xml file and then set dependencies on specific artifacts.\n\
            \        Alternatively, as shown in the following example, set a single\
            \ dependency on the BOM for the app to depend\n        on all the artifacts\
            \ it manages.\n        --><dependency><groupId>org.jboss.eap</groupId><artifactId>wildfly-ejb-client-bom</artifactId><type>pom</type><scope>compile</scope></dependency><dependency><groupId>org.jboss.ejb3</groupId><artifactId>jboss-ejb3-ext-api</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    ejb-security\n\
            \    quarkus\n    jar\n    Quickstart: ejb-security-to-quarkus-basic-elytron\n\
            \    This project demonstrates how to migrate Remote EJBs secured through\
            \ Elytron to Quarkus\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n\
            \            \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-resteasy-reactive\n     \
            \   \n        \n            io.quarkus\n            quarkus-elytron-security-properties-file\n\
            \        \n        \n            io.quarkus\n            quarkus-rest-client-reactive\n\
            \        \n    \n\n    \n        ${project.artifactId}\n        \n   \
            \         \n                maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                org.apache.maven.plugins\n\
            \                maven-ejb-plugin\n                \n                \
            \    3.2\n                    true\n                \n            \n \
            \           \n            \n                org.codehaus.mojo\n      \
            \          exec-maven-plugin\n                \n                    java\n\
            \                    ${project.build.directory}/exec-working-directory\n\
            \                    \n                        \n                    \
            \    -classpath\n                        \n                        org.jboss.as.quickstarts.ejb_security.RemoteClient\n\
            \                    \n                \n                \n          \
            \          \n                        \n                            exec\n\
            \                        \n                    \n                \n  \
            \          \n        \n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>ejb-security</artifactId><version>quarkus</version><packaging>jar</packaging><name>Quickstart:\
            \ ejb-security-to-quarkus-basic-elytron</name><description>This project\
            \ demonstrates how to migrate Remote EJBs secured through Elytron to Quarkus</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-elytron-security-properties-file</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-rest-client-reactive</artifactId></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-ejb-plugin</artifactId><configuration><ejbVersion>3.2</ejbVersion><generateClient>true</generateClient></configuration></plugin><!--\
            \ Add the Maven exec plug-in to allow us to run a Java program via Maven\
            \ --><plugin><groupId>org.codehaus.mojo</groupId><artifactId>exec-maven-plugin</artifactId><configuration><executable>java</executable><workingDirectory>${project.build.directory}/exec-working-directory</workingDirectory><arguments><!--\
            \ automatically creates the classpath using all project dependencies,\n\
            \                                      also adding the project build directory\
            \ --><argument>-classpath</argument><classpath></classpath><argument>org.jboss.as.quickstarts.ejb_security.RemoteClient</argument></arguments></configuration><executions><execution><goals><goal>exec</goal></goals></execution></executions></plugin></plugins></build>"
    greeter:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n    greeter\n    war\n    Quickstart: greeter\n    A simple greeter\
            \ project that demonstrates CDI, JPA, JTA, EJB and JSF\n\n    \n     \
            \   \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n        \n    \
            \        jakarta.enterprise\n            jakarta.enterprise.cdi-api\n\
            \            provided\n        \n\n        \n        \n            jakarta.persistence\n\
            \            jakarta.persistence-api\n            provided\n        \n\
            \n        \n        \n            org.jboss.spec.javax.annotation\n  \
            \          jboss-annotations-api_1.3_spec\n            provided\n    \
            \    \n\n        \n        \n            org.jboss.spec.javax.ejb\n  \
            \          jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.transaction\n        \
            \    jboss-transaction-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n    \n        \n        ${project.artifactId}\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>greeter</artifactId><packaging>war</packaging><name>Quickstart:\
            \ greeter</name><description>A simple greeter project that demonstrates\
            \ CDI, JPA, JTA, EJB and JSF</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \           as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JTA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.transaction</groupId><artifactId>jboss-transaction-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    quarkus\n\
            \    greeter\n    jar\n    Quickstart: greeter-quarkus\n    This project\
            \ demonstrates how to migrat an app using CDI, JPA, JTA, EJB and JSF to\
            \ Quarkus\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n        11\n        3.6.6\n      \
            \  3.11.0\n        UTF-8\n        UTF-8\n    \n\n    \n        \n    \
            \        \n                io.quarkus.platform\n                quarkus-bom\n\
            \                ${quarkus.platform.version}\n                pom\n  \
            \              import\n            \n        \n    \n\n    \n        \n\
            \            io.quarkus\n            quarkus-hibernate-orm\n        \n\
            \        \n            io.quarkus\n            quarkus-jdbc-h2\n     \
            \   \n        \n            io.quarkus\n            quarkus-resteasy-reactive\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-narayana-jta\n\
            \        \n    \n\n    \n        \n            \n                maven-compiler-plugin\n\
            \                ${compiler-plugin.version}\n            \n          \
            \  \n                io.quarkus.platform\n                quarkus-maven-plugin\n\
            \                true\n                \n                    \n      \
            \                  \n                            build\n             \
            \           \n                    \n                \n            \n \
            \       \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>quarkus</version><artifactId>greeter</artifactId><packaging>jar</packaging><name>Quickstart:
            greeter-quarkus</name><description>This project demonstrates how to migrat
            an app using CDI, JPA, JTA, EJB and JSF to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy-reactive</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-narayana-jta</artifactId></dependency></dependencies><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin></plugins></build>'
    helloworld-mdb:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.eap.quickstarts\n    7.4.0.GA\n \
            \   helloworld-mdb\n    war\n    Quickstart: helloworld-mdb\n    This\
            \ project demonstrates a hello world Message-Driven Bean with Servlet\
            \ 3.0 as client\n\n    \n        \n            Apache License, Version\
            \ 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n \
            \           repo\n        \n    \n\n\n\t\t1.8\n\t\t1.8\n\n\t\t${project.basedir}\n\
            \t\tEAP7_HOME\n\t\tJBoss EAP\n\t\t7.4.0.GA\n\t\t\n\t\t2.1.0\n\t\t2.0.2.Final\n\
            \t\t1.0.7.Final\n\t\t2.3.0.Final\n\t\t\n\t\t3.0\n\t\t8.5\n\t\t1.2.3.Final\n\
            \t\t\n\t\tUTF-8\n\n\t\t\n\t\thttps\n\t\t\n\t\t\n\t\t\t${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/\n\
            \t\t\n\t\t\n\t\t\t${maven.repository.protocol}://maven.repository.redhat.com/ga/\n\
            \n\t\t\n\t\t7.4.0.GA\n\n\t\t\n\t\t1.2.0.Beta1\n\t\t20150729\n\t\t1.7.9\n\
            \n\t\thttp://rhdp-drupal.stage.redhat.com/\n\t\tfalse\n\t\t3.0.0.GA\n\t\
            \t3.3.2\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\
            \t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-public-repository-group\n\
            \t\t\tJBoss Public Repository Group\n\t\t\t${maven.repository.url}\n\t\
            \t\tdefault\n\t\t\n\t\t\n\t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\
            \t\t\t\n\t\t\t\ttrue\n\t\t\t\tnever\n\t\t\t\n\t\t\tjboss-enterprise-maven-repository\n\
            \t\t\tJBoss Enterprise Maven Repository\n\t\t\t${maven.redhat.repository.url}\n\
            \t\t\tdefault\n\t\t\n\t\n\t\n\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\torg.jboss.bom\n\
            \t\t\t\tjboss-eap-jakartaee8-with-tools\n\t\t\t\t${version.server.bom}\n\
            \t\t\t\tpom\n\t\t\t\timport\n\t\t\t\n\t\t\n\t\n    \n        \n      \
            \      jakarta.enterprise\n            jakarta.enterprise.cdi-api\n  \
            \          provided\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\
            \        \n            org.jboss.spec.javax.jms\n            jboss-jms-api_2.0_spec\n\
            \            provided\n        \n        \n        \n            org.jboss.spec.javax.servlet\n\
            \            jboss-servlet-api_4.0_spec\n            provided\n      \
            \  \n        \n            org.jboss.spec.javax.annotation\n         \
            \   jboss-annotations-api_1.3_spec\n            provided\n        \n\n\
            \    \n\n\t\t\n\t\t${project.artifactId}\n\t\t\n\t\t\t\n\t\t\t\tmaven-war-plugin\n\
            \t\t\t\t2.4\n\t\t\t\t\n\t\t\t\t\tfalse\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\
            \t\torg.wildfly.plugins\n\t\t\t\twildfly-maven-plugin\n\t\t\t\t${version.wildfly.maven.plugin}\n\
            \t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\topenshift\n\
            \t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\torg.apache.maven.plugins\n\t\
            \t\t\t\t\tmaven-war-plugin\n\t\t\t\t\t\t${version.war.plugin}\n\t\t\t\t\
            \t\t\n\t\t\t\t\t\t\tROOT\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\
            \t\t\torg.apache.maven.plugins\n\t\t\t\t\t\tmaven-source-plugin\n\t\t\t\
            \t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tattach-sources\n\t\t\t\t\t\t\t\
            \tnone\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\
            \t\n\t\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><version>7.4.0.GA</version><artifactId>helloworld-mdb</artifactId><packaging>war</packaging><name>Quickstart:\
            \ helloworld-mdb</name><description>This project demonstrates a hello\
            \ world Message-Driven Bean with Servlet 3.0 as client</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.source>1.8</maven.compiler.source><maven.compiler.target>1.8</maven.compiler.target><root.dir>${project.basedir}</root.dir><jboss.home.name>EAP7_HOME</jboss.home.name><product.name>JBoss\
            \ EAP</product.name><product.version>7.4.0.GA</product.version><!-- A\
            \ base list of dependency and plug-in version used in the various\r\n\t\
            \tquick starts. --><version.org.asciidoctor.asciidoctor-maven-plugin>2.1.0</version.org.asciidoctor.asciidoctor-maven-plugin><version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin><version.org.wildfly.checkstyle-config>1.0.7.Final</version.org.wildfly.checkstyle-config><version.org.wildfly.quickstarts.documentation.plugin>2.3.0.Final</version.org.wildfly.quickstarts.documentation.plugin><!--\
            \ other plug-in versions --><version.com.mycyla.license>3.0</version.com.mycyla.license><version.checkstyle>8.5</version.checkstyle><version.jaxws-tools-maven-plugin>1.2.3.Final</version.jaxws-tools-maven-plugin><!--\
            \ Explicitly declaring the source encoding eliminates the following\r\n\
            \t\tmessage: [WARNING] Using platform encoding (UTF-8 actually) to copy\r\
            \n\t\tfiltered resources, i.e. build is platform dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Protocol to use for communication with remote maven repositories.\r\n\
            \t\tYou can set to 'http' if you are using a maven proxy and 'https'\r\
            \n\t\tinterferes with that. Use 'https' for builds that will be released\r\
            \n                     to\r\n\t\tnon-snapshot public maven repos --><maven.repository.protocol>https</maven.repository.protocol><!--\
            \ The full remote maven repo URL; can be overridden via -D for\r\n\t\t\
            special use cases --><maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url><!--\
            \ https://access.redhat.com/maven-repository --><maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url><!--\
            \ Version of BOMs\r\n        note: a SNAPSHOT version *requires*\r\n\t\
            \tcheckout of BOMs at https://github.com/wildfly/boms and build through\r\
            \n\t\t\"mvn clean install\"\r\n        --><version.server.bom>7.4.0.GA</version.server.bom><!--\
            \ Versions of unmanaged dependencies --><version.arquillian.angularjs.graphene>1.2.0.Beta1</version.arquillian.angularjs.graphene><version.org.json>20150729</version.org.json><version.ro.isdc.wro4j>1.7.9</version.ro.isdc.wro4j><jboss.developer.drupal.url>http://rhdp-drupal.stage.redhat.com/</jboss.developer.drupal.url><linkXRef>false</linkXRef><version.microprofile.bom>3.0.0.GA</version.microprofile.bom><version.war.plugin>3.3.2</version.war.plugin></properties><repositories><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-public-repository-group</id><name>JBoss\
            \ Public Repository Group</name><url>${maven.repository.url}</url><layout>default</layout></repository><repository><releases><enabled>true</enabled><updatePolicy>never</updatePolicy></releases><snapshots><enabled>true</enabled><updatePolicy>never</updatePolicy></snapshots><id>jboss-enterprise-maven-repository</id><name>JBoss\
            \ Enterprise Maven Repository</name><url>${maven.redhat.repository.url}</url><layout>default</layout></repository></repositories><dependencyManagement><dependencies><!--\
            \ importing the jakartaee8-with-tools BOM adds specs and other\r\n\t\t\
            \tuseful artifacts as managed dependencies --><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-jakartaee8-with-tools</artifactId><version>${version.server.bom}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.jms</groupId><artifactId>jboss-jms-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is\r\n    \
            \        included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_4.0_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is\r\n\
            \t\tdeployed --><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-war-plugin</artifactId><version>2.4</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml></configuration></plugin><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></build><profiles><profile><!--\
            \ When built in OpenShift the 'openshift' profile will be\r\n        \
            \        used\r\n\t\t\twhen invoking mvn. --><!-- Use this profile for\
            \ any OpenShift specific customization\r\n                your\r\n\t\t\
            \tapp will ne    ed. --><!-- By default that is to put the resulting archive\
            \ into the\r\n\t\t\t'deployments' folder. --><!--\r\n\t\t\thttp://maven.apache.org/guides/mini/guide-building-for-different-environments.html\
            \ --><id>openshift</id><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-war-plugin</artifactId><version>${version.war.plugin}</version><configuration><warName>ROOT</warName></configuration></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-source-plugin</artifactId><executions><execution><id>attach-sources</id><phase>none</phase></execution></executions></plugin></plugins></build></profile></profiles>"
    kitchensink:
      pom.xml:
      - line_number: 20
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        7.1.0.GA\n        ../pom.xml\n    \n  \
            \  kitchensink\n    war\n    ${qs.name.prefix} kitchensink\n    A starter\
            \ Java EE web application project for use in JBoss EAP, generated from\
            \ the jboss-javaee6-webapp archetype\n\n    \n        \n            Apache\
            \ License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n\n        \n\n        \n  \
            \      \n            javax.enterprise\n            cdi-api\n         \
            \   provided\n        \n\n        \n        \n            junit\n    \
            \        junit\n            test\n        \n\n        \n\n        \n \
            \       \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n        \n  \
            \      \n            org.hibernate\n            hibernate-validator-annotation-processor\n\
            \            provided\n        \n\n        \n        \n            org.hibernate.javax.persistence\n\
            \            hibernate-jpa-2.1-api\n            provided\n        \n\n\
            \        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.2_spec\n            provided\n        \n\n      \
            \  \n        \n            org.jboss.spec.javax.ws.rs\n            jboss-jaxrs-api_2.0_spec\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><version>7.1.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>kitchensink</artifactId><packaging>war</packaging><name>${qs.name.prefix}\
            \ kitchensink</name><description>A starter Java EE web application project\
            \ for use in JBoss EAP, generated from the jboss-javaee6-webapp archetype</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. All\n\
            \            of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included in\n            JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA metamodel classes for\n            typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Bean Validation Implementation \n             Provides portable constraints\
            \ such as @Email \n             Hibernate Validator is shipped in JBoss\
            \ EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Annotation processor that raising compilation errors whenever constraint\n\
            \            annotations are incorrectly used. --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator-annotation-processor</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and Transactional(JTA)\n            JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided scope\n\
            \            as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\n\
            \            JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
    tasks-qute:
      pom.xml:
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    \n        org.jboss.eap.quickstarts\n     \
            \   quickstart-parent\n        \n        7.4.0.GA\n        ../pom.xml\n\
            \    \n\n    tasks-jsf\n    war\n    Quickstart: tasks-jsf\n    This project\
            \ demonstrates how to use JPA persistence to manage tasks with JSF as\
            \ view layer\n\n    \n        \n            Apache License, Version 2.0\n\
            \            http://www.apache.org/licenses/LICENSE-2.0.html\n       \
            \     repo\n        \n    \n\n    \n\n        \n        \n           \
            \ jakarta.enterprise\n            jakarta.enterprise.cdi-api\n       \
            \     provided\n        \n\n        \n        \n            junit\n  \
            \          junit\n            test\n        \n\n        \n        \n \
            \           jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        \n\n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n        \n            org.jboss.spec.javax.ejb\n\
            \            jboss-ejb-api_3.2_spec\n            provided\n        \n\n\
            \        \n        \n            org.jboss.spec.javax.faces\n        \
            \    jboss-jsf-api_2.3_spec\n            provided\n        \n\n    \n\n\
            \    \n        \n        ${project.artifactId}\n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><parent><groupId>org.jboss.eap.quickstarts</groupId><artifactId>quickstart-parent</artifactId><!--\n\
            \        Maintain separation between the artifact id and the version to\
            \ help prevent\n        merge conflicts between commits changing the GA\
            \ and those changing the V.\n        --><version>7.4.0.GA</version><relativePath>../pom.xml</relativePath></parent><artifactId>tasks-jsf</artifactId><packaging>war</packaging><name>Quickstart:\
            \ tasks-jsf</name><description>This project demonstrates how to use JPA\
            \ persistence to manage tasks with JSF as view layer</description><licenses><license><name>Apache\
            \ License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><dependencies><!--\
            \ Import the CDI API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.enterprise</groupId><artifactId>jakarta.enterprise.cdi-api</artifactId><scope>provided</scope></dependency><!--\
            \ Test dependencies --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JSF API, we use provided scope as the API is included in\
            \ JBoss EAP --><dependency><groupId>org.jboss.spec.javax.faces</groupId><artifactId>jboss-jsf-api_2.3_spec</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Set the name of the WAR, used as the context root when the app is deployed\
            \ --><finalName>${project.artifactId}</finalName></build>"
      - line_number: 19
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n\n    org.jboss.eap.quickstarts\n    tasks-jsf\n\
            \    quarkus\n    Quickstart: tasks-jsf migration to Quarkus\n    This\
            \ project demonstrates how to take an app that uses JPA persistence to\
            \ manage tasks with JSF as view layer, and migrate it to Quarkus\n\n \
            \   \n        \n            Apache License, Version 2.0\n            http://www.apache.org/licenses/LICENSE-2.0.html\n\
            \            repo\n        \n    \n\n    \n        11\n        3.6.6\n\
            \        3.11.0\n        3.1.2\n        UTF-8\n        UTF-8\n    \n\n\
            \    \n        \n            \n                io.quarkus.platform\n \
            \               quarkus-bom\n                ${quarkus.platform.version}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n        \n            io.quarkus\n            quarkus-hibernate-orm\n\
            \        \n        \n            io.quarkus\n            quarkus-qute\n\
            \        \n        \n            io.quarkus\n            quarkus-undertow\n\
            \        \n        \n            io.quarkus\n            quarkus-resteasy\n\
            \        \n        \n            io.quarkus\n            quarkus-jdbc-h2\n\
            \        \n\n        \n        \n            io.quarkus\n            quarkus-junit5\n\
            \            test\n        \n        \n            io.quarkus\n      \
            \      quarkus-test-h2\n            test\n        \n    \n\n    \n   \
            \     ${project.artifactId}\n\n        \n            \n              \
            \  maven-compiler-plugin\n                ${compiler-plugin.version}\n\
            \            \n            \n                io.quarkus.platform\n   \
            \             quarkus-maven-plugin\n                true\n           \
            \     \n                    \n                        \n             \
            \               build\n                        \n                    \n\
            \                \n            \n            \n                maven-surefire-plugin\n\
            \                ${surefire-plugin.version}\n                \n      \
            \          \n                    org.jboss.logmanager.LogManager\n   \
            \             \n                \n            \n        \n    \n"
          matchingXML: '<modelVersion>4.0.0</modelVersion><groupId>org.jboss.eap.quickstarts</groupId><artifactId>tasks-jsf</artifactId><version>quarkus</version><name>Quickstart:
            tasks-jsf migration to Quarkus</name><description>This project demonstrates
            how to take an app that uses JPA persistence to manage tasks with JSF
            as view layer, and migrate it to Quarkus</description><licenses><license><name>Apache
            License, Version 2.0</name><url>http://www.apache.org/licenses/LICENSE-2.0.html</url><distribution>repo</distribution></license></licenses><properties><maven.compiler.release>11</maven.compiler.release><quarkus.platform.version>3.6.6</quarkus.platform.version><compiler-plugin.version>3.11.0</compiler-plugin.version><surefire-plugin.version>3.1.2</surefire-plugin.version><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding></properties><dependencyManagement><dependencies><dependency><groupId>io.quarkus.platform</groupId><artifactId>quarkus-bom</artifactId><version>${quarkus.platform.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-hibernate-orm</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-qute</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-undertow</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-resteasy</artifactId></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-jdbc-h2</artifactId></dependency><!--
            Test dependencies --><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-junit5</artifactId><scope>test</scope></dependency><dependency><groupId>io.quarkus</groupId><artifactId>quarkus-test-h2</artifactId><scope>test</scope></dependency></dependencies><build><finalName>${project.artifactId}</finalName><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>${compiler-plugin.version}</version></plugin><plugin><groupId>io.quarkus.platform</groupId><artifactId>quarkus-maven-plugin</artifactId><extensions>true</extensions><executions><execution><goals><goal>build</goal></goals></execution></executions></plugin><plugin><artifactId>maven-surefire-plugin</artifactId><version>${surefire-plugin.version}</version><configuration><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager></systemPropertyVariables></configuration></plugin></plugins></build>'
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 3
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v1\n  \
            \  1.0\n    war\n    ticket-monster backend\n    A starter HTML5 + REST\
            \ webapp project for use on JBoss EAP.\n\n    \n    \n        \n     \
            \       redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \  \n\n    \n        \n            \n                org.jboss.bom\n \
            \               jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n        \n     \
            \   \n            javax.inject\n            javax.inject\n           \
            \ provided\n        \n        \n        \n            javax.validation\n\
            \            validation-api\n            provided\n        \n       \n\
            \        \n        \n            org.jboss.spec.javax.annotation\n   \
            \         jboss-annotations-api_1.2_spec\n            provided\n     \
            \   \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n \
            \           jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n        \n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n\n    \
            \    \n            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v1</artifactId><version>1.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend</name><description>A starter HTML5 + REST webapp project for\
            \ use on JBoss EAP.</description><!-- Activate JBoss Product Maven repository.\n\
            \n        NOTE: Configuring the Maven repository in the pom.xml file is\
            \ not a recommended procedure\n        and is only done here to make it\
            \ easier to use the quickstarts.\n\n        For more information about\
            \ how to configure Maven for your application,\n        see the section\
            \ entitled 'Use the Maven Repository'\n        in the Development Guide\
            \ for Red Hat JBoss Enterprise Application Platform located here:\n\n\
            \        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      backend-v2/pom.xml:
      - line_number: 3
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    backend-v2\n  \
            \  2.0\n    war\n    ticket-monster backend v2\n    A starter HTML5 +\
            \ REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        ceposta/%a:%l\n  \
            \      1.6.5\n        1.1.12.Final\n        2.0.0.Final\n    \n\n    \n\
            \        \n            \n                org.jboss.arquillian\n      \
            \          arquillian-bom\n                ${version.org.jboss.arquillian}\n\
            \                pom\n                import\n            \n         \
            \   \n                org.jboss.bom\n                jboss-eap-javaee7-with-tools\n\
            \                ${version.jboss.bom.eap}\n                pom\n     \
            \           import\n            \n\n        \n    \n\n    \n\n       \
            \ \n\n        \n        \n            javax.enterprise\n            cdi-api\n\
            \            provided\n        \n        \n        \n            javax.inject\n\
            \            javax.inject\n            provided\n        \n        \n\
            \        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n       \n        \n        \n       \
            \     org.jboss.spec.javax.annotation\n            jboss-annotations-api_1.2_spec\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n            org.ff4j\n  \
            \          ff4j-core\n            ${ffj4.version}\n        \n        \n\
            \            org.ff4j\n            ff4j-web\n            ${ffj4.version}\n\
            \        \n\n        \n        \n        \n        \n            org.hibernate\n\
            \            hibernate-validator\n            provided\n            \n\
            \                \n                    org.slf4j\n                   \
            \ slf4j-api\n                \n            \n        \n\n\n        \n\n\
            \        \n        \n            org.hibernate\n            hibernate-jpamodelgen\n\
            \            provided\n        \n\n        \n        \n            junit\n\
            \            junit\n            test\n        \n\n        \n        \n\
            \            io.specto\n            hoverfly-java\n            0.8.0\n\
            \            test\n        \n\n        \n        \n        \n        \
            \    org.jboss.arquillian.junit\n            arquillian-junit-container\n\
            \            test\n        \n\n        \n            org.jboss.arquillian.protocol\n\
            \            arquillian-protocol-servlet\n            test\n        \n\
            \        \n        \n            org.jboss.shrinkwrap.resolver\n     \
            \       shrinkwrap-resolver-depchain\n            pom\n            test\n\
            \        \n\n        \n        \n            org.jboss.resteasy\n    \
            \        resteasy-jackson2-provider\n            provided\n          \
            \  \n                \n                    jackson-annotations\n     \
            \               com.fasterxml.jackson.core\n                \n       \
            \         \n                    jackson-core\n                    com.fasterxml.jackson.core\n\
            \                \n            \n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-client\n            provided\n        \n\n\n   \
            \     \n        \n        \n        \n            org.arquillian.algeron\n\
            \            arquillian-algeron-pact-consumer-core\n            2.0.0-rc.2\n\
            \            test\n        \n        \n            au.com.dius\n     \
            \       pact-jvm-consumer_2.11\n            3.5.0\n            test\n\
            \        \n\n        \n        \n    \n\n    \n        \n        ROOT\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                    \tfalse\n                      \
            \  \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n            \n        \n    \n\n    \n        \n  \
            \          \n            \n            default\n            \n       \
            \         true\n            \n            \n                \n       \
            \             \n                        maven-surefire-plugin\n      \
            \                  ${version.surefire.plugin}\n                      \
            \  \n                            true\n                        \n    \
            \                \n                \n            \n        \n\n      \
            \  \n            \n            arq-wildfly\n            \n           \
            \     \n                    org.wildfly.arquillian\n                 \
            \   wildfly-arquillian-container-embedded\n                    ${version.org.wildfly.arquillian.container}\n\
            \                    test\n                \n            \n          \
            \  \n                \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-dependency-plugin\n                   \
            \     2.8\n                        \n                            \n  \
            \                              unpack\n                              \
            \  process-test-classes\n                                \n          \
            \                          unpack\n                                \n\
            \                                \n                                  \
            \  \n                                        \n                      \
            \                      org.wildfly\n                                 \
            \           wildfly-dist\n                                           \
            \ 10.1.0.Final\n                                            zip\n    \
            \                                        false\n                     \
            \                       \n                                           \
            \ target/wildfly-run\n                                        \n     \
            \                               \n                                \n \
            \                           \n                        \n             \
            \       \n                    \n                        org.apache.maven.plugins\n\
            \                        maven-surefire-plugin\n                     \
            \   2.17\n                        \n                            \n   \
            \                         \n                            1\n          \
            \                  1\n                            \n                 \
            \           \n                                org.jboss.logmanager.LogManager\n\
            \                                \n                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final\n\
            \                                ${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules\n\
            \                                \n                                \n\
            \                            \n                            false\n   \
            \                     \n                    \n                \n     \
            \       \n        \n\n        \n            \n            \n         \
            \   \n            arq-wildfly-managed\n            \n                \n\
            \                    org.wildfly.arquillian\n                    wildfly-arquillian-container-managed\n\
            \                    test\n                \n            \n        \n\n\
            \        \n            \n            \n            arq-wildfly-remote\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                ceposta/%a-mysql:%l\n\
            \            \n            \n                \n                    \n\
            \                        src/main/resources-mysql\n                  \
            \  \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \      \n                    \n                        \n            \
            \                io.fabric8\n                            fabric8-maven-plugin\n\
            \                            ${fabric8.maven.plugin.version}\n       \
            \                     \n                                \n           \
            \                         \n                                        resource\n\
            \                                    \n                              \
            \  \n                            \n                            \n    \
            \                            \n                                    \n\
            \                                        ${docker.image.name}\n      \
            \                                  \n                                \
            \            jboss/wildfly:10.1.0.Final\n                            \
            \                \n                                                8080\n\
            \                                            \n                      \
            \                      \n                                            \
            \    \n                                                    \n        \
            \                                                \n                  \
            \                                          \n                        \
            \                                        ${project.groupId}:${project.artifactId}\n\
            \                                                            \n      \
            \                                                      standalone/deployments/ROOT.war\n\
            \                                                        \n          \
            \                                          \n                        \
            \                            \n                                      \
            \                  \n                                                \
            \            src/main/wf-standalone\n                                \
            \                            \n                                      \
            \                          standalone.xml\n                          \
            \                                  \n                                \
            \                            standalone/configuration\n              \
            \                                          \n                        \
            \                                \n                                  \
            \                          src/main/wf-standalone/module\n           \
            \                                                 \n                 \
            \                                               module.xml\n         \
            \                                                       mysql-connector-java-5.1.38.jar\n\
            \                                                            \n      \
            \                                                      modules/org/mysql/main\n\
            \                                                        \n          \
            \                                          \n                        \
            \                        \n                                          \
            \      jboss:jboss:jboss\n                                           \
            \     /opt/jboss/wildfly/\n                                          \
            \  \n                                        \n                      \
            \              \n                                \n                  \
            \          \n                        \n                    \n        \
            \        \n            \n        \n        \n        \n            postgresql\n\
            \            \n                \n                    \n              \
            \          src/main/resources-postgresql\n                    \n     \
            \               \n                        src/main/resources\n       \
            \                 \n                            **/*\n               \
            \         \n                        \n                            META-INF/*\n\
            \                        \n                    \n                \n  \
            \              \n                    \n                        maven-surefire-plugin\n\
            \                        ${version.surefire.plugin}\n                \
            \        \n                            true\n                        \n\
            \                    \n                \n            \n        \n    \
            \    \n            openshift\n            \n                \n       \
            \         docker\n            \n            \n                \n     \
            \               \n                        io.fabric8\n               \
            \         fabric8-maven-plugin\n                        ${fabric8.maven.plugin.version}\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            kubernetes\n            \n  \
            \              \n                ${docker.image.name}\n            \n\
            \            \n                \n                    \n              \
            \          io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT.war\n                        \n        \
            \            \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>backend-v2</artifactId><version>2.0</version><packaging>war</packaging><name>ticket-monster\
            \ backend v2</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name><ffj4.version>1.6.5</ffj4.version><version.org.jboss.arquillian>1.1.12.Final</version.org.jboss.arquillian><version.org.wildfly.arquillian.container>2.0.0.Final</version.org.wildfly.arquillian.container></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.arquillian</groupId><artifactId>arquillian-bom</artifactId><version>${version.org.jboss.arquillian}</version><type>pom</type><scope>import</scope></dependency><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-core</artifactId><version>${ffj4.version}</version></dependency><dependency><groupId>org.ff4j</groupId><artifactId>ff4j-web</artifactId><version>${ffj4.version}</version></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ For service virtualization/mocking--><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope><exclusions><exclusion><artifactId>jackson-annotations</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion><exclusion><artifactId>jackson-core</artifactId><groupId>com.fasterxml.jackson.core</groupId></exclusion></exclusions></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-client</artifactId><scope>provided</scope></dependency><!--\
            \ Algeron/Pact Contract testing--><!--org.arquillian.algeron:arquillian-algeron-pact-consumer-core:1.0.0.Alpha5--><!--\
            \ https://mvnrepository.com/artifact/org.arquillian.algeron/arquillian-algeron-pact-consumer-core\
            \ --><dependency><groupId>org.arquillian.algeron</groupId><artifactId>arquillian-algeron-pact-consumer-core</artifactId><version>2.0.0-rc.2</version><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-consumer_2.11</artifactId><version>3.5.0</version><scope>test</scope></dependency><!--testCompile\
            \ 'au.com.dius:pact-jvm-consumer_2.11:3.5.0-beta.2'--><!--<dependency>\n\
            \            <groupId>au.com.dius</groupId>\n            <artifactId>pact-jvm-consumer-junit_2.11</artifactId>\n\
            \            <version>3.5.0</version>\n            <scope>test</scope>\n\
            \        </dependency>--></dependencies><build><!-- Maven will append\
            \ the version to the finalName (which is the\n       name given to the\
            \ generated war, and hence the context root) --><finalName>ROOT</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune \n        \
            \        it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including \n          \
            \      Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ Embedded wildfly arquillian tests--><id>arq-wildfly</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-embedded</artifactId><version>${version.org.wildfly.arquillian.container}</version><scope>test</scope></dependency></dependencies><build><plugins><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId><version>2.8</version><executions><execution><id>unpack</id><phase>process-test-classes</phase><goals><goal>unpack</goal></goals><configuration><artifactItems><artifactItem><groupId>org.wildfly</groupId><artifactId>wildfly-dist</artifactId><version>10.1.0.Final</version><type>zip</type><overWrite>false</overWrite><!--\
            \ putting under this subdir because this is where wildfly:run puts its\
            \ dist--><outputDirectory>target/wildfly-run</outputDirectory></artifactItem></artifactItems></configuration></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId><version>2.17</version><configuration><!--\
            \ Fork every test because it will launch a separate AS instance --><!--<forkMode>always</forkMode>--><forkCount>1</forkCount><reuseForks>1</reuseForks><!--<debugForkedProcess>true</debugForkedProcess>--><systemPropertyVariables><java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager><!--\
            \ the maven dependency plugin will have already downloaded the server\
            \ on /target --><jboss.home>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final</jboss.home><module.path>${project.basedir}/target/wildfly-run/wildfly-10.1.0.Final/modules</module.path><!--<http.proxyHost>localhost</http.proxyHost>--><!--<http.proxyPort>5991</http.proxyPort>--></systemPropertyVariables><redirectTestOutputToFile>false</redirectTestOutputToFile></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in your JBoss EAP instance --><!-- This profile will start\
            \ a new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests \n      \
            \          in a remote JBoss EAP instance --><!-- Run with: mvn clean\
            \ test -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><properties><docker.image.name>ceposta/%a-mysql:%l</docker.image.name></properties><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins><pluginManagement><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT.war</warName></configuration></plugin></plugins></build></profile></profiles>"
      monolith/pom.xml:
      - line_number: 3
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster\n\
            \    3.0.0-SNAPSHOT\n    war\n    ticket-monster\n    A starter HTML5\
            \ + REST webapp project for use on JBoss EAP.\n\n    \n    \n        \n\
            \            redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-ga-repository\n\
            \            http://maven.repository.redhat.com/techpreview/all\n    \
            \        \n                true\n            \n            \n        \
            \        false\n            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \    \n        UTF-8\n        \n        \n        yyyyMMdd'T'HHmmss\n\
            \        \n        ${env.JBOSS_HOME}\n        7.0.7.GA\n        1.0.2.Final\n\
            \        2.10\n        1.7\n        3.5.25\n        %g/%a:%l\n    \n\n\
            \    \n        \n            \n                org.jboss.bom\n       \
            \         jboss-eap-javaee7-with-tools\n                ${version.jboss.bom.eap}\n\
            \                pom\n                import\n            \n        \n\
            \    \n\n    \n\n        \n\n        \n        \n            javax.enterprise\n\
            \            cdi-api\n            provided\n        \n\n        \n   \
            \         javax.inject\n            javax.inject\n            provided\n\
            \        \n\n        \n            javax.validation\n            validation-api\n\
            \            provided\n        \n\n        \n        \n            org.jboss.spec.javax.annotation\n\
            \            jboss-annotations-api_1.2_spec\n            provided\n  \
            \      \n\n        \n        \n            org.jboss.spec.javax.ws.rs\n\
            \            jboss-jaxrs-api_2.0_spec\n            provided\n        \n\
            \n        \n        \n            org.hibernate.javax.persistence\n  \
            \          hibernate-jpa-2.1-api\n            provided\n        \n\n \
            \       \n        \n            org.jboss.spec.javax.ejb\n           \
            \ jboss-ejb-api_3.2_spec\n            provided\n        \n\n        \n\
            \        \n            org.jboss.spec.javax.servlet\n            jboss-servlet-api_3.1_spec\n\
            \            provided\n        \n\n        \n        \n        \n    \
            \    \n            org.hibernate\n            hibernate-validator\n  \
            \          provided\n            \n                \n                \
            \    org.slf4j\n                    slf4j-api\n                \n    \
            \        \n        \n\n\n        \n\n        \n        \n            org.hibernate\n\
            \            hibernate-jpamodelgen\n            provided\n        \n\n\
            \        \n        \n            junit\n            junit\n          \
            \  test\n        \n\n        \n        \n        \n            org.jboss.arquillian.junit\n\
            \            arquillian-junit-container\n            test\n        \n\n\
            \        \n            org.jboss.arquillian.protocol\n            arquillian-protocol-servlet\n\
            \            test\n        \n\n        \n            org.jboss.shrinkwrap.resolver\n\
            \            shrinkwrap-resolver-depchain\n            pom\n         \
            \   test\n        \n\n        \n        \n            org.jboss.resteasy\n\
            \            resteasy-jackson2-provider\n            provided\n      \
            \  \n        \n            org.jboss.resteasy\n            resteasy-jaxrs\n\
            \            provided\n        \n\n    \n\n    \n        \n        ${project.artifactId}\n\
            \        \n\n            \n                \n                \n      \
            \              maven-compiler-plugin\n                    2.3.1\n    \
            \                \n                        1.8\n                     \
            \   1.8\n                    \n                \n                \n  \
            \                  maven-war-plugin\n                    2.1.1\n     \
            \               \n                        false\n                    \
            \    \n                            \n                                org.jboss.as.naming,org.jboss.as.server,org.jboss.msc\n\
            \                            \n                        \n            \
            \        \n                \n\n                \n                \n  \
            \              \n                    org.wildfly.plugins\n           \
            \         wildfly-maven-plugin\n                    ${version.wildfly.maven.plugin}\n\
            \                \n                \n                    io.fabric8\n\
            \                    fabric8-maven-plugin\n                    ${fabric8.maven.plugin.version}\n\
            \                    \n                        \n                    \
            \        \n                                resource\n                \
            \            \n                        \n                    \n      \
            \              \n                        \n                          \
            \  \n                                ${docker.image.name}\n          \
            \                      \n                                    jboss/wildfly:10.1.0.Final\n\
            \                                    \n                              \
            \          8080\n                                    \n              \
            \                      \n                                        \n  \
            \                                          \n                        \
            \                        \n                                          \
            \          \n                                                        ${project.groupId}:${project.artifactId}\n\
            \                                                    \n              \
            \                                      standalone/deployments/ROOT.war\n\
            \                                                \n                  \
            \                          \n                                        \
            \    \n                                                \n            \
            \                                        src/main/wf-standalone\n    \
            \                                                \n                  \
            \                                      standalone.xml\n              \
            \                                      \n                            \
            \                        standalone/configuration\n                  \
            \                              \n                                    \
            \            \n                                                    src/main/wf-standalone/module\n\
            \                                                    \n              \
            \                                          module.xml\n              \
            \                                          mysql-connector-java-5.1.38.jar\n\
            \                                                    \n              \
            \                                      modules/org/mysql/main\n      \
            \                                          \n                        \
            \                    \n                                        \n    \
            \                                    jboss:jboss:jboss\n             \
            \                           /opt/jboss/wildfly/\n                    \
            \                \n                                \n                \
            \            \n                        \n                    \n      \
            \          \n            \n        \n    \n\n    \n        \n        \
            \    \n            \n            default\n            \n             \
            \   true\n            \n            \n                \n             \
            \       \n                        maven-surefire-plugin\n            \
            \            ${version.surefire.plugin}\n                        \n  \
            \                          true\n                        \n          \
            \          \n                \n            \n        \n\n\n        \n\
            \            \n            \n            \n            arq-wildfly-managed\n\
            \            \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-managed\n          \
            \          test\n                \n            \n        \n\n        \n\
            \            \n            \n            arq-wildfly-remote\n        \
            \    \n                \n                    org.wildfly.arquillian\n\
            \                    wildfly-arquillian-container-remote\n           \
            \         test\n                \n            \n        \n\n\n       \
            \ \n            mysql\n            \n                \n              \
            \      \n                        src/main/resources-mysql\n          \
            \          \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n\n        \n            postgresql\n            \n    \
            \            \n                    \n                        src/main/resources-postgresql\n\
            \                    \n                    \n                        src/main/resources\n\
            \                        \n                            **/*\n        \
            \                \n                        \n                        \
            \    META-INF/*\n                        \n                    \n    \
            \            \n                \n                    \n              \
            \          maven-surefire-plugin\n                        ${version.surefire.plugin}\n\
            \                        \n                            true\n        \
            \                \n                    \n                \n          \
            \  \n        \n        \n            openshift\n            \n       \
            \         \n                docker\n            \n            \n     \
            \           \n                    \n                        io.fabric8\n\
            \                        fabric8-maven-plugin\n                      \
            \  ${fabric8.maven.plugin.version}\n                        \n       \
            \                     \n                                \n           \
            \                         resource\n                                \n\
            \                            \n                        \n            \
            \        \n                \n            \n        \n        \n      \
            \      kubernetes\n            \n                \n                %g/%a:%l\n\
            \            \n            \n                \n                    \n\
            \                        io.fabric8\n                        fabric8-maven-plugin\n\
            \                        \n                            \n            \
            \                    \n                                    resource\n\
            \                                \n                            \n    \
            \                    \n                    \n                \n      \
            \      \n        \n        \n            \n            openshift-no-fmp\n\
            \            \n                \n                    \n              \
            \          maven-war-plugin\n                        \n              \
            \              ${project.build.directory}/openshift/deployments\n    \
            \                        ROOT\n                        \n            \
            \        \n                \n            \n        \n\n    \n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster</artifactId><version>3.0.0-SNAPSHOT</version><packaging>war</packaging><name>ticket-monster</name><description>A\
            \ starter HTML5 + REST webapp project for use on JBoss EAP.</description><!--\
            \ Activate JBoss Product Maven repository.\n\n        NOTE: Configuring\
            \ the Maven repository in the pom.xml file is not a recommended procedure\n\
            \        and is only done here to make it easier to use the quickstarts.\n\
            \n        For more information about how to configure Maven for your application,\n\
            \        see the section entitled 'Use the Maven Repository'\n       \
            \ in the Development Guide for Red Hat JBoss Enterprise Application Platform\
            \ located here:\n\n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><properties><!--\
            \ Explicitly declaring the source encoding eliminates the following \n\
            \            message: --><!-- [WARNING] Using platform encoding (UTF-8\
            \ actually) to copy filtered \n            resources, i.e. build is platform\
            \ dependent! --><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--\
            \ Timestamp format for the maven.build.timestamp property --><!-- You\
            \ can reference property in pom.xml or filtered resources \n         \
            \   (must enable third-party plugin if using Maven < 2.1) --><maven.build.timestamp.format>yyyyMMdd&#39;T&#39;HHmmss</maven.build.timestamp.format><!--\
            \ Specify the JBoss EAP directory to be the JBOSS_HOME environment\n \
            \           variable --><jboss.home>${env.JBOSS_HOME}</jboss.home><version.jboss.bom.eap>7.0.7.GA</version.jboss.bom.eap><version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin><version.surefire.plugin>2.10</version.surefire.plugin><buildhelper.plugin.version>1.7</buildhelper.plugin.version><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>%g/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><groupId>org.jboss.bom</groupId><artifactId>jboss-eap-javaee7-with-tools</artifactId><version>${version.jboss.bom.eap}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><!--\
            \ First declare the APIs we depend on and need for compilation. \n   \
            \         All of them are provided by JBoss EAP --><!-- Import the CDI\
            \ API, we use provided scope as the API is included \n            in JBoss\
            \ EAP --><dependency><groupId>javax.enterprise</groupId><artifactId>cdi-api</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.inject</groupId><artifactId>javax.inject</artifactId><scope>provided</scope></dependency><dependency><groupId>javax.validation</groupId><artifactId>validation-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Common Annotations API (JSR-250), we use provided \n    \
            \        scope as the API is included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.annotation</groupId><artifactId>jboss-annotations-api_1.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JAX-RS API, we use provided scope as the API is included\
            \ \n            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ws.rs</groupId><artifactId>jboss-jaxrs-api_2.0_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the JPA API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.hibernate.javax.persistence</groupId><artifactId>hibernate-jpa-2.1-api</artifactId><scope>provided</scope></dependency><!--\
            \ Import the EJB API, we use provided scope as the API is included \n\
            \            in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.ejb</groupId><artifactId>jboss-ejb-api_3.2_spec</artifactId><scope>provided</scope></dependency><!--\
            \ Import the Servlet API, we use provided scope as the API is \n     \
            \       included in JBoss EAP --><dependency><groupId>org.jboss.spec.javax.servlet</groupId><artifactId>jboss-servlet-api_3.1_spec</artifactId><scope>provided</scope></dependency><!--\
            \ JSR-303 (Bean Validation) Implementation --><!-- Provides portable constraints\
            \ such as @Email --><!-- Hibernate Validator is shipped in JBoss EAP --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-validator</artifactId><scope>provided</scope><exclusions><exclusion><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId></exclusion></exclusions></dependency><!--\
            \ Now we declare any tools needed --><!-- Annotation processor to generate\
            \ the JPA 2.0 metamodel classes \n            for typesafe criteria queries\
            \ --><dependency><groupId>org.hibernate</groupId><artifactId>hibernate-jpamodelgen</artifactId><scope>provided</scope></dependency><!--\
            \ Needed for running tests (you may also use TestNG) --><dependency><groupId>junit</groupId><artifactId>junit</artifactId><scope>test</scope></dependency><!--\
            \ Optional, but highly recommended --><!-- Arquillian allows you to test\
            \ enterprise code such as EJBs and \n            Transactional(JTA) JPA\
            \ from JUnit/TestNG --><dependency><groupId>org.jboss.arquillian.junit</groupId><artifactId>arquillian-junit-container</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.arquillian.protocol</groupId><artifactId>arquillian-protocol-servlet</artifactId><scope>test</scope></dependency><dependency><groupId>org.jboss.shrinkwrap.resolver</groupId><artifactId>shrinkwrap-resolver-depchain</artifactId><type>pom</type><scope>test</scope></dependency><!--\
            \ RESTEasy dependencies that bring in Jackson Core and RESTEasy APIs+SPIs,\
            \ which we use for\n            fine tuning the content of the JSON responses\
            \ --><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jackson2-provider</artifactId><scope>provided</scope></dependency><dependency><groupId>org.jboss.resteasy</groupId><artifactId>resteasy-jaxrs</artifactId><scope>provided</scope></dependency></dependencies><build><!--\
            \ Maven will append the version to the finalName (which is the\n     \
            \  name given to the generated war, and hence the context root) --><finalName>${project.artifactId}</finalName><pluginManagement><plugins><!--\
            \ Compiler plugin enforces Java 1.8 compatibility and activates\n    \
            \          annotation processors --><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin><plugin><artifactId>maven-war-plugin</artifactId><version>2.1.1</version><configuration><failOnMissingWebXml>false</failOnMissingWebXml><archive><manifestEntries><Dependencies>org.jboss.as.naming,org.jboss.as.server,org.jboss.msc</Dependencies></manifestEntries></archive></configuration></plugin><!--\
            \ The WildFly plugin deploys your war to a local JBoss EAP container --><!--\
            \ To use run: mvn package wildfly:deploy --><plugin><groupId>org.wildfly.plugins</groupId><artifactId>wildfly-maven-plugin</artifactId><version>${version.wildfly.maven.plugin}</version></plugin><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions><configuration><images><image><name>${docker.image.name}</name><build><from>jboss/wildfly:10.1.0.Final</from><ports><port>8080</port></ports><assembly><inline><dependencySets><dependencySet><includes><include>${project.groupId}:${project.artifactId}</include></includes><outputFileNameMapping>standalone/deployments/ROOT.war</outputFileNameMapping></dependencySet></dependencySets><fileSets><fileSet><directory>src/main/wf-standalone</directory><includes><include>standalone.xml</include></includes><outputDirectory>standalone/configuration</outputDirectory></fileSet><fileSet><directory>src/main/wf-standalone/module</directory><includes><include>module.xml</include><include>mysql-connector-java-5.1.38.jar</include></includes><outputDirectory>modules/org/mysql/main</outputDirectory></fileSet></fileSets></inline><user>jboss:jboss:jboss</user><basedir>/opt/jboss/wildfly/</basedir></assembly></build></image></images></configuration></plugin></plugins></pluginManagement></build><profiles><profile><!--\
            \ The default profile skips all tests, though you can tune\n         \
            \       it to run just unit tests based on a custom pattern --><!-- Seperate\
            \ profiles are provided for running all tests, including\n           \
            \     Arquillian tests that execute in the specified container --><id>default</id><activation><activeByDefault>true</activeByDefault></activation><build><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in your JBoss EAP instance --><!-- This profile will start a\
            \ new JBoss EAP instance, and execute\n                the test, shutting\
            \ it down when done --><!-- Run with: mvn clean test -Parq-wildfly-managed\
            \ --><id>arq-wildfly-managed</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-managed</artifactId><scope>test</scope></dependency></dependencies></profile><profile><!--\
            \ An optional Arquillian testing profile that executes tests\n       \
            \         in a remote JBoss EAP instance --><!-- Run with: mvn clean test\
            \ -Parq-wildfly-remote --><id>arq-wildfly-remote</id><dependencies><dependency><groupId>org.wildfly.arquillian</groupId><artifactId>wildfly-arquillian-container-remote</artifactId><scope>test</scope></dependency></dependencies></profile><profile><id>mysql</id><build><resources><resource><directory>src/main/resources-mysql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>postgresql</id><build><resources><resource><directory>src/main/resources-postgresql</directory></resource><resource><directory>src/main/resources</directory><includes><include>**/*</include></includes><excludes><exclude>META-INF/*</exclude></excludes></resource></resources><plugins><plugin><artifactId>maven-surefire-plugin</artifactId><version>${version.surefire.plugin}</version><configuration><skip>true</skip></configuration></plugin></plugins></build></profile><profile><id>openshift</id><properties><!--\
            \ we need this for now because fmp doesn't support straight binary s2i\
            \ builds --><fabric8.build.strategy>docker</fabric8.build.strategy></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>kubernetes</id><properties><!--\
            \ todo really!?  https://github.com/fabric8io/fabric8-maven-plugin/issues/1030\
            \ --><fabric8.generator.name>%g/%a:%l</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile><profile><!--\n\
            \             We can stage the build if using binary s2i without the f-m-p..\
            \ but really? why\n             would you want to do that? f-m-p does\
            \ the binary s2i for you without all this extra\n             hoop-jumping\n\
            \             --><id>openshift-no-fmp</id><build><plugins><plugin><artifactId>maven-war-plugin</artifactId><configuration><outputDirectory>${project.build.directory}/openshift/deployments</outputDirectory><warName>ROOT</warName></configuration></plugin></plugins></build></profile></profiles>"
      orders-service/pom.xml:
      - line_number: 5
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n  orders-service\n  org.ticketmonster.orders\n  1.0.0-SNAPSHOT\n\
            \  4.0.0\n\n  \n    1.5.6.RELEASE\n    0.20.1\n    5.7\n    ticket\n \
            \   monster\n    3306\n    60000\n    true\n    3.5.25\n    ceposta/%a:%l\n\
            \  \n\n  \n    \n      \n        \n        org.springframework.boot\n\
            \        spring-boot-dependencies\n        ${spring-boot.version}\n  \
            \      pom\n        import\n      \n    \n  \n\n\n  \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-web\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-actuator\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-data-jpa\n    \n    \n      org.teiid.spring\n\
            \      teiid-spring-boot-starter\n      1.0.0-SNAPSHOT\n    \n\n\n\n \
            \   \n    \n      io.rest-assured\n      rest-assured\n      3.0.3\n \
            \     test\n    \n    \n      io.rest-assured\n      json-schema-validator\n\
            \      3.0.3\n      test\n    \n    \n      io.specto\n      hoverfly-java\n\
            \      0.8.0\n      test\n    \n    \n      org.springframework.boot\n\
            \      spring-boot-starter-test\n      test\n    \n    \n      com.h2database\n\
            \      h2\n      test\n    \n\n    \n      au.com.dius\n      pact-jvm-provider-junit_2.11\n\
            \      3.5.0\n    \n  \n\n  \n    \n      \n        org.springframework.boot\n\
            \        spring-boot-maven-plugin\n        ${spring-boot.version}\n  \
            \      \n          \n            \n              repackage\n         \
            \   \n          \n        \n        \n          exec\n        \n     \
            \ \n      \n        maven-compiler-plugin\n        2.3.1\n        \n \
            \         1.8\n          1.8\n        \n      \n    \n  \n\n  \n    \n\
            \      default\n      \n        true\n      \n      \n        \n     \
            \     com.h2database\n          h2\n        \n      \n    \n    \n   \
            \   mysql\n      \n        mysql\n        false\n      \n      \n    \
            \    \n          mysql\n          mysql-connector-java\n          5.1.44\n\
            \        \n      \n      \n        \n          \n            org.springframework.boot\n\
            \            spring-boot-maven-plugin\n            \n              \n\
            \                \n                  repackage\n                \n   \
            \           \n            \n            \n              \n           \
            \     mysql\n              \n            \n          \n          \n  \
            \          io.fabric8\n            docker-maven-plugin\n            ${docker-maven-plugin.version}\n\
            \            \n              \n                \n                  tm-orders/mysql-test-database\n\
            \                  \n                    \n                      admin\n\
            \                      ticketmonster\n                      ${mysql.user}\n\
            \                      ${mysql.password}\n                    \n     \
            \               \n                      ${mysql.port}:3306\n         \
            \           \n                    \n                      mysql\n    \
            \                  true\n                      yellow\n              \
            \      \n                    \n                      MySQL init process\
            \ done. Ready for start up.\n                      ${mysql.init.timeout}\n\
            \                    \n                  \n                  \n      \
            \              mysql/mysql-server:${mysql-server.version}\n          \
            \          \n                      \n                        \n      \
            \                    \n                            ${project.basedir}/scripts\n\
            \                            docker-entrypoint-initdb.d\n            \
            \              \n                        \n                      \n  \
            \                    /\n                    \n                  \n   \
            \             \n              \n            \n            \n         \
            \     \n                start\n                pre-integration-test\n\
            \                \n                  build\n                  start\n\
            \                \n              \n              \n                stop\n\
            \                post-integration-test\n                \n           \
            \       stop\n                \n              \n            \n       \
            \   \n          \n            org.apache.maven.plugins\n            maven-failsafe-plugin\n\
            \            \n              ${skipITs}\n              true\n        \
            \      \n                \n                ${mysql.port}\n           \
            \     ${mysql.user}\n                ${mysql.password}\n             \
            \   ${spring.profiles.active}\n              \n            \n        \
            \    \n              \n                integration-test\n            \
            \    \n                  integration-test\n                \n        \
            \      \n              \n                verify\n                \n  \
            \                verify\n                \n              \n          \
            \  \n          \n        \n      \n    \n    \n      skip-integration-tests\n\
            \      \n        false\n        \n          skipITs\n          true\n\
            \        \n      \n      \n        true\n      \n    \n    \n      kubernetes\n\
            \      \n        ${docker.image.name}\n      \n      \n        \n    \
            \      \n            io.fabric8\n            fabric8-maven-plugin\n  \
            \          ${fabric8.maven.plugin.version}\n            \n           \
            \   \n                \n                  resource\n                \n\
            \              \n            \n          \n        \n      \n    \n  \n\
            \n\n"
          matchingXML: <artifactId>orders-service</artifactId><groupId>org.ticketmonster.orders</groupId><version>1.0.0-SNAPSHOT</version><modelVersion>4.0.0</modelVersion><properties><spring-boot.version>1.5.6.RELEASE</spring-boot.version><docker-maven-plugin.version>0.20.1</docker-maven-plugin.version><mysql-server.version>5.7</mysql-server.version><mysql.user>ticket</mysql.user><mysql.password>monster</mysql.password><mysql.port>3306</mysql.port><mysql.init.timeout>60000</mysql.init.timeout><skipITs>true</skipITs><fabric8.maven.plugin.version>3.5.25</fabric8.maven.plugin.version><docker.image.name>ceposta/%a:%l</docker.image.name></properties><dependencyManagement><dependencies><dependency><!--
            Import dependency management from Spring Boot --><groupId>org.springframework.boot</groupId><artifactId>spring-boot-dependencies</artifactId><version>${spring-boot.version}</version><type>pom</type><scope>import</scope></dependency></dependencies></dependencyManagement><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.teiid.spring</groupId><artifactId>teiid-spring-boot-starter</artifactId><version>1.0.0-SNAPSHOT</version></dependency><!--
            Testing --><dependency><groupId>io.rest-assured</groupId><artifactId>rest-assured</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.rest-assured</groupId><artifactId>json-schema-validator</artifactId><version>3.0.3</version><scope>test</scope></dependency><dependency><groupId>io.specto</groupId><artifactId>hoverfly-java</artifactId><version>0.8.0</version><scope>test</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>test</scope></dependency><dependency><groupId>au.com.dius</groupId><artifactId>pact-jvm-provider-junit_2.11</artifactId><version>3.5.0</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration></plugin><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build><profiles><profile><id>default</id><activation><activeByDefault>true</activeByDefault></activation><dependencies><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId></dependency></dependencies></profile><profile><id>mysql</id><properties><spring.profiles.active>mysql</spring.profiles.active><skipITs>false</skipITs></properties><dependencies><dependency><groupId>mysql</groupId><artifactId>mysql-connector-java</artifactId><version>5.1.44</version></dependency></dependencies><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><profiles><profile>mysql</profile></profiles></configuration></plugin><plugin><groupId>io.fabric8</groupId><artifactId>docker-maven-plugin</artifactId><version>${docker-maven-plugin.version}</version><configuration><images><image><name>tm-orders/mysql-test-database</name><run><env><MYSQL_ROOT_PASSWORD>admin</MYSQL_ROOT_PASSWORD><MYSQL_DATABASE>ticketmonster</MYSQL_DATABASE><MYSQL_USER>${mysql.user}</MYSQL_USER><MYSQL_PASSWORD>${mysql.password}</MYSQL_PASSWORD></env><ports><port>${mysql.port}:3306</port></ports><log><prefix>mysql</prefix><enabled>true</enabled><color>yellow</color></log><wait><log>MySQL
            init process done. Ready for start up.</log><time>${mysql.init.timeout}</time></wait></run><build><from>mysql/mysql-server:${mysql-server.version}</from><assembly><inline><fileSets><fileSet><directory>${project.basedir}/scripts</directory><outputDirectory>docker-entrypoint-initdb.d</outputDirectory></fileSet></fileSets></inline><targetDir>/</targetDir></assembly></build></image></images></configuration><executions><execution><id>start</id><phase>pre-integration-test</phase><goals><goal>build</goal><goal>start</goal></goals></execution><execution><id>stop</id><phase>post-integration-test</phase><goals><goal>stop</goal></goals></execution></executions></plugin><plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-failsafe-plugin</artifactId><configuration><skipTests>${skipITs}</skipTests><enableAssertions>true</enableAssertions><systemPropertyVariables><!--
            Make these available to the tests via system properties --><database.port>${mysql.port}</database.port><database.user>${mysql.user}</database.user><database.password>${mysql.password}</database.password><spring.profiles.active>${spring.profiles.active}</spring.profiles.active></systemPropertyVariables></configuration><executions><execution><id>integration-test</id><goals><goal>integration-test</goal></goals></execution><execution><id>verify</id><goals><goal>verify</goal></goals></execution></executions></plugin></plugins></build></profile><profile><id>skip-integration-tests</id><activation><activeByDefault>false</activeByDefault><property><name>skipITs</name><value>true</value></property></activation><properties><docker.skip>true</docker.skip></properties></profile><profile><id>kubernetes</id><properties><fabric8.generator.name>${docker.image.name}</fabric8.generator.name></properties><build><plugins><plugin><groupId>io.fabric8</groupId><artifactId>fabric8-maven-plugin</artifactId><version>${fabric8.maven.plugin.version}</version><executions><execution><goals><goal>resource</goal></goals></execution></executions></plugin></plugins></build></profile></profiles>
      pom.xml:
      - line_number: 3
        message: "\n \n Leverage a Maven profile to run the Quarkus native build adding\
          \ the following section to the `pom.xml` file: \n\n ```xml\n <profiles>\n\
          \ <profile>\n <id>native</id>\n <activation>\n <property>\n <name>native</name>\n\
          \ </property>\n </activation>\n <properties>\n <skipITs>false</skipITs>\n\
          \ <quarkus.package.type>native</quarkus.package.type>\n </properties>\n\
          \ </profile>\n </profiles>\n ```\n \n "
        variables:
          data: project
          innerText: "\n    4.0.0\n    org.jboss.examples.eap\n    ticket-monster-parent\n\
            \    3.0.0-SNAPSHOT\n    \n        monolith\n        backend-v1\n    \
            \    backend-v2\n        orders-service\n    \n    pom\n    Ticket Monster\
            \ Parent\n    A starter HTML5 + REST webapp project for use on JBoss EAP.\n\
            \n    \n    \n        \n            redhat-ga-repository\n           \
            \ https://maven.repository.redhat.com/ga/\n            \n            \
            \    true\n            \n            \n                false\n       \
            \     \n        \n        \n            jboss-ga-repository\n        \
            \    http://maven.repository.redhat.com/techpreview/all\n            \n\
            \                true\n            \n            \n                false\n\
            \            \n        \n        \n            jboss-earlyaccess-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n        \n            redhat.ea\n\
            \            Red Hat Early Access Repository\n            https://maven.repository.redhat.com/earlyaccess/all\n\
            \            \n                false\n            \n            \n   \
            \             true\n            \n        \n    \n\n    \n        \n \
            \           redhat-ga-repository\n            https://maven.repository.redhat.com/ga/\n\
            \            \n                true\n            \n            \n    \
            \            false\n            \n        \n        \n            jboss-earlyaccess-plugin-repository\n\
            \            http://maven.repository.redhat.com/earlyaccess/all/\n   \
            \         \n                true\n            \n            \n       \
            \         false\n            \n        \n    \n\n    \n        \n    \
            \        \n                maven-compiler-plugin\n                2.3.1\n\
            \                \n                    1.8\n                    1.8\n\
            \                \n            \n        \n    \n\n"
          matchingXML: "<modelVersion>4.0.0</modelVersion><groupId>org.jboss.examples.eap</groupId><artifactId>ticket-monster-parent</artifactId><version>3.0.0-SNAPSHOT</version><modules><module>monolith</module><module>backend-v1</module><module>backend-v2</module><module>orders-service</module></modules><packaging>pom</packaging><name>Ticket\
            \ Monster Parent</name><description>A starter HTML5 + REST webapp project\
            \ for use on JBoss EAP.</description><!-- Activate JBoss Product Maven\
            \ repository.\n\n        NOTE: Configuring the Maven repository in the\
            \ pom.xml file is not a recommended procedure\n        and is only done\
            \ here to make it easier to use the quickstarts.\n\n        For more information\
            \ about how to configure Maven for your application,\n        see the\
            \ section entitled 'Use the Maven Repository'\n        in the Development\
            \ Guide for Red Hat JBoss Enterprise Application Platform located here:\n\
            \n        https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/\n\
            \    --><repositories><repository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-ga-repository</id><url>http://maven.repository.redhat.com/techpreview/all</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>jboss-earlyaccess-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository><repository><id>redhat.ea</id><name>Red\
            \ Hat Early Access Repository</name><url>https://maven.repository.redhat.com/earlyaccess/all</url><snapshots><enabled>false</enabled></snapshots><releases><enabled>true</enabled></releases></repository></repositories><pluginRepositories><pluginRepository><id>redhat-ga-repository</id><url>https://maven.repository.redhat.com/ga/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository><pluginRepository><id>jboss-earlyaccess-plugin-repository</id><url>http://maven.repository.redhat.com/earlyaccess/all/</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><artifactId>maven-compiler-plugin</artifactId><version>2.3.1</version><configuration><source>1.8</source><target>1.8</target></configuration></plugin></plugins></build>"
  javaee-pom-to-quarkus-00070:
    bmt:
      pom.xml:
      - line_number: 144
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    cmt:
      pom.xml:
      - line_number: 149
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    greeter:
      pom.xml:
      - line_number: 54
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    kitchensink:
      pom.xml:
      - line_number: 65
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate
          matchingXML: org.hibernate
      - line_number: 96
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
    tasks-qute:
      pom.xml:
      - line_number: 62
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: dependency
          innerText: "\n            jakarta.persistence\n            jakarta.persistence-api\n\
            \            provided\n        "
          matchingXML: <groupId>jakarta.persistence</groupId><artifactId>jakarta.persistence-api</artifactId><scope>provided</scope>
    ticket-monster:
      backend-v1/pom.xml:
      - line_number: 166
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
      backend-v2/pom.xml:
      - line_number: 177
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
      monolith/pom.xml:
      - line_number: 166
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate.javax.persistence
          matchingXML: org.hibernate.javax.persistence
      - line_number: 101
        message: "\n \n Configure Quarkus 'hibernate-orm` and jakarta persistence.\
          \ \n Add the `quarkus-hibernate-orm` section and one for your preferred\
          \ jdbc solution to the `pom.xml` file, eg for postgres: \n\n ```\n <!--\
          \ Hibernate ORM specific dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-hibernate-orm</artifactId>\n </dependency>\n \n <!--\
          \ JDBC driver dependencies -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-jdbc-postgresql</artifactId>\n </dependency> \n ```\n\
          \ \n "
        variables:
          data: groupId
          innerText: org.hibernate.orm
          matchingXML: org.hibernate.orm
  javaee-pom-to-quarkus-00080:
    cmt:
      pom.xml:
      - line_number: 143
        message: "\n \n Use Quarkus junit artifact: \n\n ```\n <!-- Quarkus junit\
          \ specific dependency -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-junit5</artifactId>\n <scope>test</scope>\n </dependency>\n\
          \ ```\n \n "
        variables:
          name: junit.junit
          version: 4.13.1
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n \n Use Quarkus junit artifact: \n\n ```\n <!-- Quarkus junit\
          \ specific dependency -->\n <dependency>\n <groupId>io.quarkus</groupId>\n\
          \ <artifactId>quarkus-junit5</artifactId>\n <scope>test</scope>\n </dependency>\n\
          \ ```\n \n "
        variables:
          name: junit.junit
          version: '4.11'
  jaxrs-to-quarkus-00020:
    eap-coolstore-monolith:
      src/main/java/com/redhat/coolstore/rest/RestApplication.java:
      - line_number: 7
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Class
          name: ApplicationPath
          package: com.redhat.coolstore.rest
      - line_number: 8
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/src/main/java/com/redhat/coolstore/rest/RestApplication.java
          kind: Class
          name: RestApplication
          package: com.redhat.coolstore.rest
    ticket-monster:
      backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 15
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 16
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/backend-v1/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: JaxRsActivator
          package: org.jboss.examples.ticketmonster.rest
      backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 15
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 16
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/backend-v2/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: JaxRsActivator
          package: org.jboss.examples.ticketmonster.rest
      monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java:
      - line_number: 15
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: ApplicationPath
          package: org.jboss.examples.ticketmonster.rest
      - line_number: 16
        message: "\n JAX-RS activation is no longer necessary. You can set a root\
          \ path like this but you don't have to.\n "
        variables:
          file: file:///tmp/source-code/monolith/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
          kind: Class
          name: JaxRsActivator
          package: org.jboss.examples.ticketmonster.rest
  quarkus-agroal-00000:
    bmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    cmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    greeter:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    tasks-qute:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
  quarkus-agroal-00010:
    bmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    cmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    greeter:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    tasks-qute:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.agroal:agroal-api` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-agroal` \n Further information in the link\
          \ below.\n "
        variables:
          name: io.agroal.agroal-api
          version: '2.1'
  quarkus-config-yaml-00000:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.smallrye.config:smallrye-config-source-yaml`\
          \ dependency with the Quarkus dependency `io.quarkus:quarkus-config-yaml`\
          \ \n Further information in the link below.\n "
        variables:
          name: io.smallrye.config.smallrye-config-source-yaml
          version: 3.3.3
  quarkus-config-yaml-00010:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `io.smallrye.config:smallrye-config-source-yaml`\
          \ dependency with the Quarkus dependency `io.quarkus:quarkus-config-yaml`\
          \ \n Further information in the link below.\n "
        variables:
          name: io.smallrye.config.smallrye-config-source-yaml
          version: 3.3.3
  quarkus-flyway-00000:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 31
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.flywaydb.flyway-core
          version: 4.1.2
      - line_number: null
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.flywaydb.flyway-core
          version: 9.21.0
  quarkus-flyway-00010:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: 31
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.flywaydb.flyway-core
          version: 4.1.2
      - line_number: null
        message: "\n Replace the `org.flywaydb:flyway-core` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-flyway` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.flywaydb.flyway-core
          version: 9.21.0
  quarkus-hibernate-validator-00000:
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.hibernate.validator:hibernate-validator` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-hibernate-validator` \n\
          \ Further information in the link below.\n "
        variables:
          name: org.hibernate.validator.hibernate-validator
          version: 8.0.1.Final
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.hibernate.validator:hibernate-validator` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-hibernate-validator` \n\
          \ Further information in the link below.\n "
        variables:
          name: org.hibernate.validator.hibernate-validator
          version: 8.0.1.Final
  quarkus-hibernate-validator-00010:
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.hibernate.validator:hibernate-validator` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-hibernate-validator` \n\
          \ Further information in the link below.\n "
        variables:
          name: org.hibernate.validator.hibernate-validator
          version: 8.0.1.Final
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.hibernate.validator:hibernate-validator` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-hibernate-validator` \n\
          \ Further information in the link below.\n "
        variables:
          name: org.hibernate.validator.hibernate-validator
          version: 8.0.1.Final
  quarkus-jdbc-mysql-00000:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `mysql:mysql-connector-java` dependency with the\
          \ Quarkus dependency `io.quarkus:quarkus-jdbc-mysql` \n Further information\
          \ in the link below.\n "
        variables:
          name: mysql.mysql-connector-java
          version: 8.0.30
  quarkus-jdbc-mysql-00010:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `mysql:mysql-connector-java` dependency with the\
          \ Quarkus dependency `io.quarkus:quarkus-jdbc-mysql` \n Further information\
          \ in the link below.\n "
        variables:
          name: mysql.mysql-connector-java
          version: 8.0.30
  quarkus-jdbc-postgresql-00000:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.postgresql:postgresql` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-jdbc-postgresql` \n Further information\
          \ in the link below.\n "
        variables:
          name: org.postgresql.postgresql
          version: 42.6.0
  quarkus-jdbc-postgresql-00010:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.postgresql:postgresql` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-jdbc-postgresql` \n Further information\
          \ in the link below.\n "
        variables:
          name: org.postgresql.postgresql
          version: 42.6.0
  quarkus-jsonb-00000:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.eclipse:yasson` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-jsonb` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.eclipse.yasson
          version: 3.0.3
  quarkus-jsonb-00010:
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.eclipse:yasson` dependency with the Quarkus\
          \ dependency `io.quarkus:quarkus-jsonb` \n Further information in the link\
          \ below.\n "
        variables:
          name: org.eclipse.yasson
          version: 3.0.3
  quarkus-narayana-jta-00000:
    bmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    cmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    greeter:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 6.0.1.Final
    tasks-qute:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
  quarkus-narayana-jta-00010:
    bmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    cmt:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    eap-coolstore-monolith:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    greeter:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    kitchensink:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 6.0.1.Final
    tasks-qute:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the `org.jboss.narayana.jta:narayana-jta` dependency\
          \ with the Quarkus dependency `io.quarkus:quarkus-narayana-jta` \n Further\
          \ information in the link below.\n "
        variables:
          name: org.jboss.narayana.jta.narayana-jta
          version: 7.0.0.Final
  springboot-actuator-to-quarkus-0100:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the Spring Boot Actuator dependency with Quarkus Smallrye\
          \ Health extension. \n It has to be replaced by `io.quarkus:quarkus-smallrye-health`\
          \ artifact.\n "
        variables:
          name: org.springframework.boot.spring-boot-starter-actuator
          version: 1.5.6.RELEASE
  springboot-annotations-to-quarkus-00000:
    ticket-monster:
      orders-service/src/main/java/org/ticketmonster/orders/Application.java:
      - line_number: 26
        message: "\n Remove the SpringBoot @SpringBootApplication annotation.\n\n\
          \ A Spring Boot application contains a \"main\" class with the @SpringBootApplication\
          \ annotation. A Quarkus application does not have such a class. Two different\
          \ alternatives can be followed - either\n to remove the \"main\" class associated\
          \ with the annotation, or add the `org.springframework.boot:spring-boot-autoconfigure`\
          \ dependency as an `optional` Maven dependency. An optional dependency \n\
          \ is available when an application compiles but is not packaged with the\
          \ application at runtime. Doing this would allow the application to compile\
          \ without modification, but you\n would also need to maintain a Spring version\
          \ along with the Quarkus application.\n "
        variables:
          file: file:///tmp/source-code/orders-service/src/main/java/org/ticketmonster/orders/Application.java
          kind: Class
          name: SpringBootApplication
          package: org.ticketmonster.orders
  springboot-di-to-quarkus-00000:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the SpringBoot Dependency Injection artifact with Quarkus\
          \ `spring-di` extension\n\n Spring DI is in spring-beans artifact brought\
          \ transitively by any `org.springframework.boot:spring-boot-*` dependency\n\
          \ Add Quarkus dependency `io.quarkus:quarkus-spring-di`\n "
        variables:
          name: org.springframework.spring-beans
          version: 4.3.10.RELEASE
  springboot-jpa-to-quarkus-00000:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the SpringBoot JPA artifact with Quarkus `spring-data-jpa`\
          \ extension\n\n Spring Data JPA is in spring-data-jpa artifact brought transitively\
          \ by any `org.springframework.data:spring-data-*` dependency \n Add Quarkus\
          \ dependency `io.quarkus:quarkus-spring-data-jpa`\n "
        variables:
          name: org.springframework.data.spring-data-jpa
          version: 1.11.6.RELEASE
  springboot-plugins-to-quarkus-0000:
    ticket-monster:
      orders-service/pom.xml:
      - line_number: 97
        message: "\n Replace the `spring-boot-maven-plugin` dependency.\n The `spring-boot-maven-plugin`\
          \ dependency needs to be replaced with `quarkus-maven-plugin`, so that the\
          \ application is built with Quarkus, both for running on the JVM and in\
          \ native mode.\n "
        variables:
          data: plugin
          innerText: "\n        org.springframework.boot\n        spring-boot-maven-plugin\n\
            \        ${spring-boot.version}\n        \n          \n            \n\
            \              repackage\n            \n          \n        \n       \
            \ \n          exec\n        \n      "
          matchingXML: <groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId><version>${spring-boot.version}</version><executions><execution><goals><goal>repackage</goal></goals></execution></executions><configuration><classifier>exec</classifier></configuration>
  springboot-properties-to-quarkus-00000:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the SpringBoot artifact with Quarkus `spring-boot-properties`\
          \ extension\n\n Spring Configuration Properties is in spring-boot artifact\
          \ brought transitively by any `org.springframework.boot:spring-boot-*` dependency\n\
          \ Add Quarkus dependency `io.quarkus:quarkus-spring-boot-properties`\n "
        variables:
          name: org.springframework.boot.spring-boot
          version: 1.5.6.RELEASE
  springboot-properties-to-quarkus-00002:
    ticket-monster:
      orders-service/src/main/resources/application-kube.properties:
      - line_number: 1
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 2
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 3
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 4
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 6
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 7
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 8
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 9
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      orders-service/src/main/resources/application-mysql.properties:
      - line_number: 1
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 2
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 3
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 4
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 6
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 7
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 8
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 9
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      orders-service/target/classes/application-kube.properties:
      - line_number: 1
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 2
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 3
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 4
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 6
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 7
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 8
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 9
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      orders-service/target/classes/application-mysql.properties:
      - line_number: 1
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 2
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 3
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 4
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 6
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 7
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 8
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
      - line_number: 9
        message: "\n Spring datasource property key/value pairs have been detected\
          \ in the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus datasource properties.\n "
        variables:
          matchingText: spring.datasource
  springboot-properties-to-quarkus-00003:
    ticket-monster:
      orders-service/src/main/resources/application.properties:
      - line_number: 7
        message: "\n Spring log level property configuration have been detected in\
          \ the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus log level properties.\n "
        variables:
          matchingText: logging.level.org.springframework
      orders-service/src/test/resources/application.properties:
      - line_number: 3
        message: "\n Spring log level property configuration have been detected in\
          \ the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus log level properties.\n "
        variables:
          matchingText: logging.level.org.springframework
      orders-service/target/classes/application.properties:
      - line_number: 7
        message: "\n Spring log level property configuration have been detected in\
          \ the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus log level properties.\n "
        variables:
          matchingText: logging.level.org.springframework
      orders-service/target/test-classes/application.properties:
      - line_number: 3
        message: "\n Spring log level property configuration have been detected in\
          \ the application property file.\n\n View advice in the Quarkus datasource\
          \ guide to convert these to Quarkus log level properties.\n "
        variables:
          matchingText: logging.level.org.springframework
  springboot-web-to-quarkus-00000:
    ticket-monster:
      pom.xml:
      - line_number: null
        message: "\n Replace the Spring Web artifact with Quarkus `spring-web` extension\n\
          \n Spring Web is a spring-web artifact brought transitively by any `org.springframework:spring-web*`\
          \ dependency \n Add Quarkus dependency `io.quarkus:quarkus-spring-web` \n\
          \ \n Starting with Quarkus version 2.5, the underlying JAX-RS engine must\
          \ be chosen. For performance reasons,\n the `quarkus-resteasy-reactive-jackson`\
          \ dependency should be used.\n "
        variables:
          name: org.springframework.spring-web
          version: 4.3.10.RELEASE
