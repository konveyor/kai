- category: mandatory
  customVariables: []
  description: WebLogic proprietary web service implementation class
  effort: 1
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
  links:
    - title: Developing JAX-WS Web Services
      url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#developing_jax_ws_web_services
  message:
    "\n \n This web service stub uses the WebLogic proprietary web service
    implementation class (\"weblogic.wsee.jaxrpc.ServiceImpl\").\n It might have been
    generated by a WebLogic proprietary tool.\n\n This should be replaced using the
    standard Java EE JAX-WS framework. It could be regenerated using the JBoss web
    services tools.\n Please refer to the [Developing JAX-WS Web Services](https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#developing_jax_ws_web_services)
    guide for more information.\n \n "
  ruleID: weblogic-webservices-eap7-01000
  when:
    java.referenced:
      location: INHERITANCE
      pattern: weblogic.wsee.jaxrpc.ServiceImpl
- category: mandatory
  customVariables: []
  description: WebLogic asynchronous web service client
  effort: 3
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
    - client
  links:
    - title: WebLogic Asynchronous Execution Documentation
      url: https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm
    - title: JAX-WS Web Service Clients
      url: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html
  message:
    "\n \n The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm)
    should be replaced using calls to the JAX-WS asynchronous API.\n\n More information
    is available in the [JAX-WS Web Service Clients](https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html/Development_Guide/sect-JAX-WS_Web_Service_Clients.html).\n
    \n "
  ruleID: weblogic-webservices-eap7-02000
  when:
    java.referenced:
      pattern: weblogic.wsee.async.AsyncPreCallContext
- category: mandatory
  customVariables: []
  description: WebLogic proprietary web service authentication
  effort: 3
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
    - security
  links:
    - title: Securing JAX-WS Web Services
      url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#ws_sec_ws
  message:
    "\n \n Replace proprietary web-service authentication with JAX-WS standard
    calls. To attach authentication with JBoss EAP, simply use the following code:\n\n
    ```java\n URL wsdlURL = new File(\"resources/jaxws/kai_solution_server/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl\").toURL();\n
    QName qname = new QName(\"http://org.jboss.ws/jaxws/context\", \"TestEndpointService\");\n
    Service service = Service.create(wsdlURL, qname);\n port = (TestEndpoint)service.getPort(TestEndpoint.class);\n\n
    BindingProvider bp = (BindingProvider)port;\n bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,
    \"jsmith\");\n bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, \"PaSSw0rd\");\n
    ```\n \n "
  ruleID: weblogic-webservices-eap7-03000
  when:
    java.referenced:
      location: METHOD_CALL
      pattern: weblogic.wsee.connection.transport.http.HttpTransportInfo.setUsername*
- category: mandatory
  customVariables: []
  description: WebLogic proprietary web services API - weblogic.wsee.context.WebServiceContext
  effort: 1
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
    - context
  links:
    - title: javax.xml.WebServiceContext Documentation
      url: http://docs.oracle.com/javaee/7/api/javax/xml/ws/WebServiceContext.html
  message:
    "\n \n This code uses the WebLogic specific class `weblogic.wsee.context.WebServiceContext`.
    This usage will need to be replaced with the Java Enterprise Edition standard
    `javax.xml.WebServiceContext` interface.\n\n Example code:\n\n ```java\n @Resource\n
    private WebServiceContext webServiceContext;\n ```\n \n "
  ruleID: weblogic-webservices-eap7-04000
  when:
    java.referenced:
      pattern: weblogic.wsee.context.WebServiceContext
- category: mandatory
  customVariables: []
  description: WebLogic proprietary web services API - ContextNotFoundException
  effort: 1
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
    - context
  links: []
  message:
    "\n This exception (`weblogic.wsee.context.ContextNotFoundException`) is
    WebLogic specific and can be removed.\n "
  ruleID: weblogic-webservices-eap7-05000
  when:
    java.referenced:
      pattern: weblogic.wsee.context.ContextNotFoundException
- category: mandatory
  customVariables: []
  description: WebLogic proprietary web services generated client classes
  effort: 1
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
    - client
  links:
    - title: Oracle ClientGen Ant Task Reference
      url: https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270
    - title: Developing Web Services Applications - Using JAX-WS Tools
      url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/developing_web_services_applications/#using_jax_ws_tools
    - title: JAX-WS - wsgen
      url: https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen
    - title: Apache CXF tools
      url: https://cxf.apache.org/docs/tools.html
  message:
    "\n \n This class has been generated by a WebLogic web service client generator
    (ClientGen).\n\n It could be replaced by an equivalent standard Java EE technology
    using for example the EAP 7 wsconsume tool, the wsgen tool or the CXF tools.\n
    \n "
  ruleID: weblogic-webservices-eap7-06000
  when:
    or:
      - java.referenced:
          location: PACKAGE
          pattern: weblogic.wsee.tools.clientgen*
      - java.referenced:
          location: PACKAGE
          pattern: weblogic.webservice*
- category: mandatory
  customVariables: []
  description: WebLogic proprietary web service annotation @Transactional
  effort: 3
  labels:
    - konveyor.io/source=weblogic
    - konveyor.io/target=eap7
    - konveyor.io/target=eap
    - webservice
    - weblogic
  links:
    - title: WebLogic-specific Annotations - Transactional
      url: https://docs.oracle.com/middleware/11119/wls/WSREF/annotations.htm#i1058163
    - title: JBoss EAP 7 - API TransactionAttribute
      url: https://access.redhat.com/webassets/avalon/d/red-hat-jboss-enterprise-application-platform/7.0.0/javadocs/javax/ejb/TransactionAttribute.html
  message:
    "\n \n Replace WebLogic proprietary web-service annotation `@Transactional`
    by the standard Java EE annotation `@TransactionAttribute`.\n \n "
  ruleID: weblogic-webservices-07000
  when:
    java.referenced:
      location: ANNOTATION
      pattern: weblogic.jws.Transactional
